// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Decco = require("decco/src/Decco.bs.js");
var Js_dict = require("rescript/lib/js/js_dict.js");
var Js_json = require("rescript/lib/js/js_json.js");
var Belt_Array = require("rescript/lib/js/belt_Array.js");
var Belt_Option = require("rescript/lib/js/belt_Option.js");
var Belt_Result = require("rescript/lib/js/belt_Result.js");
var ConverterTypes = require("./ConverterTypes.bs.js");

function transferData_decode(v) {
  var dict = Js_json.classify(v);
  if (typeof dict === "number") {
    return Decco.error(undefined, "Not an object", v);
  }
  if (dict.TAG !== /* JSONObject */2) {
    return Decco.error(undefined, "Not an object", v);
  }
  var dict$1 = dict._0;
  var from = ConverterTypes.address_decode(Belt_Option.getWithDefault(Js_dict.get(dict$1, "from"), null));
  if (from.TAG === /* Ok */0) {
    var to = ConverterTypes.address_decode(Belt_Option.getWithDefault(Js_dict.get(dict$1, "to"), null));
    if (to.TAG === /* Ok */0) {
      var amount = ConverterTypes.bn_decode(Belt_Option.getWithDefault(Js_dict.get(dict$1, "amount"), null));
      if (amount.TAG === /* Ok */0) {
        return {
                TAG: /* Ok */0,
                _0: {
                  from: from._0,
                  to: to._0,
                  amount: amount._0
                }
              };
      }
      var e = amount._0;
      return {
              TAG: /* Error */1,
              _0: {
                path: ".amount" + e.path,
                message: e.message,
                value: e.value
              }
            };
    }
    var e$1 = to._0;
    return {
            TAG: /* Error */1,
            _0: {
              path: ".to" + e$1.path,
              message: e$1.message,
              value: e$1.value
            }
          };
  }
  var e$2 = from._0;
  return {
          TAG: /* Error */1,
          _0: {
            path: ".from" + e$2.path,
            message: e$2.message,
            value: e$2.value
          }
        };
}

function priceUpdateData_decode(v) {
  var dict = Js_json.classify(v);
  if (typeof dict === "number") {
    return Decco.error(undefined, "Not an object", v);
  }
  if (dict.TAG !== /* JSONObject */2) {
    return Decco.error(undefined, "Not an object", v);
  }
  var dict$1 = dict._0;
  var marketIndex = ConverterTypes.bn_decode(Belt_Option.getWithDefault(Js_dict.get(dict$1, "marketIndex"), null));
  if (marketIndex.TAG === /* Ok */0) {
    var newPrice = ConverterTypes.bn_decode(Belt_Option.getWithDefault(Js_dict.get(dict$1, "newPrice"), null));
    if (newPrice.TAG === /* Ok */0) {
      var oldPrice = ConverterTypes.bn_decode(Belt_Option.getWithDefault(Js_dict.get(dict$1, "oldPrice"), null));
      if (oldPrice.TAG === /* Ok */0) {
        var user = ConverterTypes.address_decode(Belt_Option.getWithDefault(Js_dict.get(dict$1, "user"), null));
        if (user.TAG === /* Ok */0) {
          return {
                  TAG: /* Ok */0,
                  _0: {
                    marketIndex: marketIndex._0,
                    newPrice: newPrice._0,
                    oldPrice: oldPrice._0,
                    user: user._0
                  }
                };
        }
        var e = user._0;
        return {
                TAG: /* Error */1,
                _0: {
                  path: ".user" + e.path,
                  message: e.message,
                  value: e.value
                }
              };
      }
      var e$1 = oldPrice._0;
      return {
              TAG: /* Error */1,
              _0: {
                path: ".oldPrice" + e$1.path,
                message: e$1.message,
                value: e$1.value
              }
            };
    }
    var e$2 = newPrice._0;
    return {
            TAG: /* Error */1,
            _0: {
              path: ".newPrice" + e$2.path,
              message: e$2.message,
              value: e$2.value
            }
          };
  }
  var e$3 = marketIndex._0;
  return {
          TAG: /* Error */1,
          _0: {
            path: ".marketIndex" + e$3.path,
            message: e$3.message,
            value: e$3.value
          }
        };
}

function tokenPriceRefreshedData_decode(v) {
  var dict = Js_json.classify(v);
  if (typeof dict === "number") {
    return Decco.error(undefined, "Not an object", v);
  }
  if (dict.TAG !== /* JSONObject */2) {
    return Decco.error(undefined, "Not an object", v);
  }
  var dict$1 = dict._0;
  var marketIndex = ConverterTypes.bn_decode(Belt_Option.getWithDefault(Js_dict.get(dict$1, "marketIndex"), null));
  if (marketIndex.TAG === /* Ok */0) {
    var longTokenPrice = ConverterTypes.bn_decode(Belt_Option.getWithDefault(Js_dict.get(dict$1, "longTokenPrice"), null));
    if (longTokenPrice.TAG === /* Ok */0) {
      var shortTokenPrice = ConverterTypes.bn_decode(Belt_Option.getWithDefault(Js_dict.get(dict$1, "shortTokenPrice"), null));
      if (shortTokenPrice.TAG === /* Ok */0) {
        return {
                TAG: /* Ok */0,
                _0: {
                  marketIndex: marketIndex._0,
                  longTokenPrice: longTokenPrice._0,
                  shortTokenPrice: shortTokenPrice._0
                }
              };
      }
      var e = shortTokenPrice._0;
      return {
              TAG: /* Error */1,
              _0: {
                path: ".shortTokenPrice" + e.path,
                message: e.message,
                value: e.value
              }
            };
    }
    var e$1 = longTokenPrice._0;
    return {
            TAG: /* Error */1,
            _0: {
              path: ".longTokenPrice" + e$1.path,
              message: e$1.message,
              value: e$1.value
            }
          };
  }
  var e$2 = marketIndex._0;
  return {
          TAG: /* Error */1,
          _0: {
            path: ".marketIndex" + e$2.path,
            message: e$2.message,
            value: e$2.value
          }
        };
}

function valueLockedInSystemData_decode(v) {
  var dict = Js_json.classify(v);
  if (typeof dict === "number") {
    return Decco.error(undefined, "Not an object", v);
  }
  if (dict.TAG !== /* JSONObject */2) {
    return Decco.error(undefined, "Not an object", v);
  }
  var dict$1 = dict._0;
  var marketIndex = ConverterTypes.bn_decode(Belt_Option.getWithDefault(Js_dict.get(dict$1, "marketIndex"), null));
  if (marketIndex.TAG === /* Ok */0) {
    var totalValueLockedInMarket = ConverterTypes.bn_decode(Belt_Option.getWithDefault(Js_dict.get(dict$1, "totalValueLockedInMarket"), null));
    if (totalValueLockedInMarket.TAG === /* Ok */0) {
      var longValue = ConverterTypes.bn_decode(Belt_Option.getWithDefault(Js_dict.get(dict$1, "longValue"), null));
      if (longValue.TAG === /* Ok */0) {
        var shortValue = ConverterTypes.bn_decode(Belt_Option.getWithDefault(Js_dict.get(dict$1, "shortValue"), null));
        if (shortValue.TAG === /* Ok */0) {
          return {
                  TAG: /* Ok */0,
                  _0: {
                    marketIndex: marketIndex._0,
                    totalValueLockedInMarket: totalValueLockedInMarket._0,
                    longValue: longValue._0,
                    shortValue: shortValue._0
                  }
                };
        }
        var e = shortValue._0;
        return {
                TAG: /* Error */1,
                _0: {
                  path: ".shortValue" + e.path,
                  message: e.message,
                  value: e.value
                }
              };
      }
      var e$1 = longValue._0;
      return {
              TAG: /* Error */1,
              _0: {
                path: ".longValue" + e$1.path,
                message: e$1.message,
                value: e$1.value
              }
            };
    }
    var e$2 = totalValueLockedInMarket._0;
    return {
            TAG: /* Error */1,
            _0: {
              path: ".totalValueLockedInMarket" + e$2.path,
              message: e$2.message,
              value: e$2.value
            }
          };
  }
  var e$3 = marketIndex._0;
  return {
          TAG: /* Error */1,
          _0: {
            path: ".marketIndex" + e$3.path,
            message: e$3.message,
            value: e$3.value
          }
        };
}

function approvalData_decode(v) {
  var dict = Js_json.classify(v);
  if (typeof dict === "number") {
    return Decco.error(undefined, "Not an object", v);
  }
  if (dict.TAG !== /* JSONObject */2) {
    return Decco.error(undefined, "Not an object", v);
  }
  var dict$1 = dict._0;
  var owner = ConverterTypes.address_decode(Belt_Option.getWithDefault(Js_dict.get(dict$1, "owner"), null));
  if (owner.TAG === /* Ok */0) {
    var spender = ConverterTypes.address_decode(Belt_Option.getWithDefault(Js_dict.get(dict$1, "spender"), null));
    if (spender.TAG === /* Ok */0) {
      var value = ConverterTypes.bn_decode(Belt_Option.getWithDefault(Js_dict.get(dict$1, "value"), null));
      if (value.TAG === /* Ok */0) {
        return {
                TAG: /* Ok */0,
                _0: {
                  owner: owner._0,
                  spender: spender._0,
                  value: value._0
                }
              };
      }
      var e = value._0;
      return {
              TAG: /* Error */1,
              _0: {
                path: ".value" + e.path,
                message: e.message,
                value: e.value
              }
            };
    }
    var e$1 = spender._0;
    return {
            TAG: /* Error */1,
            _0: {
              path: ".spender" + e$1.path,
              message: e$1.message,
              value: e$1.value
            }
          };
  }
  var e$2 = owner._0;
  return {
          TAG: /* Error */1,
          _0: {
            path: ".owner" + e$2.path,
            message: e$2.message,
            value: e$2.value
          }
        };
}

function shortMintedData_decode(v) {
  var dict = Js_json.classify(v);
  if (typeof dict === "number") {
    return Decco.error(undefined, "Not an object", v);
  }
  if (dict.TAG !== /* JSONObject */2) {
    return Decco.error(undefined, "Not an object", v);
  }
  var dict$1 = dict._0;
  var marketIndex = ConverterTypes.bn_decode(Belt_Option.getWithDefault(Js_dict.get(dict$1, "marketIndex"), null));
  if (marketIndex.TAG === /* Ok */0) {
    var depositAdded = ConverterTypes.bn_decode(Belt_Option.getWithDefault(Js_dict.get(dict$1, "depositAdded"), null));
    if (depositAdded.TAG === /* Ok */0) {
      var finalDepositAmount = ConverterTypes.bn_decode(Belt_Option.getWithDefault(Js_dict.get(dict$1, "finalDepositAmount"), null));
      if (finalDepositAmount.TAG === /* Ok */0) {
        var tokensMinted = ConverterTypes.bn_decode(Belt_Option.getWithDefault(Js_dict.get(dict$1, "tokensMinted"), null));
        if (tokensMinted.TAG === /* Ok */0) {
          var user = ConverterTypes.address_decode(Belt_Option.getWithDefault(Js_dict.get(dict$1, "user"), null));
          if (user.TAG === /* Ok */0) {
            return {
                    TAG: /* Ok */0,
                    _0: {
                      marketIndex: marketIndex._0,
                      depositAdded: depositAdded._0,
                      finalDepositAmount: finalDepositAmount._0,
                      tokensMinted: tokensMinted._0,
                      user: user._0
                    }
                  };
          }
          var e = user._0;
          return {
                  TAG: /* Error */1,
                  _0: {
                    path: ".user" + e.path,
                    message: e.message,
                    value: e.value
                  }
                };
        }
        var e$1 = tokensMinted._0;
        return {
                TAG: /* Error */1,
                _0: {
                  path: ".tokensMinted" + e$1.path,
                  message: e$1.message,
                  value: e$1.value
                }
              };
      }
      var e$2 = finalDepositAmount._0;
      return {
              TAG: /* Error */1,
              _0: {
                path: ".finalDepositAmount" + e$2.path,
                message: e$2.message,
                value: e$2.value
              }
            };
    }
    var e$3 = depositAdded._0;
    return {
            TAG: /* Error */1,
            _0: {
              path: ".depositAdded" + e$3.path,
              message: e$3.message,
              value: e$3.value
            }
          };
  }
  var e$4 = marketIndex._0;
  return {
          TAG: /* Error */1,
          _0: {
            path: ".marketIndex" + e$4.path,
            message: e$4.message,
            value: e$4.value
          }
        };
}

function stakeAddedData_decode(v) {
  var dict = Js_json.classify(v);
  if (typeof dict === "number") {
    return Decco.error(undefined, "Not an object", v);
  }
  if (dict.TAG !== /* JSONObject */2) {
    return Decco.error(undefined, "Not an object", v);
  }
  var dict$1 = dict._0;
  var user = ConverterTypes.address_decode(Belt_Option.getWithDefault(Js_dict.get(dict$1, "user"), null));
  if (user.TAG === /* Ok */0) {
    var tokenAddress = ConverterTypes.address_decode(Belt_Option.getWithDefault(Js_dict.get(dict$1, "tokenAddress"), null));
    if (tokenAddress.TAG === /* Ok */0) {
      var amount = ConverterTypes.bn_decode(Belt_Option.getWithDefault(Js_dict.get(dict$1, "amount"), null));
      if (amount.TAG === /* Ok */0) {
        var lastMintIndex = ConverterTypes.bn_decode(Belt_Option.getWithDefault(Js_dict.get(dict$1, "lastMintIndex"), null));
        if (lastMintIndex.TAG === /* Ok */0) {
          return {
                  TAG: /* Ok */0,
                  _0: {
                    user: user._0,
                    tokenAddress: tokenAddress._0,
                    amount: amount._0,
                    lastMintIndex: lastMintIndex._0
                  }
                };
        }
        var e = lastMintIndex._0;
        return {
                TAG: /* Error */1,
                _0: {
                  path: ".lastMintIndex" + e.path,
                  message: e.message,
                  value: e.value
                }
              };
      }
      var e$1 = amount._0;
      return {
              TAG: /* Error */1,
              _0: {
                path: ".amount" + e$1.path,
                message: e$1.message,
                value: e$1.value
              }
            };
    }
    var e$2 = tokenAddress._0;
    return {
            TAG: /* Error */1,
            _0: {
              path: ".tokenAddress" + e$2.path,
              message: e$2.message,
              value: e$2.value
            }
          };
  }
  var e$3 = user._0;
  return {
          TAG: /* Error */1,
          _0: {
            path: ".user" + e$3.path,
            message: e$3.message,
            value: e$3.value
          }
        };
}

function stateAddedData_decode(v) {
  var dict = Js_json.classify(v);
  if (typeof dict === "number") {
    return Decco.error(undefined, "Not an object", v);
  }
  if (dict.TAG !== /* JSONObject */2) {
    return Decco.error(undefined, "Not an object", v);
  }
  var dict$1 = dict._0;
  var tokenAddress = ConverterTypes.address_decode(Belt_Option.getWithDefault(Js_dict.get(dict$1, "tokenAddress"), null));
  if (tokenAddress.TAG === /* Ok */0) {
    var stateIndex = ConverterTypes.bn_decode(Belt_Option.getWithDefault(Js_dict.get(dict$1, "stateIndex"), null));
    if (stateIndex.TAG === /* Ok */0) {
      var timestamp = ConverterTypes.bn_decode(Belt_Option.getWithDefault(Js_dict.get(dict$1, "timestamp"), null));
      if (timestamp.TAG === /* Ok */0) {
        var accumulative = ConverterTypes.bn_decode(Belt_Option.getWithDefault(Js_dict.get(dict$1, "accumulative"), null));
        if (accumulative.TAG === /* Ok */0) {
          return {
                  TAG: /* Ok */0,
                  _0: {
                    tokenAddress: tokenAddress._0,
                    stateIndex: stateIndex._0,
                    timestamp: timestamp._0,
                    accumulative: accumulative._0
                  }
                };
        }
        var e = accumulative._0;
        return {
                TAG: /* Error */1,
                _0: {
                  path: ".accumulative" + e.path,
                  message: e.message,
                  value: e.value
                }
              };
      }
      var e$1 = timestamp._0;
      return {
              TAG: /* Error */1,
              _0: {
                path: ".timestamp" + e$1.path,
                message: e$1.message,
                value: e$1.value
              }
            };
    }
    var e$2 = stateIndex._0;
    return {
            TAG: /* Error */1,
            _0: {
              path: ".stateIndex" + e$2.path,
              message: e$2.message,
              value: e$2.value
            }
          };
  }
  var e$3 = tokenAddress._0;
  return {
          TAG: /* Error */1,
          _0: {
            path: ".tokenAddress" + e$3.path,
            message: e$3.message,
            value: e$3.value
          }
        };
}

function shortRedeemData_decode(v) {
  var dict = Js_json.classify(v);
  if (typeof dict === "number") {
    return Decco.error(undefined, "Not an object", v);
  }
  if (dict.TAG !== /* JSONObject */2) {
    return Decco.error(undefined, "Not an object", v);
  }
  var dict$1 = dict._0;
  var marketIndex = ConverterTypes.bn_decode(Belt_Option.getWithDefault(Js_dict.get(dict$1, "marketIndex"), null));
  if (marketIndex.TAG === /* Ok */0) {
    var tokensRedeemed = ConverterTypes.bn_decode(Belt_Option.getWithDefault(Js_dict.get(dict$1, "tokensRedeemed"), null));
    if (tokensRedeemed.TAG === /* Ok */0) {
      var valueOfRedemption = ConverterTypes.bn_decode(Belt_Option.getWithDefault(Js_dict.get(dict$1, "valueOfRedemption"), null));
      if (valueOfRedemption.TAG === /* Ok */0) {
        var finalRedeem = ConverterTypes.bn_decode(Belt_Option.getWithDefault(Js_dict.get(dict$1, "finalRedeem"), null));
        if (finalRedeem.TAG === /* Ok */0) {
          var user = ConverterTypes.address_decode(Belt_Option.getWithDefault(Js_dict.get(dict$1, "user"), null));
          if (user.TAG === /* Ok */0) {
            return {
                    TAG: /* Ok */0,
                    _0: {
                      marketIndex: marketIndex._0,
                      tokensRedeemed: tokensRedeemed._0,
                      valueOfRedemption: valueOfRedemption._0,
                      finalRedeem: finalRedeem._0,
                      user: user._0
                    }
                  };
          }
          var e = user._0;
          return {
                  TAG: /* Error */1,
                  _0: {
                    path: ".user" + e.path,
                    message: e.message,
                    value: e.value
                  }
                };
        }
        var e$1 = finalRedeem._0;
        return {
                TAG: /* Error */1,
                _0: {
                  path: ".finalRedeem" + e$1.path,
                  message: e$1.message,
                  value: e$1.value
                }
              };
      }
      var e$2 = valueOfRedemption._0;
      return {
              TAG: /* Error */1,
              _0: {
                path: ".valueOfRedemption" + e$2.path,
                message: e$2.message,
                value: e$2.value
              }
            };
    }
    var e$3 = tokensRedeemed._0;
    return {
            TAG: /* Error */1,
            _0: {
              path: ".tokensRedeemed" + e$3.path,
              message: e$3.message,
              value: e$3.value
            }
          };
  }
  var e$4 = marketIndex._0;
  return {
          TAG: /* Error */1,
          _0: {
            path: ".marketIndex" + e$4.path,
            message: e$4.message,
            value: e$4.value
          }
        };
}

function longMintedData_decode(v) {
  var dict = Js_json.classify(v);
  if (typeof dict === "number") {
    return Decco.error(undefined, "Not an object", v);
  }
  if (dict.TAG !== /* JSONObject */2) {
    return Decco.error(undefined, "Not an object", v);
  }
  var dict$1 = dict._0;
  var marketIndex = ConverterTypes.bn_decode(Belt_Option.getWithDefault(Js_dict.get(dict$1, "marketIndex"), null));
  if (marketIndex.TAG === /* Ok */0) {
    var depositAdded = ConverterTypes.bn_decode(Belt_Option.getWithDefault(Js_dict.get(dict$1, "depositAdded"), null));
    if (depositAdded.TAG === /* Ok */0) {
      var finalDepositAmount = ConverterTypes.bn_decode(Belt_Option.getWithDefault(Js_dict.get(dict$1, "finalDepositAmount"), null));
      if (finalDepositAmount.TAG === /* Ok */0) {
        var tokensMinted = ConverterTypes.bn_decode(Belt_Option.getWithDefault(Js_dict.get(dict$1, "tokensMinted"), null));
        if (tokensMinted.TAG === /* Ok */0) {
          var user = ConverterTypes.address_decode(Belt_Option.getWithDefault(Js_dict.get(dict$1, "user"), null));
          if (user.TAG === /* Ok */0) {
            return {
                    TAG: /* Ok */0,
                    _0: {
                      marketIndex: marketIndex._0,
                      depositAdded: depositAdded._0,
                      finalDepositAmount: finalDepositAmount._0,
                      tokensMinted: tokensMinted._0,
                      user: user._0
                    }
                  };
          }
          var e = user._0;
          return {
                  TAG: /* Error */1,
                  _0: {
                    path: ".user" + e.path,
                    message: e.message,
                    value: e.value
                  }
                };
        }
        var e$1 = tokensMinted._0;
        return {
                TAG: /* Error */1,
                _0: {
                  path: ".tokensMinted" + e$1.path,
                  message: e$1.message,
                  value: e$1.value
                }
              };
      }
      var e$2 = finalDepositAmount._0;
      return {
              TAG: /* Error */1,
              _0: {
                path: ".finalDepositAmount" + e$2.path,
                message: e$2.message,
                value: e$2.value
              }
            };
    }
    var e$3 = depositAdded._0;
    return {
            TAG: /* Error */1,
            _0: {
              path: ".depositAdded" + e$3.path,
              message: e$3.message,
              value: e$3.value
            }
          };
  }
  var e$4 = marketIndex._0;
  return {
          TAG: /* Error */1,
          _0: {
            path: ".marketIndex" + e$4.path,
            message: e$4.message,
            value: e$4.value
          }
        };
}

function longRedeemData_decode(v) {
  var dict = Js_json.classify(v);
  if (typeof dict === "number") {
    return Decco.error(undefined, "Not an object", v);
  }
  if (dict.TAG !== /* JSONObject */2) {
    return Decco.error(undefined, "Not an object", v);
  }
  var dict$1 = dict._0;
  var marketIndex = ConverterTypes.bn_decode(Belt_Option.getWithDefault(Js_dict.get(dict$1, "marketIndex"), null));
  if (marketIndex.TAG === /* Ok */0) {
    var tokensRedeemed = ConverterTypes.bn_decode(Belt_Option.getWithDefault(Js_dict.get(dict$1, "tokensRedeemed"), null));
    if (tokensRedeemed.TAG === /* Ok */0) {
      var valueOfRedemption = ConverterTypes.bn_decode(Belt_Option.getWithDefault(Js_dict.get(dict$1, "valueOfRedemption"), null));
      if (valueOfRedemption.TAG === /* Ok */0) {
        var finalRedeem = ConverterTypes.bn_decode(Belt_Option.getWithDefault(Js_dict.get(dict$1, "finalRedeem"), null));
        if (finalRedeem.TAG === /* Ok */0) {
          var user = ConverterTypes.address_decode(Belt_Option.getWithDefault(Js_dict.get(dict$1, "user"), null));
          if (user.TAG === /* Ok */0) {
            return {
                    TAG: /* Ok */0,
                    _0: {
                      marketIndex: marketIndex._0,
                      tokensRedeemed: tokensRedeemed._0,
                      valueOfRedemption: valueOfRedemption._0,
                      finalRedeem: finalRedeem._0,
                      user: user._0
                    }
                  };
          }
          var e = user._0;
          return {
                  TAG: /* Error */1,
                  _0: {
                    path: ".user" + e.path,
                    message: e.message,
                    value: e.value
                  }
                };
        }
        var e$1 = finalRedeem._0;
        return {
                TAG: /* Error */1,
                _0: {
                  path: ".finalRedeem" + e$1.path,
                  message: e$1.message,
                  value: e$1.value
                }
              };
      }
      var e$2 = valueOfRedemption._0;
      return {
              TAG: /* Error */1,
              _0: {
                path: ".valueOfRedemption" + e$2.path,
                message: e$2.message,
                value: e$2.value
              }
            };
    }
    var e$3 = tokensRedeemed._0;
    return {
            TAG: /* Error */1,
            _0: {
              path: ".tokensRedeemed" + e$3.path,
              message: e$3.message,
              value: e$3.value
            }
          };
  }
  var e$4 = marketIndex._0;
  return {
          TAG: /* Error */1,
          _0: {
            path: ".marketIndex" + e$4.path,
            message: e$4.message,
            value: e$4.value
          }
        };
}

function deployV1Data_decode(v) {
  var dict = Js_json.classify(v);
  if (typeof dict === "number") {
    return Decco.error(undefined, "Not an object", v);
  }
  if (dict.TAG !== /* JSONObject */2) {
    return Decco.error(undefined, "Not an object", v);
  }
  var floatAddress = ConverterTypes.address_decode(Belt_Option.getWithDefault(Js_dict.get(dict._0, "floatAddress"), null));
  if (floatAddress.TAG === /* Ok */0) {
    return {
            TAG: /* Ok */0,
            _0: {
              floatAddress: floatAddress._0
            }
          };
  }
  var e = floatAddress._0;
  return {
          TAG: /* Error */1,
          _0: {
            path: ".floatAddress" + e.path,
            message: e.message,
            value: e.value
          }
        };
}

function feesChangesData_decode(v) {
  var dict = Js_json.classify(v);
  if (typeof dict === "number") {
    return Decco.error(undefined, "Not an object", v);
  }
  if (dict.TAG !== /* JSONObject */2) {
    return Decco.error(undefined, "Not an object", v);
  }
  var dict$1 = dict._0;
  var marketIndex = ConverterTypes.bn_decode(Belt_Option.getWithDefault(Js_dict.get(dict$1, "marketIndex"), null));
  if (marketIndex.TAG === /* Ok */0) {
    var baseEntryFee = ConverterTypes.bn_decode(Belt_Option.getWithDefault(Js_dict.get(dict$1, "baseEntryFee"), null));
    if (baseEntryFee.TAG === /* Ok */0) {
      var badLiquidityEntryFee = ConverterTypes.bn_decode(Belt_Option.getWithDefault(Js_dict.get(dict$1, "badLiquidityEntryFee"), null));
      if (badLiquidityEntryFee.TAG === /* Ok */0) {
        var baseExitFee = ConverterTypes.bn_decode(Belt_Option.getWithDefault(Js_dict.get(dict$1, "baseExitFee"), null));
        if (baseExitFee.TAG === /* Ok */0) {
          var badLiquidityExitFee = ConverterTypes.bn_decode(Belt_Option.getWithDefault(Js_dict.get(dict$1, "badLiquidityExitFee"), null));
          if (badLiquidityExitFee.TAG === /* Ok */0) {
            return {
                    TAG: /* Ok */0,
                    _0: {
                      marketIndex: marketIndex._0,
                      baseEntryFee: baseEntryFee._0,
                      badLiquidityEntryFee: badLiquidityEntryFee._0,
                      baseExitFee: baseExitFee._0,
                      badLiquidityExitFee: badLiquidityExitFee._0
                    }
                  };
          }
          var e = badLiquidityExitFee._0;
          return {
                  TAG: /* Error */1,
                  _0: {
                    path: ".badLiquidityExitFee" + e.path,
                    message: e.message,
                    value: e.value
                  }
                };
        }
        var e$1 = baseExitFee._0;
        return {
                TAG: /* Error */1,
                _0: {
                  path: ".baseExitFee" + e$1.path,
                  message: e$1.message,
                  value: e$1.value
                }
              };
      }
      var e$2 = badLiquidityEntryFee._0;
      return {
              TAG: /* Error */1,
              _0: {
                path: ".badLiquidityEntryFee" + e$2.path,
                message: e$2.message,
                value: e$2.value
              }
            };
    }
    var e$3 = baseEntryFee._0;
    return {
            TAG: /* Error */1,
            _0: {
              path: ".baseEntryFee" + e$3.path,
              message: e$3.message,
              value: e$3.value
            }
          };
  }
  var e$4 = marketIndex._0;
  return {
          TAG: /* Error */1,
          _0: {
            path: ".marketIndex" + e$4.path,
            message: e$4.message,
            value: e$4.value
          }
        };
}

function syntheticTokenCreatedData_decode(v) {
  var dict = Js_json.classify(v);
  if (typeof dict === "number") {
    return Decco.error(undefined, "Not an object", v);
  }
  if (dict.TAG !== /* JSONObject */2) {
    return Decco.error(undefined, "Not an object", v);
  }
  var dict$1 = dict._0;
  var marketIndex = ConverterTypes.bn_decode(Belt_Option.getWithDefault(Js_dict.get(dict$1, "marketIndex"), null));
  if (marketIndex.TAG === /* Ok */0) {
    var longTokenAddress = ConverterTypes.address_decode(Belt_Option.getWithDefault(Js_dict.get(dict$1, "longTokenAddress"), null));
    if (longTokenAddress.TAG === /* Ok */0) {
      var shortTokenAddress = ConverterTypes.address_decode(Belt_Option.getWithDefault(Js_dict.get(dict$1, "shortTokenAddress"), null));
      if (shortTokenAddress.TAG === /* Ok */0) {
        var assetPrice = ConverterTypes.bn_decode(Belt_Option.getWithDefault(Js_dict.get(dict$1, "assetPrice"), null));
        if (assetPrice.TAG === /* Ok */0) {
          var name = Decco.stringFromJson(Belt_Option.getWithDefault(Js_dict.get(dict$1, "name"), null));
          if (name.TAG === /* Ok */0) {
            var symbol = Decco.stringFromJson(Belt_Option.getWithDefault(Js_dict.get(dict$1, "symbol"), null));
            if (symbol.TAG === /* Ok */0) {
              var oracleAddress = ConverterTypes.address_decode(Belt_Option.getWithDefault(Js_dict.get(dict$1, "oracleAddress"), null));
              if (oracleAddress.TAG === /* Ok */0) {
                return {
                        TAG: /* Ok */0,
                        _0: {
                          marketIndex: marketIndex._0,
                          longTokenAddress: longTokenAddress._0,
                          shortTokenAddress: shortTokenAddress._0,
                          assetPrice: assetPrice._0,
                          name: name._0,
                          symbol: symbol._0,
                          oracleAddress: oracleAddress._0
                        }
                      };
              }
              var e = oracleAddress._0;
              return {
                      TAG: /* Error */1,
                      _0: {
                        path: ".oracleAddress" + e.path,
                        message: e.message,
                        value: e.value
                      }
                    };
            }
            var e$1 = symbol._0;
            return {
                    TAG: /* Error */1,
                    _0: {
                      path: ".symbol" + e$1.path,
                      message: e$1.message,
                      value: e$1.value
                    }
                  };
          }
          var e$2 = name._0;
          return {
                  TAG: /* Error */1,
                  _0: {
                    path: ".name" + e$2.path,
                    message: e$2.message,
                    value: e$2.value
                  }
                };
        }
        var e$3 = assetPrice._0;
        return {
                TAG: /* Error */1,
                _0: {
                  path: ".assetPrice" + e$3.path,
                  message: e$3.message,
                  value: e$3.value
                }
              };
      }
      var e$4 = shortTokenAddress._0;
      return {
              TAG: /* Error */1,
              _0: {
                path: ".shortTokenAddress" + e$4.path,
                message: e$4.message,
                value: e$4.value
              }
            };
    }
    var e$5 = longTokenAddress._0;
    return {
            TAG: /* Error */1,
            _0: {
              path: ".longTokenAddress" + e$5.path,
              message: e$5.message,
              value: e$5.value
            }
          };
  }
  var e$6 = marketIndex._0;
  return {
          TAG: /* Error */1,
          _0: {
            path: ".marketIndex" + e$6.path,
            message: e$6.message,
            value: e$6.value
          }
        };
}

function floatMintedData_decode(v) {
  var dict = Js_json.classify(v);
  if (typeof dict === "number") {
    return Decco.error(undefined, "Not an object", v);
  }
  if (dict.TAG !== /* JSONObject */2) {
    return Decco.error(undefined, "Not an object", v);
  }
  var dict$1 = dict._0;
  var user = ConverterTypes.address_decode(Belt_Option.getWithDefault(Js_dict.get(dict$1, "user"), null));
  if (user.TAG === /* Ok */0) {
    var tokenAddress = ConverterTypes.address_decode(Belt_Option.getWithDefault(Js_dict.get(dict$1, "tokenAddress"), null));
    if (tokenAddress.TAG === /* Ok */0) {
      var amount = ConverterTypes.bn_decode(Belt_Option.getWithDefault(Js_dict.get(dict$1, "amount"), null));
      if (amount.TAG === /* Ok */0) {
        var lastMintIndex = ConverterTypes.bn_decode(Belt_Option.getWithDefault(Js_dict.get(dict$1, "lastMintIndex"), null));
        if (lastMintIndex.TAG === /* Ok */0) {
          return {
                  TAG: /* Ok */0,
                  _0: {
                    user: user._0,
                    tokenAddress: tokenAddress._0,
                    amount: amount._0,
                    lastMintIndex: lastMintIndex._0
                  }
                };
        }
        var e = lastMintIndex._0;
        return {
                TAG: /* Error */1,
                _0: {
                  path: ".lastMintIndex" + e.path,
                  message: e.message,
                  value: e.value
                }
              };
      }
      var e$1 = amount._0;
      return {
              TAG: /* Error */1,
              _0: {
                path: ".amount" + e$1.path,
                message: e$1.message,
                value: e$1.value
              }
            };
    }
    var e$2 = tokenAddress._0;
    return {
            TAG: /* Error */1,
            _0: {
              path: ".tokenAddress" + e$2.path,
              message: e$2.message,
              value: e$2.value
            }
          };
  }
  var e$3 = user._0;
  return {
          TAG: /* Error */1,
          _0: {
            path: ".user" + e$3.path,
            message: e$3.message,
            value: e$3.value
          }
        };
}

function v1Data_decode(v) {
  var dict = Js_json.classify(v);
  if (typeof dict === "number") {
    return Decco.error(undefined, "Not an object", v);
  }
  if (dict.TAG !== /* JSONObject */2) {
    return Decco.error(undefined, "Not an object", v);
  }
  var dict$1 = dict._0;
  var admin = ConverterTypes.address_decode(Belt_Option.getWithDefault(Js_dict.get(dict$1, "admin"), null));
  if (admin.TAG === /* Ok */0) {
    var tokenFactory = ConverterTypes.address_decode(Belt_Option.getWithDefault(Js_dict.get(dict$1, "tokenFactory"), null));
    if (tokenFactory.TAG === /* Ok */0) {
      var staker = ConverterTypes.address_decode(Belt_Option.getWithDefault(Js_dict.get(dict$1, "staker"), null));
      if (staker.TAG === /* Ok */0) {
        return {
                TAG: /* Ok */0,
                _0: {
                  admin: admin._0,
                  tokenFactory: tokenFactory._0,
                  staker: staker._0
                }
              };
      }
      var e = staker._0;
      return {
              TAG: /* Error */1,
              _0: {
                path: ".staker" + e.path,
                message: e.message,
                value: e.value
              }
            };
    }
    var e$1 = tokenFactory._0;
    return {
            TAG: /* Error */1,
            _0: {
              path: ".tokenFactory" + e$1.path,
              message: e$1.message,
              value: e$1.value
            }
          };
  }
  var e$2 = admin._0;
  return {
          TAG: /* Error */1,
          _0: {
            path: ".admin" + e$2.path,
            message: e$2.message,
            value: e$2.value
          }
        };
}

function covertToStateChange(eventName, paramsObject) {
  switch (eventName) {
    case "Approval" :
        return {
                TAG: /* Approval */5,
                _0: Belt_Result.getExn(approvalData_decode(paramsObject))
              };
    case "DeployV1" :
        return {
                TAG: /* DeployV1 */12,
                _0: Belt_Result.getExn(deployV1Data_decode(paramsObject))
              };
    case "FeesChanges" :
        return {
                TAG: /* FeesChanges */13,
                _0: Belt_Result.getExn(feesChangesData_decode(paramsObject))
              };
    case "FloatMinted" :
        return {
                TAG: /* FloatMinted */15,
                _0: Belt_Result.getExn(floatMintedData_decode(paramsObject))
              };
    case "LongMinted" :
        return {
                TAG: /* LongMinted */10,
                _0: Belt_Result.getExn(longMintedData_decode(paramsObject))
              };
    case "LongRedeem" :
        return {
                TAG: /* LongRedeem */11,
                _0: Belt_Result.getExn(longRedeemData_decode(paramsObject))
              };
    case "PriceUpdate" :
        return {
                TAG: /* PriceUpdate */2,
                _0: Belt_Result.getExn(priceUpdateData_decode(paramsObject))
              };
    case "ShortMinted" :
        return {
                TAG: /* ShortMinted */6,
                _0: Belt_Result.getExn(shortMintedData_decode(paramsObject))
              };
    case "ShortRedeem" :
        return {
                TAG: /* ShortRedeem */9,
                _0: Belt_Result.getExn(shortRedeemData_decode(paramsObject))
              };
    case "StakeAdded" :
        return {
                TAG: /* StakeAdded */7,
                _0: Belt_Result.getExn(stakeAddedData_decode(paramsObject))
              };
    case "StateAdded" :
        return {
                TAG: /* StateAdded */8,
                _0: Belt_Result.getExn(stateAddedData_decode(paramsObject))
              };
    case "SyntheticTokenCreated" :
        return {
                TAG: /* SyntheticTokenCreated */14,
                _0: Belt_Result.getExn(syntheticTokenCreatedData_decode(paramsObject))
              };
    case "TokenPriceRefreshed" :
        return {
                TAG: /* TokenPriceRefreshed */3,
                _0: Belt_Result.getExn(tokenPriceRefreshedData_decode(paramsObject))
              };
    case "Transfer" :
        return {
                TAG: /* Transfer */1,
                _0: Belt_Result.getExn(transferData_decode(paramsObject))
              };
    case "V1" :
        return {
                TAG: /* V1 */16,
                _0: Belt_Result.getExn(v1Data_decode(paramsObject))
              };
    case "ValueLockedInSystem" :
        return {
                TAG: /* ValueLockedInSystem */4,
                _0: Belt_Result.getExn(valueLockedInSystemData_decode(paramsObject))
              };
    default:
      return {
              TAG: /* Unclassified */0,
              _0: {
                name: eventName,
                data: paramsObject
              }
            };
  }
}

var emptyEventGroups_allTransferEvents = [];

var emptyEventGroups_allPriceUpdateEvents = [];

var emptyEventGroups_allTokenPriceRefreshedEvents = [];

var emptyEventGroups_allValueLockedInSystemEvents = [];

var emptyEventGroups_allApprovalEvents = [];

var emptyEventGroups_allShortMintedEvents = [];

var emptyEventGroups_allStakeAddedEvents = [];

var emptyEventGroups_allStateAddedEvents = [];

var emptyEventGroups_allShortRedeemEvents = [];

var emptyEventGroups_allLongMintedEvents = [];

var emptyEventGroups_allLongRedeemEvents = [];

var emptyEventGroups_allDeployV1Events = [];

var emptyEventGroups_allFeesChangesEvents = [];

var emptyEventGroups_allSyntheticTokenCreatedEvents = [];

var emptyEventGroups_allFloatMintedEvents = [];

var emptyEventGroups_allV1Events = [];

var emptyEventGroups_allUnclassifiedEvents = [];

var emptyEventGroups = {
  allTransferEvents: emptyEventGroups_allTransferEvents,
  allPriceUpdateEvents: emptyEventGroups_allPriceUpdateEvents,
  allTokenPriceRefreshedEvents: emptyEventGroups_allTokenPriceRefreshedEvents,
  allValueLockedInSystemEvents: emptyEventGroups_allValueLockedInSystemEvents,
  allApprovalEvents: emptyEventGroups_allApprovalEvents,
  allShortMintedEvents: emptyEventGroups_allShortMintedEvents,
  allStakeAddedEvents: emptyEventGroups_allStakeAddedEvents,
  allStateAddedEvents: emptyEventGroups_allStateAddedEvents,
  allShortRedeemEvents: emptyEventGroups_allShortRedeemEvents,
  allLongMintedEvents: emptyEventGroups_allLongMintedEvents,
  allLongRedeemEvents: emptyEventGroups_allLongRedeemEvents,
  allDeployV1Events: emptyEventGroups_allDeployV1Events,
  allFeesChangesEvents: emptyEventGroups_allFeesChangesEvents,
  allSyntheticTokenCreatedEvents: emptyEventGroups_allSyntheticTokenCreatedEvents,
  allFloatMintedEvents: emptyEventGroups_allFloatMintedEvents,
  allV1Events: emptyEventGroups_allV1Events,
  allUnclassifiedEvents: emptyEventGroups_allUnclassifiedEvents
};

function addEventToCorrectGrouping(currentEventGroups, param) {
  var data = param.data;
  var txHash = param.txHash;
  var timestamp = param.timestamp;
  var blockNumber = param.blockNumber;
  switch (data.TAG | 0) {
    case /* Unclassified */0 :
        return {
                allTransferEvents: currentEventGroups.allTransferEvents,
                allPriceUpdateEvents: currentEventGroups.allPriceUpdateEvents,
                allTokenPriceRefreshedEvents: currentEventGroups.allTokenPriceRefreshedEvents,
                allValueLockedInSystemEvents: currentEventGroups.allValueLockedInSystemEvents,
                allApprovalEvents: currentEventGroups.allApprovalEvents,
                allShortMintedEvents: currentEventGroups.allShortMintedEvents,
                allStakeAddedEvents: currentEventGroups.allStakeAddedEvents,
                allStateAddedEvents: currentEventGroups.allStateAddedEvents,
                allShortRedeemEvents: currentEventGroups.allShortRedeemEvents,
                allLongMintedEvents: currentEventGroups.allLongMintedEvents,
                allLongRedeemEvents: currentEventGroups.allLongRedeemEvents,
                allDeployV1Events: currentEventGroups.allDeployV1Events,
                allFeesChangesEvents: currentEventGroups.allFeesChangesEvents,
                allSyntheticTokenCreatedEvents: currentEventGroups.allSyntheticTokenCreatedEvents,
                allFloatMintedEvents: currentEventGroups.allFloatMintedEvents,
                allV1Events: currentEventGroups.allV1Events,
                allUnclassifiedEvents: Belt_Array.concat(currentEventGroups.allUnclassifiedEvents, [data._0])
              };
    case /* Transfer */1 :
        return {
                allTransferEvents: Belt_Array.concat(currentEventGroups.allTransferEvents, [{
                        blockNumber: blockNumber,
                        timestamp: timestamp,
                        txHash: txHash,
                        data: data._0
                      }]),
                allPriceUpdateEvents: currentEventGroups.allPriceUpdateEvents,
                allTokenPriceRefreshedEvents: currentEventGroups.allTokenPriceRefreshedEvents,
                allValueLockedInSystemEvents: currentEventGroups.allValueLockedInSystemEvents,
                allApprovalEvents: currentEventGroups.allApprovalEvents,
                allShortMintedEvents: currentEventGroups.allShortMintedEvents,
                allStakeAddedEvents: currentEventGroups.allStakeAddedEvents,
                allStateAddedEvents: currentEventGroups.allStateAddedEvents,
                allShortRedeemEvents: currentEventGroups.allShortRedeemEvents,
                allLongMintedEvents: currentEventGroups.allLongMintedEvents,
                allLongRedeemEvents: currentEventGroups.allLongRedeemEvents,
                allDeployV1Events: currentEventGroups.allDeployV1Events,
                allFeesChangesEvents: currentEventGroups.allFeesChangesEvents,
                allSyntheticTokenCreatedEvents: currentEventGroups.allSyntheticTokenCreatedEvents,
                allFloatMintedEvents: currentEventGroups.allFloatMintedEvents,
                allV1Events: currentEventGroups.allV1Events,
                allUnclassifiedEvents: currentEventGroups.allUnclassifiedEvents
              };
    case /* PriceUpdate */2 :
        return {
                allTransferEvents: currentEventGroups.allTransferEvents,
                allPriceUpdateEvents: Belt_Array.concat(currentEventGroups.allPriceUpdateEvents, [{
                        blockNumber: blockNumber,
                        timestamp: timestamp,
                        txHash: txHash,
                        data: data._0
                      }]),
                allTokenPriceRefreshedEvents: currentEventGroups.allTokenPriceRefreshedEvents,
                allValueLockedInSystemEvents: currentEventGroups.allValueLockedInSystemEvents,
                allApprovalEvents: currentEventGroups.allApprovalEvents,
                allShortMintedEvents: currentEventGroups.allShortMintedEvents,
                allStakeAddedEvents: currentEventGroups.allStakeAddedEvents,
                allStateAddedEvents: currentEventGroups.allStateAddedEvents,
                allShortRedeemEvents: currentEventGroups.allShortRedeemEvents,
                allLongMintedEvents: currentEventGroups.allLongMintedEvents,
                allLongRedeemEvents: currentEventGroups.allLongRedeemEvents,
                allDeployV1Events: currentEventGroups.allDeployV1Events,
                allFeesChangesEvents: currentEventGroups.allFeesChangesEvents,
                allSyntheticTokenCreatedEvents: currentEventGroups.allSyntheticTokenCreatedEvents,
                allFloatMintedEvents: currentEventGroups.allFloatMintedEvents,
                allV1Events: currentEventGroups.allV1Events,
                allUnclassifiedEvents: currentEventGroups.allUnclassifiedEvents
              };
    case /* TokenPriceRefreshed */3 :
        return {
                allTransferEvents: currentEventGroups.allTransferEvents,
                allPriceUpdateEvents: currentEventGroups.allPriceUpdateEvents,
                allTokenPriceRefreshedEvents: Belt_Array.concat(currentEventGroups.allTokenPriceRefreshedEvents, [{
                        blockNumber: blockNumber,
                        timestamp: timestamp,
                        txHash: txHash,
                        data: data._0
                      }]),
                allValueLockedInSystemEvents: currentEventGroups.allValueLockedInSystemEvents,
                allApprovalEvents: currentEventGroups.allApprovalEvents,
                allShortMintedEvents: currentEventGroups.allShortMintedEvents,
                allStakeAddedEvents: currentEventGroups.allStakeAddedEvents,
                allStateAddedEvents: currentEventGroups.allStateAddedEvents,
                allShortRedeemEvents: currentEventGroups.allShortRedeemEvents,
                allLongMintedEvents: currentEventGroups.allLongMintedEvents,
                allLongRedeemEvents: currentEventGroups.allLongRedeemEvents,
                allDeployV1Events: currentEventGroups.allDeployV1Events,
                allFeesChangesEvents: currentEventGroups.allFeesChangesEvents,
                allSyntheticTokenCreatedEvents: currentEventGroups.allSyntheticTokenCreatedEvents,
                allFloatMintedEvents: currentEventGroups.allFloatMintedEvents,
                allV1Events: currentEventGroups.allV1Events,
                allUnclassifiedEvents: currentEventGroups.allUnclassifiedEvents
              };
    case /* ValueLockedInSystem */4 :
        return {
                allTransferEvents: currentEventGroups.allTransferEvents,
                allPriceUpdateEvents: currentEventGroups.allPriceUpdateEvents,
                allTokenPriceRefreshedEvents: currentEventGroups.allTokenPriceRefreshedEvents,
                allValueLockedInSystemEvents: Belt_Array.concat(currentEventGroups.allValueLockedInSystemEvents, [{
                        blockNumber: blockNumber,
                        timestamp: timestamp,
                        txHash: txHash,
                        data: data._0
                      }]),
                allApprovalEvents: currentEventGroups.allApprovalEvents,
                allShortMintedEvents: currentEventGroups.allShortMintedEvents,
                allStakeAddedEvents: currentEventGroups.allStakeAddedEvents,
                allStateAddedEvents: currentEventGroups.allStateAddedEvents,
                allShortRedeemEvents: currentEventGroups.allShortRedeemEvents,
                allLongMintedEvents: currentEventGroups.allLongMintedEvents,
                allLongRedeemEvents: currentEventGroups.allLongRedeemEvents,
                allDeployV1Events: currentEventGroups.allDeployV1Events,
                allFeesChangesEvents: currentEventGroups.allFeesChangesEvents,
                allSyntheticTokenCreatedEvents: currentEventGroups.allSyntheticTokenCreatedEvents,
                allFloatMintedEvents: currentEventGroups.allFloatMintedEvents,
                allV1Events: currentEventGroups.allV1Events,
                allUnclassifiedEvents: currentEventGroups.allUnclassifiedEvents
              };
    case /* Approval */5 :
        return {
                allTransferEvents: currentEventGroups.allTransferEvents,
                allPriceUpdateEvents: currentEventGroups.allPriceUpdateEvents,
                allTokenPriceRefreshedEvents: currentEventGroups.allTokenPriceRefreshedEvents,
                allValueLockedInSystemEvents: currentEventGroups.allValueLockedInSystemEvents,
                allApprovalEvents: Belt_Array.concat(currentEventGroups.allApprovalEvents, [{
                        blockNumber: blockNumber,
                        timestamp: timestamp,
                        txHash: txHash,
                        data: data._0
                      }]),
                allShortMintedEvents: currentEventGroups.allShortMintedEvents,
                allStakeAddedEvents: currentEventGroups.allStakeAddedEvents,
                allStateAddedEvents: currentEventGroups.allStateAddedEvents,
                allShortRedeemEvents: currentEventGroups.allShortRedeemEvents,
                allLongMintedEvents: currentEventGroups.allLongMintedEvents,
                allLongRedeemEvents: currentEventGroups.allLongRedeemEvents,
                allDeployV1Events: currentEventGroups.allDeployV1Events,
                allFeesChangesEvents: currentEventGroups.allFeesChangesEvents,
                allSyntheticTokenCreatedEvents: currentEventGroups.allSyntheticTokenCreatedEvents,
                allFloatMintedEvents: currentEventGroups.allFloatMintedEvents,
                allV1Events: currentEventGroups.allV1Events,
                allUnclassifiedEvents: currentEventGroups.allUnclassifiedEvents
              };
    case /* ShortMinted */6 :
        return {
                allTransferEvents: currentEventGroups.allTransferEvents,
                allPriceUpdateEvents: currentEventGroups.allPriceUpdateEvents,
                allTokenPriceRefreshedEvents: currentEventGroups.allTokenPriceRefreshedEvents,
                allValueLockedInSystemEvents: currentEventGroups.allValueLockedInSystemEvents,
                allApprovalEvents: currentEventGroups.allApprovalEvents,
                allShortMintedEvents: Belt_Array.concat(currentEventGroups.allShortMintedEvents, [{
                        blockNumber: blockNumber,
                        timestamp: timestamp,
                        txHash: txHash,
                        data: data._0
                      }]),
                allStakeAddedEvents: currentEventGroups.allStakeAddedEvents,
                allStateAddedEvents: currentEventGroups.allStateAddedEvents,
                allShortRedeemEvents: currentEventGroups.allShortRedeemEvents,
                allLongMintedEvents: currentEventGroups.allLongMintedEvents,
                allLongRedeemEvents: currentEventGroups.allLongRedeemEvents,
                allDeployV1Events: currentEventGroups.allDeployV1Events,
                allFeesChangesEvents: currentEventGroups.allFeesChangesEvents,
                allSyntheticTokenCreatedEvents: currentEventGroups.allSyntheticTokenCreatedEvents,
                allFloatMintedEvents: currentEventGroups.allFloatMintedEvents,
                allV1Events: currentEventGroups.allV1Events,
                allUnclassifiedEvents: currentEventGroups.allUnclassifiedEvents
              };
    case /* StakeAdded */7 :
        return {
                allTransferEvents: currentEventGroups.allTransferEvents,
                allPriceUpdateEvents: currentEventGroups.allPriceUpdateEvents,
                allTokenPriceRefreshedEvents: currentEventGroups.allTokenPriceRefreshedEvents,
                allValueLockedInSystemEvents: currentEventGroups.allValueLockedInSystemEvents,
                allApprovalEvents: currentEventGroups.allApprovalEvents,
                allShortMintedEvents: currentEventGroups.allShortMintedEvents,
                allStakeAddedEvents: Belt_Array.concat(currentEventGroups.allStakeAddedEvents, [{
                        blockNumber: blockNumber,
                        timestamp: timestamp,
                        txHash: txHash,
                        data: data._0
                      }]),
                allStateAddedEvents: currentEventGroups.allStateAddedEvents,
                allShortRedeemEvents: currentEventGroups.allShortRedeemEvents,
                allLongMintedEvents: currentEventGroups.allLongMintedEvents,
                allLongRedeemEvents: currentEventGroups.allLongRedeemEvents,
                allDeployV1Events: currentEventGroups.allDeployV1Events,
                allFeesChangesEvents: currentEventGroups.allFeesChangesEvents,
                allSyntheticTokenCreatedEvents: currentEventGroups.allSyntheticTokenCreatedEvents,
                allFloatMintedEvents: currentEventGroups.allFloatMintedEvents,
                allV1Events: currentEventGroups.allV1Events,
                allUnclassifiedEvents: currentEventGroups.allUnclassifiedEvents
              };
    case /* StateAdded */8 :
        return {
                allTransferEvents: currentEventGroups.allTransferEvents,
                allPriceUpdateEvents: currentEventGroups.allPriceUpdateEvents,
                allTokenPriceRefreshedEvents: currentEventGroups.allTokenPriceRefreshedEvents,
                allValueLockedInSystemEvents: currentEventGroups.allValueLockedInSystemEvents,
                allApprovalEvents: currentEventGroups.allApprovalEvents,
                allShortMintedEvents: currentEventGroups.allShortMintedEvents,
                allStakeAddedEvents: currentEventGroups.allStakeAddedEvents,
                allStateAddedEvents: Belt_Array.concat(currentEventGroups.allStateAddedEvents, [{
                        blockNumber: blockNumber,
                        timestamp: timestamp,
                        txHash: txHash,
                        data: data._0
                      }]),
                allShortRedeemEvents: currentEventGroups.allShortRedeemEvents,
                allLongMintedEvents: currentEventGroups.allLongMintedEvents,
                allLongRedeemEvents: currentEventGroups.allLongRedeemEvents,
                allDeployV1Events: currentEventGroups.allDeployV1Events,
                allFeesChangesEvents: currentEventGroups.allFeesChangesEvents,
                allSyntheticTokenCreatedEvents: currentEventGroups.allSyntheticTokenCreatedEvents,
                allFloatMintedEvents: currentEventGroups.allFloatMintedEvents,
                allV1Events: currentEventGroups.allV1Events,
                allUnclassifiedEvents: currentEventGroups.allUnclassifiedEvents
              };
    case /* ShortRedeem */9 :
        return {
                allTransferEvents: currentEventGroups.allTransferEvents,
                allPriceUpdateEvents: currentEventGroups.allPriceUpdateEvents,
                allTokenPriceRefreshedEvents: currentEventGroups.allTokenPriceRefreshedEvents,
                allValueLockedInSystemEvents: currentEventGroups.allValueLockedInSystemEvents,
                allApprovalEvents: currentEventGroups.allApprovalEvents,
                allShortMintedEvents: currentEventGroups.allShortMintedEvents,
                allStakeAddedEvents: currentEventGroups.allStakeAddedEvents,
                allStateAddedEvents: currentEventGroups.allStateAddedEvents,
                allShortRedeemEvents: Belt_Array.concat(currentEventGroups.allShortRedeemEvents, [{
                        blockNumber: blockNumber,
                        timestamp: timestamp,
                        txHash: txHash,
                        data: data._0
                      }]),
                allLongMintedEvents: currentEventGroups.allLongMintedEvents,
                allLongRedeemEvents: currentEventGroups.allLongRedeemEvents,
                allDeployV1Events: currentEventGroups.allDeployV1Events,
                allFeesChangesEvents: currentEventGroups.allFeesChangesEvents,
                allSyntheticTokenCreatedEvents: currentEventGroups.allSyntheticTokenCreatedEvents,
                allFloatMintedEvents: currentEventGroups.allFloatMintedEvents,
                allV1Events: currentEventGroups.allV1Events,
                allUnclassifiedEvents: currentEventGroups.allUnclassifiedEvents
              };
    case /* LongMinted */10 :
        return {
                allTransferEvents: currentEventGroups.allTransferEvents,
                allPriceUpdateEvents: currentEventGroups.allPriceUpdateEvents,
                allTokenPriceRefreshedEvents: currentEventGroups.allTokenPriceRefreshedEvents,
                allValueLockedInSystemEvents: currentEventGroups.allValueLockedInSystemEvents,
                allApprovalEvents: currentEventGroups.allApprovalEvents,
                allShortMintedEvents: currentEventGroups.allShortMintedEvents,
                allStakeAddedEvents: currentEventGroups.allStakeAddedEvents,
                allStateAddedEvents: currentEventGroups.allStateAddedEvents,
                allShortRedeemEvents: currentEventGroups.allShortRedeemEvents,
                allLongMintedEvents: Belt_Array.concat(currentEventGroups.allLongMintedEvents, [{
                        blockNumber: blockNumber,
                        timestamp: timestamp,
                        txHash: txHash,
                        data: data._0
                      }]),
                allLongRedeemEvents: currentEventGroups.allLongRedeemEvents,
                allDeployV1Events: currentEventGroups.allDeployV1Events,
                allFeesChangesEvents: currentEventGroups.allFeesChangesEvents,
                allSyntheticTokenCreatedEvents: currentEventGroups.allSyntheticTokenCreatedEvents,
                allFloatMintedEvents: currentEventGroups.allFloatMintedEvents,
                allV1Events: currentEventGroups.allV1Events,
                allUnclassifiedEvents: currentEventGroups.allUnclassifiedEvents
              };
    case /* LongRedeem */11 :
        return {
                allTransferEvents: currentEventGroups.allTransferEvents,
                allPriceUpdateEvents: currentEventGroups.allPriceUpdateEvents,
                allTokenPriceRefreshedEvents: currentEventGroups.allTokenPriceRefreshedEvents,
                allValueLockedInSystemEvents: currentEventGroups.allValueLockedInSystemEvents,
                allApprovalEvents: currentEventGroups.allApprovalEvents,
                allShortMintedEvents: currentEventGroups.allShortMintedEvents,
                allStakeAddedEvents: currentEventGroups.allStakeAddedEvents,
                allStateAddedEvents: currentEventGroups.allStateAddedEvents,
                allShortRedeemEvents: currentEventGroups.allShortRedeemEvents,
                allLongMintedEvents: currentEventGroups.allLongMintedEvents,
                allLongRedeemEvents: Belt_Array.concat(currentEventGroups.allLongRedeemEvents, [{
                        blockNumber: blockNumber,
                        timestamp: timestamp,
                        txHash: txHash,
                        data: data._0
                      }]),
                allDeployV1Events: currentEventGroups.allDeployV1Events,
                allFeesChangesEvents: currentEventGroups.allFeesChangesEvents,
                allSyntheticTokenCreatedEvents: currentEventGroups.allSyntheticTokenCreatedEvents,
                allFloatMintedEvents: currentEventGroups.allFloatMintedEvents,
                allV1Events: currentEventGroups.allV1Events,
                allUnclassifiedEvents: currentEventGroups.allUnclassifiedEvents
              };
    case /* DeployV1 */12 :
        return {
                allTransferEvents: currentEventGroups.allTransferEvents,
                allPriceUpdateEvents: currentEventGroups.allPriceUpdateEvents,
                allTokenPriceRefreshedEvents: currentEventGroups.allTokenPriceRefreshedEvents,
                allValueLockedInSystemEvents: currentEventGroups.allValueLockedInSystemEvents,
                allApprovalEvents: currentEventGroups.allApprovalEvents,
                allShortMintedEvents: currentEventGroups.allShortMintedEvents,
                allStakeAddedEvents: currentEventGroups.allStakeAddedEvents,
                allStateAddedEvents: currentEventGroups.allStateAddedEvents,
                allShortRedeemEvents: currentEventGroups.allShortRedeemEvents,
                allLongMintedEvents: currentEventGroups.allLongMintedEvents,
                allLongRedeemEvents: currentEventGroups.allLongRedeemEvents,
                allDeployV1Events: Belt_Array.concat(currentEventGroups.allDeployV1Events, [{
                        blockNumber: blockNumber,
                        timestamp: timestamp,
                        txHash: txHash,
                        data: data._0
                      }]),
                allFeesChangesEvents: currentEventGroups.allFeesChangesEvents,
                allSyntheticTokenCreatedEvents: currentEventGroups.allSyntheticTokenCreatedEvents,
                allFloatMintedEvents: currentEventGroups.allFloatMintedEvents,
                allV1Events: currentEventGroups.allV1Events,
                allUnclassifiedEvents: currentEventGroups.allUnclassifiedEvents
              };
    case /* FeesChanges */13 :
        return {
                allTransferEvents: currentEventGroups.allTransferEvents,
                allPriceUpdateEvents: currentEventGroups.allPriceUpdateEvents,
                allTokenPriceRefreshedEvents: currentEventGroups.allTokenPriceRefreshedEvents,
                allValueLockedInSystemEvents: currentEventGroups.allValueLockedInSystemEvents,
                allApprovalEvents: currentEventGroups.allApprovalEvents,
                allShortMintedEvents: currentEventGroups.allShortMintedEvents,
                allStakeAddedEvents: currentEventGroups.allStakeAddedEvents,
                allStateAddedEvents: currentEventGroups.allStateAddedEvents,
                allShortRedeemEvents: currentEventGroups.allShortRedeemEvents,
                allLongMintedEvents: currentEventGroups.allLongMintedEvents,
                allLongRedeemEvents: currentEventGroups.allLongRedeemEvents,
                allDeployV1Events: currentEventGroups.allDeployV1Events,
                allFeesChangesEvents: Belt_Array.concat(currentEventGroups.allFeesChangesEvents, [{
                        blockNumber: blockNumber,
                        timestamp: timestamp,
                        txHash: txHash,
                        data: data._0
                      }]),
                allSyntheticTokenCreatedEvents: currentEventGroups.allSyntheticTokenCreatedEvents,
                allFloatMintedEvents: currentEventGroups.allFloatMintedEvents,
                allV1Events: currentEventGroups.allV1Events,
                allUnclassifiedEvents: currentEventGroups.allUnclassifiedEvents
              };
    case /* SyntheticTokenCreated */14 :
        return {
                allTransferEvents: currentEventGroups.allTransferEvents,
                allPriceUpdateEvents: currentEventGroups.allPriceUpdateEvents,
                allTokenPriceRefreshedEvents: currentEventGroups.allTokenPriceRefreshedEvents,
                allValueLockedInSystemEvents: currentEventGroups.allValueLockedInSystemEvents,
                allApprovalEvents: currentEventGroups.allApprovalEvents,
                allShortMintedEvents: currentEventGroups.allShortMintedEvents,
                allStakeAddedEvents: currentEventGroups.allStakeAddedEvents,
                allStateAddedEvents: currentEventGroups.allStateAddedEvents,
                allShortRedeemEvents: currentEventGroups.allShortRedeemEvents,
                allLongMintedEvents: currentEventGroups.allLongMintedEvents,
                allLongRedeemEvents: currentEventGroups.allLongRedeemEvents,
                allDeployV1Events: currentEventGroups.allDeployV1Events,
                allFeesChangesEvents: currentEventGroups.allFeesChangesEvents,
                allSyntheticTokenCreatedEvents: Belt_Array.concat(currentEventGroups.allSyntheticTokenCreatedEvents, [{
                        blockNumber: blockNumber,
                        timestamp: timestamp,
                        txHash: txHash,
                        data: data._0
                      }]),
                allFloatMintedEvents: currentEventGroups.allFloatMintedEvents,
                allV1Events: currentEventGroups.allV1Events,
                allUnclassifiedEvents: currentEventGroups.allUnclassifiedEvents
              };
    case /* FloatMinted */15 :
        return {
                allTransferEvents: currentEventGroups.allTransferEvents,
                allPriceUpdateEvents: currentEventGroups.allPriceUpdateEvents,
                allTokenPriceRefreshedEvents: currentEventGroups.allTokenPriceRefreshedEvents,
                allValueLockedInSystemEvents: currentEventGroups.allValueLockedInSystemEvents,
                allApprovalEvents: currentEventGroups.allApprovalEvents,
                allShortMintedEvents: currentEventGroups.allShortMintedEvents,
                allStakeAddedEvents: currentEventGroups.allStakeAddedEvents,
                allStateAddedEvents: currentEventGroups.allStateAddedEvents,
                allShortRedeemEvents: currentEventGroups.allShortRedeemEvents,
                allLongMintedEvents: currentEventGroups.allLongMintedEvents,
                allLongRedeemEvents: currentEventGroups.allLongRedeemEvents,
                allDeployV1Events: currentEventGroups.allDeployV1Events,
                allFeesChangesEvents: currentEventGroups.allFeesChangesEvents,
                allSyntheticTokenCreatedEvents: currentEventGroups.allSyntheticTokenCreatedEvents,
                allFloatMintedEvents: Belt_Array.concat(currentEventGroups.allFloatMintedEvents, [{
                        blockNumber: blockNumber,
                        timestamp: timestamp,
                        txHash: txHash,
                        data: data._0
                      }]),
                allV1Events: currentEventGroups.allV1Events,
                allUnclassifiedEvents: currentEventGroups.allUnclassifiedEvents
              };
    case /* V1 */16 :
        return {
                allTransferEvents: currentEventGroups.allTransferEvents,
                allPriceUpdateEvents: currentEventGroups.allPriceUpdateEvents,
                allTokenPriceRefreshedEvents: currentEventGroups.allTokenPriceRefreshedEvents,
                allValueLockedInSystemEvents: currentEventGroups.allValueLockedInSystemEvents,
                allApprovalEvents: currentEventGroups.allApprovalEvents,
                allShortMintedEvents: currentEventGroups.allShortMintedEvents,
                allStakeAddedEvents: currentEventGroups.allStakeAddedEvents,
                allStateAddedEvents: currentEventGroups.allStateAddedEvents,
                allShortRedeemEvents: currentEventGroups.allShortRedeemEvents,
                allLongMintedEvents: currentEventGroups.allLongMintedEvents,
                allLongRedeemEvents: currentEventGroups.allLongRedeemEvents,
                allDeployV1Events: currentEventGroups.allDeployV1Events,
                allFeesChangesEvents: currentEventGroups.allFeesChangesEvents,
                allSyntheticTokenCreatedEvents: currentEventGroups.allSyntheticTokenCreatedEvents,
                allFloatMintedEvents: currentEventGroups.allFloatMintedEvents,
                allV1Events: Belt_Array.concat(currentEventGroups.allV1Events, [{
                        blockNumber: blockNumber,
                        timestamp: timestamp,
                        txHash: txHash,
                        data: data._0
                      }]),
                allUnclassifiedEvents: currentEventGroups.allUnclassifiedEvents
              };
    
  }
}

exports.transferData_decode = transferData_decode;
exports.priceUpdateData_decode = priceUpdateData_decode;
exports.tokenPriceRefreshedData_decode = tokenPriceRefreshedData_decode;
exports.valueLockedInSystemData_decode = valueLockedInSystemData_decode;
exports.approvalData_decode = approvalData_decode;
exports.shortMintedData_decode = shortMintedData_decode;
exports.stakeAddedData_decode = stakeAddedData_decode;
exports.stateAddedData_decode = stateAddedData_decode;
exports.shortRedeemData_decode = shortRedeemData_decode;
exports.longMintedData_decode = longMintedData_decode;
exports.longRedeemData_decode = longRedeemData_decode;
exports.deployV1Data_decode = deployV1Data_decode;
exports.feesChangesData_decode = feesChangesData_decode;
exports.syntheticTokenCreatedData_decode = syntheticTokenCreatedData_decode;
exports.floatMintedData_decode = floatMintedData_decode;
exports.v1Data_decode = v1Data_decode;
exports.covertToStateChange = covertToStateChange;
exports.emptyEventGroups = emptyEventGroups;
exports.addEventToCorrectGrouping = addEventToCorrectGrouping;
/* ConverterTypes Not a pure module */
