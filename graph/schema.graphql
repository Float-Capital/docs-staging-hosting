type EventParam @entity {
  id: ID!
  index: Int!
  param: String!
  paramName: String!
  paramType: String!
}

type EventParams @entity {
  id: ID!
  index: Int!
  eventName: String!
  params: [EventParam!]!
}

type StateChange @entity {
  id: ID! # tx
  timestamp: BigInt!
  blockNumber: BigInt!
  txEventParamList: [EventParams!]!
}

type Event @entity {
  id: ID!
  address: Bytes!
}

# type FeesLevied @entity {
#   id: ID!
#   feeAmount: BigInt!
#   longFee: BigInt!
#   shortFee: BigInt!
# }

# type LongMint @entity {
#   id: ID!
#   user: Bytes!
# }

type SystemState @entity {
  id: ID! # marketIndex "-" callCounter
  timestamp: BigInt!
  txHash: Bytes!
  blockNumber: BigInt!
  marketIndex: BigInt!
  # syntheticMarket: SyntheticMarket!
  # previousSyntheticPrice: Price!
  syntheticPrice: BigInt! # TODO: this should be a reference to another entity that holds the price
  longTokenPrice: BigInt!
  shortTokenPrice: BigInt!
  totalLockedLong: BigInt!
  totalLockedShort: BigInt!
  totalValueLocked: BigInt!
  setBy: Bytes! #Turn into a User entity
}

type SyntheticToken @entity {
  id: ID! # token address
  tokenAddress: Bytes!
  tokenPrice: BigInt!
  tokenSupply: BigInt!
  totalValueLocked: BigInt!
}

type FeeStructure @entity {
  id: ID!
  baseEntryFee: BigInt!
  badLiquidityEntryFee: BigInt!
  baseExitFee: BigInt!
  badLiquidityExitFee: BigInt!
}

type SyntheticMarket @entity {
  id: ID! # ID -> Market Index
  timestampCreated: BigInt!
  txHash: Bytes!
  blockNumberCreated: BigInt!
  name: String!
  symbol: String!
  marketIndex: BigInt!
  totalValueLockedInMarket: BigInt!
  oracleAddress: Bytes!
  syntheticLong: SyntheticToken!
  syntheticShort: SyntheticToken!
  latestSystemState: SystemState!
  feeStructure: FeeStructure!
}

type YieldManager @entity {
  id: ID!
  address: Bytes!
}

type OracleAgregator @entity {
  id: ID!
  address: Bytes!
}

type Staker @entity {
  id: ID!
  address: Bytes!
}

type TokenFactory @entity {
  id: ID!
  address: Bytes!
}

type GlobalState @entity {
  id: ID!
  contractVersion: BigInt!
  oracleAgreagator: OracleAgregator!
  yieldManager: YieldManager!
  adminAddress: Bytes!
  staker: Staker!
  tokenFactory: TokenFactory!
  # latestSyntheticMarket: SyntheticMarket!
  # latestMarket:
}
