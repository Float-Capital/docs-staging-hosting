// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Misc from "./libraries/Misc.js";
import * as Curry from "bs-platform/lib/es6/curry.js";
import * as React from "react";
import * as Belt_Option from "bs-platform/lib/es6/belt_Option.js";
import * as Caml_option from "bs-platform/lib/es6/caml_option.js";

var privKeyStorageId = "admin-private-key";

function AdminTestingPortal$Authenticate(Props) {
  var children = Props.children;
  var getPrivateKeyFromLocalStorage = function (__x) {
    return Caml_option.null_to_opt(__x.getItem(privKeyStorageId));
  };
  var match = React.useState(function () {
        return Belt_Option.isSome(Belt_Option.flatMap(Misc.optLocalstorage, getPrivateKeyFromLocalStorage));
      });
  var setAuthSet = match[1];
  var match$1 = React.useState(function () {
        return "";
      });
  var setAuthHeader = match$1[1];
  var authHeader = match$1[0];
  var onChange = function (e) {
    return Curry._1(setAuthHeader, e.target.value);
  };
  if (match[0]) {
    return React.createElement(React.Fragment, undefined, React.createElement("button", {
                    onClick: (function (param) {
                        return Curry._1(setAuthSet, (function (param) {
                                      return false;
                                    }));
                      })
                  }, "Edit your auth key"), React.createElement("br", undefined), children);
  } else {
    return React.createElement("form", {
                onSubmit: (function ($$event) {
                    localStorage.setItem(privKeyStorageId, authHeader);
                    $$event.preventDefault();
                    return Curry._1(setAuthSet, (function (param) {
                                  return true;
                                }));
                  })
              }, React.createElement("label", undefined, "Auth Key: "), React.createElement("input", {
                    name: "auth_key",
                    type: "text",
                    onChange: onChange
                  }), React.createElement("button", {
                    type: "submit"
                  }, "submit"), React.createElement("br", undefined), React.createElement("br", undefined), React.createElement("br", undefined), React.createElement("p", undefined, "NOTE: you may need to reload the webpage after doing this to activate the key"));
  }
}

function AdminTestingPortal$AdminActions(Props) {
  return React.createElement("div", undefined, React.createElement(AdminTestingPortal$Authenticate, {
                  children: React.createElement("h1", undefined, "Test Functions")
                }));
}

function $$default(param) {
  return React.createElement(AdminTestingPortal$AdminActions, {});
}

export {
  $$default ,
  $$default as default,
  
}
/* Misc Not a pure module */
