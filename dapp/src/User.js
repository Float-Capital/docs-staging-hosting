// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Curry from "bs-platform/lib/es6/curry.js";
import * as React from "react";
import * as Loader from "./components/UI/Loader.js";
import * as UserUI from "./components/UI/UserUI.js";
import * as Js_dict from "bs-platform/lib/es6/js_dict.js";
import * as Queries from "./data/Queries.js";
import * as Router from "next/router";

function onQueryError(user) {
  return React.createElement(UserUI.UserContainer.make, {
              children: "Error loading user data for: " + user
            });
}

function onQuerySuccess(param, param$1) {
  return React.createElement(UserUI.UserContainer.make, {
              children: null
            }, React.createElement(UserUI.UserBanner.make, {}), React.createElement(UserUI.UserColumnContainer.make, {
                  children: null
                }, React.createElement(UserUI.UserColumn.make, {
                      children: React.createElement(UserUI.UserColumnCard.make, {
                            children: null
                          }, React.createElement(UserUI.UserProfileHeader.make, {
                                name: "moose-code",
                                level: "1"
                              }), React.createElement(UserUI.UserColumnTextList.make, {
                                children: null
                              }, React.createElement(UserUI.UserColumnText.make, {
                                    head: "üìÆ Address",
                                    body: "0x1234...1234"
                                  }), React.createElement(UserUI.UserColumnText.make, {
                                    head: "üéâ Joined",
                                    body: "03/02/2021"
                                  }), React.createElement(UserUI.UserColumnText.make, {
                                    head: "‚õΩ Gas used",
                                    body: "6,789,000"
                                  }), React.createElement(UserUI.UserColumnText.make, {
                                    head: "üèÉ No. txs",
                                    body: "11"
                                  }), React.createElement(UserUI.UserColumnText.make, {
                                    icon: "/img/discord.png",
                                    head: "Discord",
                                    body: "‚úÖ"
                                  })))
                    }), React.createElement(UserUI.UserColumn.make, {
                      children: React.createElement(UserUI.UserColumnCard.make, {
                            children: null
                          }, React.createElement(UserUI.UserColumnHeader.make, {
                                children: null
                              }, "Synthetic Assets", React.createElement("img", {
                                    className: "inline h-5 ml-2",
                                    src: "/img/coin.png"
                                  })), React.createElement(UserUI.UserColumnTextCenter.make, {
                                children: React.createElement(UserUI.UserColumnText.make, {
                                      head: "üí∞ Synth value",
                                      body: "$9,123"
                                    })
                              }), React.createElement("br", undefined), React.createElement(UserUI.UserMarketBox.make, {
                                name: "FTSE 100",
                                isLong: true,
                                tokens: "23.81",
                                value: "450",
                                children: React.createElement(UserUI.UserMarketStakeOrRedeem.make, {})
                              }), React.createElement("br", undefined), React.createElement(UserUI.UserColumnTextCenter.make, {
                                children: React.createElement("span", {
                                      className: "text-sm"
                                    }, "üí∏ Why not mint some more? üí∏")
                              }))
                    }), React.createElement(UserUI.UserColumn.make, {
                      children: React.createElement(UserUI.UserColumnCard.make, {
                            children: null
                          }, React.createElement(UserUI.UserColumnHeader.make, {
                                children: "Staking üî•"
                              }), React.createElement(UserUI.UserFloatBox.make, {
                                accruing: "3.14159265",
                                balance: "100.04",
                                minted: "107.83"
                              }), React.createElement(UserUI.UserColumnTextCenter.make, {
                                children: React.createElement(UserUI.UserColumnText.make, {
                                      head: "üí∞ Staked value",
                                      body: "$15,678"
                                    })
                              }), React.createElement("br", undefined), React.createElement(UserUI.UserColumnHeader.make, {
                                children: "Stakes",
                                subheader: true
                              }), React.createElement(UserUI.UserMarketBox.make, {
                                name: "FTSE 100",
                                isLong: true,
                                tokens: "2.81",
                                value: "450",
                                children: React.createElement(UserUI.UserMarketUnstake.make, {})
                              }), React.createElement(UserUI.UserMarketBox.make, {
                                name: "FTSE 100",
                                isLong: false,
                                tokens: "21.24",
                                value: "400",
                                children: React.createElement(UserUI.UserMarketUnstake.make, {})
                              }))
                    })));
}

function User$User(Props) {
  var router = Router.useRouter();
  var userStr = Js_dict.get(router.query, "user");
  var user = userStr !== undefined ? userStr : "no user provided";
  var userQuery = Curry.app(Queries.UserQuery.use, [
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        {
          userId: user
        }
      ]);
  if (userQuery.error !== undefined) {
    return onQueryError(user);
  } else if (userQuery.data !== undefined) {
    return onQuerySuccess(user, "asdf");
  } else {
    return React.createElement(Loader.make, {});
  }
}

var User = {
  onQueryError: onQueryError,
  onQuerySuccess: onQuerySuccess,
  make: User$User
};

function $$default(param) {
  return React.createElement(User$User, {});
}

export {
  User ,
  $$default ,
  $$default as default,
  
}
/* react Not a pure module */
