// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Card from "./components/UI/Card.js";
import * as Curry from "bs-platform/lib/es6/curry.js";
import * as Login from "./components/Login/Login.js";
import * as React from "react";
import * as Config from "./Config.js";
import * as Ethers from "./ethereum/Ethers.js";
import * as Toggle from "./components/UI/Toggle.js";
import * as Globals from "./libraries/Globals.js";
import * as Queries from "./libraries/Queries.js";
import * as Belt_Float from "bs-platform/lib/es6/belt_Float.js";
import * as DaiBalance from "./components/ExampleViewFunctions/DaiBalance.js";
import * as MiniLoader from "./components/UI/MiniLoader.js";
import * as Belt_Option from "bs-platform/lib/es6/belt_Option.js";
import * as FormatMoney from "./components/UI/FormatMoney.js";
import * as MarketsList from "./components/Markets/MarketsList.js";
import * as Router from "next/router";
import * as StakeDetails from "./StakeDetails.js";
import * as AccessControl from "./components/AccessControl.js";

function Dashboard(Props) {
  var router = Router.useRouter();
  var systemStateQuery = Curry.app(Queries.LatestSystemState.use, [
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined
      ]);
  var match = systemStateQuery.data;
  var tmp;
  if (systemStateQuery.loading) {
    tmp = React.createElement(MiniLoader.make, {});
  } else if (systemStateQuery.error !== undefined) {
    tmp = "Error loading data";
  } else if (match !== undefined) {
    var match$1 = match.systemStates;
    if (match$1.length !== 1) {
      tmp = "Query returned wrong number of results";
    } else {
      var match$2 = match$1[0];
      tmp = React.createElement("div", {
            className: "col-span-2"
          }, React.createElement("div", {
                className: "p-5 flex flex-col items-center justify-center bg-white bg-opacity-75 rounded"
              }, React.createElement("h2", {
                    className: "text-lg"
                  }, "Total value locked"), React.createElement("p", {
                    className: "text-primary text-4xl"
                  }, "BUSD ", React.createElement(FormatMoney.make, {
                        number: Belt_Option.getWithDefault(Belt_Float.fromString(Ethers.Utils.formatEther(match$2.totalValueLocked)), 0)
                      }))), React.createElement("div", {
                className: "grid grid-cols-2 gap-2"
              }, React.createElement(Card.make, {
                    children: null
                  }, React.createElement("h2", {
                        className: "text-lg"
                      }, "Total short value locked"), React.createElement("p", {
                        className: "text-primary text-2xl"
                      }, "BUSD ", React.createElement(FormatMoney.make, {
                            number: Belt_Option.getWithDefault(Belt_Float.fromString(Ethers.Utils.formatEther(match$2.totalLockedShort)), 0)
                          }))), React.createElement(Card.make, {
                    children: null
                  }, React.createElement("h2", {
                        className: "text-lg"
                      }, "Total long value locked"), React.createElement("p", {
                        className: "text-primary text-2xl"
                      }, "BUSD ", React.createElement(FormatMoney.make, {
                            number: Belt_Option.getWithDefault(Belt_Float.fromString(Ethers.Utils.formatEther(match$2.totalLockedLong)), 0)
                          })))));
    }
  } else {
    tmp = "You might think this is impossible, but depending on the situation it might not be!";
  }
  var tmp$1;
  if (Config.isDevMode) {
    var match$3 = systemStateQuery.data;
    if (systemStateQuery.loading) {
      tmp$1 = React.createElement(MiniLoader.make, {});
    } else if (systemStateQuery.error !== undefined) {
      tmp$1 = "Error loading data";
    } else if (match$3 !== undefined) {
      var match$4 = match$3.systemStates;
      if (match$4.length !== 1) {
        tmp$1 = "Query returned wrong number of results";
      } else {
        var match$5 = match$4[0];
        var timeSinceUpdate = Globals.timestampToDuration(match$5.timestamp);
        tmp$1 = React.createElement(React.Fragment, undefined, React.createElement("br", undefined), React.createElement("br", undefined), React.createElement("br", undefined), React.createElement("br", undefined), React.createElement("h1", undefined, "Dashboard"), React.createElement(DaiBalance.make, {}), React.createElement("a", {
                  href: "https://goerli.etherscan.io/tx/" + match$5.txHash
                }, "Latest update happened " + timeSinceUpdate + " ago. (view on block-explorer) by " + match$5.setBy), React.createElement("p", undefined, "SyntheticPrice " + Ethers.Utils.formatEther(match$5.syntheticPrice) + "$"), React.createElement("p", undefined, "Long Token Price " + Ethers.Utils.formatEther(match$5.longTokenPrice) + "$"), React.createElement("p", undefined, "Short Token Price " + Ethers.Utils.formatEther(match$5.shortTokenPrice) + "$"), React.createElement("p", undefined, "Total locked long " + Ethers.Utils.formatEther(match$5.totalLockedLong) + "$"), React.createElement("p", undefined, "Total Locked Short " + Ethers.Utils.formatEther(match$5.totalLockedShort) + "$"), React.createElement("p", undefined, "Total Locked " + Ethers.Utils.formatEther(match$5.totalValueLocked) + "$"), React.createElement("p", undefined, "TODO:"), React.createElement("p", undefined, "show the ratio of long to short in the same chart"), React.createElement("p", undefined, "show historic returns of long asset (history APY)"), React.createElement("p", undefined, "show current APY on opposing side (probably short)"));
      }
    } else {
      tmp$1 = "You might think this is impossible, but depending on the situation it might not be!";
    }
  } else {
    tmp$1 = null;
  }
  return React.createElement(AccessControl.make, {
              children: null,
              alternateComponent: React.createElement("h1", {
                    onClick: (function (param) {
                        router.push("/login?nextPath=/dashboard");
                        
                      })
                  }, React.createElement(Login.make, {}))
            }, React.createElement(Toggle.make, {
                  onClick: (function (param) {
                      console.log("Switch to diff currency");
                      
                    }),
                  preLabel: "BUSD",
                  postLabel: "BNB"
                }), React.createElement("div", {
                  className: "grid grid-cols-2 gap-4 items-center my-5"
                }, React.createElement(React.Fragment, undefined, tmp), React.createElement("div", undefined, React.createElement(MarketsList.make, {})), React.createElement("div", undefined, React.createElement(StakeDetails.make, {}))), tmp$1);
}

var make = Dashboard;

var $$default = Dashboard;

export {
  make ,
  $$default ,
  $$default as default,
  
}
/* Card Not a pure module */
