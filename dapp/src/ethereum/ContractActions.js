// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Curry from "bs-platform/lib/es6/curry.js";
import * as React from "react";
import * as Config from "../Config.js";
import * as Ethers from "./Ethers.js";
import * as Ethers$1 from "ethers";
import * as Belt_Option from "bs-platform/lib/es6/belt_Option.js";
import * as Caml_option from "bs-platform/lib/es6/caml_option.js";
import * as Core from "@web3-react/core";
import * as LoyaltyTokenJson from "./abi/loyaltyToken.json";

function getProviderOrSigner(library, account) {
  if (account !== undefined) {
    return Belt_Option.mapWithDefault(library.getSigner(Caml_option.valFromOption(account)), {
                TAG: 0,
                _0: library,
                [Symbol.for("name")]: "Provider"
              }, (function (signer) {
                  return {
                          TAG: 1,
                          _0: signer,
                          [Symbol.for("name")]: "Signer"
                        };
                }));
  } else {
    return {
            TAG: 0,
            _0: library,
            [Symbol.for("name")]: "Provider"
          };
  }
}

var loyaltyTokenAbi = LoyaltyTokenJson.loyaltyToken;

function getExchangeContract(stewardAddress, stewardAbi, library, account) {
  return Ethers.Contract.make(stewardAddress, stewardAbi, getProviderOrSigner(library, account));
}

function getLongShortContractAddress(chainId) {
  return Ethers$1.utils.getAddress(chainId !== 5 ? (
                chainId !== 137 ? (
                    chainId !== 80001 ? "0xba97BeC8d359D73c81D094421803D968A9FBf676" : "0xeb37A6dF956F1997085498aDd98b25a2f633d83F"
                  ) : "0x8f3Cf7ad23Cd3CaDbD9735AFf958023239c6A063"
              ) : "0xba97BeC8d359D73c81D094421803D968A9FBf676");
}

function useLongShortContract(param) {
  var context = Core.useWeb3React();
  return React.useMemo((function () {
                var match = context.library;
                var match$1 = context.chainId;
                if (match !== undefined && match$1 !== undefined) {
                  return Caml_option.some(getExchangeContract(getLongShortContractAddress(match$1), Config.longshortContractAbi, Caml_option.valFromOption(match), context.account));
                }
                
              }), [
              context.library,
              context.account,
              context.chainId
            ]);
}

function useChangePrice(_animal) {
  var match = React.useState(function () {
        return /* UnInitialised */0;
      });
  var setTxState = match[1];
  useLongShortContract(undefined);
  return [
          (function (_newPrice) {
              Curry._1(setTxState, (function (param) {
                      return /* Created */2;
                    }));
              
            }),
          match[0]
        ];
}

var stewardAddressMaticMain = "0x6D47CF86F6A490c6410fC082Fd1Ad29CF61492d0";

var stewardAddressMumbai = "0x0C00CFE8EbB34fE7C31d4915a43Cde211e9F0F3B";

export {
  getProviderOrSigner ,
  loyaltyTokenAbi ,
  getExchangeContract ,
  stewardAddressMaticMain ,
  stewardAddressMumbai ,
  getLongShortContractAddress ,
  useLongShortContract ,
  useChangePrice ,
  
}
/* loyaltyTokenAbi Not a pure module */
