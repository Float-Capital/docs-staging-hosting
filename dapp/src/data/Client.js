// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Ethers from "../ethereum/Ethers.js";
import * as Caml_option from "bs-platform/lib/es6/caml_option.js";
import * as ApolloClient from "rescript-apollo-client/src/ApolloClient.js";
import * as ReasonMLCommunity__ApolloClient from "rescript-apollo-client/src/ReasonMLCommunity__ApolloClient.js";
import * as ApolloClient__Link_Http_HttpLink from "rescript-apollo-client/src/@apollo/client/link/http/ApolloClient__Link_Http_HttpLink.js";
import * as ApolloClient__Cache_InMemory_InMemoryCache from "rescript-apollo-client/src/@apollo/client/cache/inmemory/ApolloClient__Cache_InMemory_InMemoryCache.js";

function chainContextToStr(chain) {
  if (chain) {
    return "db";
  } else {
    return "graph";
  }
}

function createContext(queryType) {
  return {
          context: queryType
        };
}

function httpLink(uri) {
  return ApolloClient__Link_Http_HttpLink.make((function (param) {
                return uri;
              }), undefined, undefined, undefined, undefined, undefined, undefined, undefined);
}

var defaultHeaders = {
  "eth-address": undefined,
  "eth-signature": undefined
};

function setSignInData(ethAddress, ethSignature) {
  localStorage.setItem(ethAddress, ethSignature);
  
}

function getHeaders(user) {
  if (user === undefined) {
    return defaultHeaders;
  }
  var u = Caml_option.valFromOption(user);
  var getUserSignature = function (__x) {
    return Caml_option.null_to_opt(__x.getItem(Ethers.Utils.ethAdrToLowerStr(u)));
  };
  var uS = getUserSignature(localStorage);
  if (uS !== undefined) {
    return {
            "eth-address": Ethers.Utils.ethAdrToStr(u),
            "eth-signature": uS
          };
  } else {
    return defaultHeaders;
  }
}

function querySwitcherLink(graphUri, dbUri, user) {
  return ReasonMLCommunity__ApolloClient.Link.split((function (operation) {
                var context = operation.getContext();
                if (context !== undefined && context.context) {
                  return false;
                } else {
                  return true;
                }
              }), httpLink(graphUri), ApolloClient__Link_Http_HttpLink.make((function (param) {
                    return dbUri;
                  }), undefined, undefined, Caml_option.some(getHeaders(user)), undefined, undefined, undefined, undefined));
}

function makeClient(graphUri, dbUri, user) {
  return ApolloClient.make(undefined, undefined, undefined, Caml_option.some(querySwitcherLink(graphUri, dbUri, user)), ApolloClient__Cache_InMemory_InMemoryCache.make(undefined, undefined, undefined, undefined, undefined, undefined), undefined, undefined, true, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined);
}

export {
  chainContextToStr ,
  createContext ,
  httpLink ,
  defaultHeaders ,
  setSignInData ,
  getHeaders ,
  querySwitcherLink ,
  makeClient ,
  
}
/* Ethers Not a pure module */
