// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var ApolloClient__React_Hooks_UseQuery = require("rescript-apollo-client/src/@apollo/client/react/hooks/ApolloClient__React_Hooks_UseQuery.js");
var ApolloClient__React_Hooks_UseMutation = require("rescript-apollo-client/src/@apollo/client/react/hooks/ApolloClient__React_Hooks_UseMutation.js");

var Raw = {};

var query = (require("@apollo/client").gql`
  mutation createUser($userName: String)  {
    createUser(username: $userName)  {
      __typename
      success
      error
    }
  }
`);

function parse(value) {
  var value$1 = value.createUser;
  var tmp;
  if (value$1 == null) {
    tmp = undefined;
  } else {
    var value$2 = value$1.error;
    tmp = {
      __typename: value$1.__typename,
      success: value$1.success,
      error: !(value$2 == null) ? value$2 : undefined
    };
  }
  return {
          createUser: tmp
        };
}

function serialize(value) {
  var value$1 = value.createUser;
  var createUser;
  if (value$1 !== undefined) {
    var value$2 = value$1.error;
    var error = value$2 !== undefined ? value$2 : null;
    var value$3 = value$1.success;
    var value$4 = value$1.__typename;
    createUser = {
      __typename: value$4,
      success: value$3,
      error: error
    };
  } else {
    createUser = null;
  }
  return {
          createUser: createUser
        };
}

function serializeVariables(inp) {
  var a = inp.userName;
  return {
          userName: a !== undefined ? a : undefined
        };
}

function makeVariables(userName, param) {
  return {
          userName: userName
        };
}

function makeDefaultVariables(param) {
  return {
          userName: undefined
        };
}

var CreateUser_inner = {
  Raw: Raw,
  query: query,
  parse: parse,
  serialize: serialize,
  serializeVariables: serializeVariables,
  makeVariables: makeVariables,
  makeDefaultVariables: makeDefaultVariables
};

var include = ApolloClient__React_Hooks_UseMutation.Extend({
      query: query,
      Raw: Raw,
      parse: parse,
      serialize: serialize,
      serializeVariables: serializeVariables
    });

var CreateUser_use = include.use;

var CreateUser_useWithVariables = include.useWithVariables;

var CreateUser = {
  CreateUser_inner: CreateUser_inner,
  Raw: Raw,
  query: query,
  parse: parse,
  serialize: serialize,
  serializeVariables: serializeVariables,
  makeVariables: makeVariables,
  makeDefaultVariables: makeDefaultVariables,
  use: CreateUser_use,
  useWithVariables: CreateUser_useWithVariables
};

var Raw$1 = {};

var query$1 = (require("@apollo/client").gql`
  query ($userAddress: String)  {
    user(where: {ethAddress: {_eq: $userAddress}})  {
      __typename
      ethAddress
      userName
    }
  }
`);

function parse$1(value) {
  var value$1 = value.user;
  return {
          user: value$1.map(function (value) {
                var value$1 = value.userName;
                return {
                        __typename: value.__typename,
                        ethAddress: value.ethAddress,
                        userName: !(value$1 == null) ? value$1 : undefined
                      };
              })
        };
}

function serialize$1(value) {
  var value$1 = value.user;
  var user = value$1.map(function (value) {
        var value$1 = value.userName;
        var userName = value$1 !== undefined ? value$1 : null;
        var value$2 = value.ethAddress;
        var value$3 = value.__typename;
        return {
                __typename: value$3,
                ethAddress: value$2,
                userName: userName
              };
      });
  return {
          user: user
        };
}

function serializeVariables$1(inp) {
  var a = inp.userAddress;
  return {
          userAddress: a !== undefined ? a : undefined
        };
}

function makeVariables$1(userAddress, param) {
  return {
          userAddress: userAddress
        };
}

function makeDefaultVariables$1(param) {
  return {
          userAddress: undefined
        };
}

var GetUser_inner = {
  Raw: Raw$1,
  query: query$1,
  parse: parse$1,
  serialize: serialize$1,
  serializeVariables: serializeVariables$1,
  makeVariables: makeVariables$1,
  makeDefaultVariables: makeDefaultVariables$1
};

var include$1 = ApolloClient__React_Hooks_UseQuery.Extend({
      query: query$1,
      Raw: Raw$1,
      parse: parse$1,
      serialize: serialize$1,
      serializeVariables: serializeVariables$1
    });

var GetUser_refetchQueryDescription = include$1.refetchQueryDescription;

var GetUser_use = include$1.use;

var GetUser_useLazy = include$1.useLazy;

var GetUser_useLazyWithVariables = include$1.useLazyWithVariables;

var GetUser = {
  GetUser_inner: GetUser_inner,
  Raw: Raw$1,
  query: query$1,
  parse: parse$1,
  serialize: serialize$1,
  serializeVariables: serializeVariables$1,
  makeVariables: makeVariables$1,
  makeDefaultVariables: makeDefaultVariables$1,
  refetchQueryDescription: GetUser_refetchQueryDescription,
  use: GetUser_use,
  useLazy: GetUser_useLazy,
  useLazyWithVariables: GetUser_useLazyWithVariables
};

var Raw$2 = {};

var query$2 = (require("@apollo/client").gql`
  mutation updateUser($userName: String!, $userAddress: String!)  {
    update_user(where: {ethAddress: {_eq: $userAddress}, userName: {}}, _set: {userName: $userName})  {
      __typename
      returning  {
        __typename
        userName
      }
    }
  }
`);

function parse$2(value) {
  var value$1 = value.update_user;
  var tmp;
  if (value$1 == null) {
    tmp = undefined;
  } else {
    var value$2 = value$1.returning;
    tmp = {
      __typename: value$1.__typename,
      returning: value$2.map(function (value) {
            var value$1 = value.userName;
            return {
                    __typename: value.__typename,
                    userName: !(value$1 == null) ? value$1 : undefined
                  };
          })
    };
  }
  return {
          update_user: tmp
        };
}

function serialize$2(value) {
  var value$1 = value.update_user;
  var update_user;
  if (value$1 !== undefined) {
    var value$2 = value$1.returning;
    var returning = value$2.map(function (value) {
          var value$1 = value.userName;
          var userName = value$1 !== undefined ? value$1 : null;
          var value$2 = value.__typename;
          return {
                  __typename: value$2,
                  userName: userName
                };
        });
    var value$3 = value$1.__typename;
    update_user = {
      __typename: value$3,
      returning: returning
    };
  } else {
    update_user = null;
  }
  return {
          update_user: update_user
        };
}

function serializeVariables$2(inp) {
  return {
          userName: inp.userName,
          userAddress: inp.userAddress
        };
}

function makeVariables$2(userName, userAddress, param) {
  return {
          userName: userName,
          userAddress: userAddress
        };
}

var UpdateUser_inner = {
  Raw: Raw$2,
  query: query$2,
  parse: parse$2,
  serialize: serialize$2,
  serializeVariables: serializeVariables$2,
  makeVariables: makeVariables$2
};

var include$2 = ApolloClient__React_Hooks_UseMutation.Extend({
      query: query$2,
      Raw: Raw$2,
      parse: parse$2,
      serialize: serialize$2,
      serializeVariables: serializeVariables$2
    });

var UpdateUser_use = include$2.use;

var UpdateUser_useWithVariables = include$2.useWithVariables;

var UpdateUser = {
  UpdateUser_inner: UpdateUser_inner,
  Raw: Raw$2,
  query: query$2,
  parse: parse$2,
  serialize: serialize$2,
  serializeVariables: serializeVariables$2,
  makeVariables: makeVariables$2,
  use: UpdateUser_use,
  useWithVariables: UpdateUser_useWithVariables
};

exports.CreateUser = CreateUser;
exports.GetUser = GetUser;
exports.UpdateUser = UpdateUser;
/* query Not a pure module */
