// Generated by ReScript, PLEASE EDIT WITH CARE

import * as App from "../../App.js";
import * as Curry from "bs-platform/lib/es6/curry.js";
import * as React from "react";
import * as Globals from "../../libraries/Globals.js";
import * as DbQueries from "../../data/DbQueries.js";
import * as Caml_option from "bs-platform/lib/es6/caml_option.js";
import * as RootProvider from "../../libraries/RootProvider.js";
import * as ContractActions from "../../ethereum/ContractActions.js";

function AuthTest(Props) {
  var signer = ContractActions.useSignerExn(undefined);
  var userAddress = RootProvider.useCurrentUserExn(undefined);
  var match = Curry.app(DbQueries.CreateUser.use, [
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined
      ]);
  var mutate = match[0];
  return React.createElement(React.Fragment, undefined, "Auth Test", React.createElement("button", {
                  onClick: (function (param) {
                      signer.signMessage("float.capital-signin-string:" + Globals.ethAdrToStr(userAddress)).then(function (result) {
                            console.log(result);
                            return Curry._8(mutate, undefined, Caml_option.some(App.createContext(/* DB */1)), undefined, undefined, undefined, undefined, undefined, {
                                        userAddress: "0x738edd7F6a625C02030DbFca84885b4De5252903",
                                        userName: undefined
                                      });
                          });
                      
                    })
                }, "Sign something"));
}

var make = AuthTest;

export {
  make ,
  
}
/* App Not a pure module */
