// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Tick = require("../UI/Base/Tick.js");
var Curry = require("rescript/lib/js/curry.js");
var Modal = require("../UI/Base/Modal.js");
var React = require("react");
var Loader = require("../UI/Base/Loader.js");
var Js_math = require("rescript/lib/js/js_math.js");
var Belt_Array = require("rescript/lib/js/belt_Array.js");
var Belt_Option = require("rescript/lib/js/belt_Option.js");
var TweetButton = require("../UI/TweetButton.js");
var MessageUsOnDiscord = require("../Ethereum/MessageUsOnDiscord.js");
var ViewPositionButton = require("../UI/ViewPositionButton.js");
var ViewOnBlockExplorer = require("../Ethereum/ViewOnBlockExplorer.js");

function StakeTxStatusModal(Props) {
  var txStateStake = Props.txStateStake;
  var resetFormButton = Props.resetFormButton;
  var tokenToStake = Props.tokenToStake;
  var stakeTweetMessages = [
    "Hey Siri, play “Celebrate” by Kool and The Gang 🥳, because I just staked my @float_capital synthetic assets to earn FLOAT tokens! 🌊",
    "Stake that @float_capital! 🌊 I just staked my synthetic assets to earn FLOAT tokens! 🥳",
    "Make it rain @float_capital! 💸 I just staked my synthetic assets to earn FLOAT tokens! 🥳",
    "Stake that, all on the floor! Stake that, give me some more! 🎶 I just staked my synthetic assets to earn FLOAT tokens! @float_capital 🌊",
    "Float like a butterfly, stake like a bee!🐝 I just staked to earn FLOAT tokens @float_capital 🌊"
  ];
  var randomStakeTweetMessage = Belt_Option.getWithDefault(Belt_Array.get(stakeTweetMessages, Js_math.random_int(0, stakeTweetMessages.length)), "");
  if (typeof txStateStake === "number") {
    if (txStateStake === /* UnInitialised */0) {
      return null;
    } else {
      return React.createElement(Modal.make, {
                  id: "stake-1",
                  children: React.createElement("div", {
                        className: "text-center m-3"
                      }, React.createElement(Loader.Ellipses.make, {}), React.createElement("h1", undefined, "Confirm the transaction to stake " + tokenToStake))
                });
    }
  }
  switch (txStateStake.TAG | 0) {
    case /* SignedAndSubmitted */0 :
        return React.createElement(Modal.make, {
                    id: "stake-3",
                    children: React.createElement("div", {
                          className: "text-center m-3"
                        }, React.createElement("div", {
                              className: "m-2"
                            }, React.createElement(Loader.Mini.make, {})), React.createElement("p", undefined, "Staking transaction pending... "), React.createElement(ViewOnBlockExplorer.make, {
                              txHash: txStateStake._0
                            }))
                  });
    case /* Declined */1 :
        return React.createElement(Modal.make, {
                    id: "stake-5",
                    children: React.createElement("div", {
                          className: "text-center m-3"
                        }, React.createElement("p", undefined, "The transaction was rejected by your wallet"), React.createElement(MessageUsOnDiscord.make, {}), Curry._1(resetFormButton, undefined))
                  });
    case /* Complete */2 :
        return React.createElement(React.Fragment, undefined, React.createElement(Modal.make, {
                        id: "stake-4",
                        children: null
                      }, React.createElement("div", {
                            className: "text-center m-3"
                          }, React.createElement(Tick.make, {}), React.createElement("p", undefined, "Transaction complete 🎉"), React.createElement(TweetButton.make, {
                                message: randomStakeTweetMessage
                              }), React.createElement(ViewPositionButton.make, {})), Curry._1(resetFormButton, undefined)));
    case /* Failed */3 :
        return React.createElement(Modal.make, {
                    id: "stake-6",
                    children: React.createElement("div", {
                          className: "text-center m-3"
                        }, React.createElement("h1", undefined, "The transaction failed."), React.createElement(ViewOnBlockExplorer.make, {
                              txHash: txStateStake._0
                            }), React.createElement(MessageUsOnDiscord.make, {}), Curry._1(resetFormButton, undefined))
                  });
    
  }
}

var make = StakeTxStatusModal;

exports.make = make;
/* Tick Not a pure module */
