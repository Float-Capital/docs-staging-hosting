// Generated by ReScript, PLEASE EDIT WITH CARE

import * as React from "react";
import * as Ethers from "../../ethereum/Ethers.js";
import * as CONSTANTS from "../../CONSTANTS.js";
import * as DataHooks from "../../data/DataHooks.js";
import * as StakeCard from "./StakeCard.js";
import * as Belt_Array from "rescript/lib/es6/belt_Array.js";
import * as MiniLoader from "../UI/MiniLoader.js";
import * as Belt_Option from "rescript/lib/es6/belt_Option.js";
import * as RootProvider from "../../libraries/RootProvider.js";
import * as Belt_HashSetString from "rescript/lib/es6/belt_HashSetString.js";

function StakeList(Props) {
  var marketDetailsQuery = DataHooks.useGetMarkets(undefined);
  var user = RootProvider.useCurrentUser(undefined);
  var currentBalancesOrAdrZeroBalances = DataHooks.useUsersBalances(Ethers.Utils.ethAdrToLowerStr(Belt_Option.getWithDefault(user, CONSTANTS.zeroAddress)));
  var optUserBalanceAddressSet = Belt_Option.mapWithDefault(user, undefined, (function (param) {
          if (typeof currentBalancesOrAdrZeroBalances === "number") {
            return /* Loading */0;
          } else if (currentBalancesOrAdrZeroBalances.TAG === /* GraphError */0) {
            return {
                    TAG: 0,
                    _0: currentBalancesOrAdrZeroBalances._0,
                    [Symbol.for("name")]: "GraphError"
                  };
          } else {
            return {
                    TAG: 1,
                    _0: Belt_Array.reduce(currentBalancesOrAdrZeroBalances._0.balances, Belt_HashSetString.fromArray([]), (function (set, balance) {
                            if (balance.tokenBalance.gt(CONSTANTS.zeroBN)) {
                              Belt_HashSetString.add(set, Ethers.Utils.ethAdrToStr(balance.addr));
                            }
                            return set;
                          })),
                    [Symbol.for("name")]: "Response"
                  };
          }
        }));
  var tmp;
  tmp = typeof marketDetailsQuery === "number" ? React.createElement("div", {
          className: "m-auto"
        }, React.createElement(MiniLoader.make, {})) : (
      marketDetailsQuery.TAG === /* GraphError */0 ? "Error: " + marketDetailsQuery._0 : React.createElement("div", undefined, Belt_Array.map(marketDetailsQuery._0, (function (syntheticMarket) {
                    return React.createElement(StakeCard.make, {
                                syntheticMarket: syntheticMarket,
                                optUserBalanceAddressSet: optUserBalanceAddressSet,
                                key: syntheticMarket.name
                              });
                  })))
    );
  return React.createElement("div", {
              className: "w-full max-w-5xl mx-auto px-2 md:px-0"
            }, tmp);
}

var make = StakeList;

export {
  make ,
  
}
/* react Not a pure module */
