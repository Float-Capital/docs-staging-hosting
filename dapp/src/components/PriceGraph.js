// Generated by ReScript, PLEASE EDIT WITH CARE

import * as View from "../libraries/View.js";
import * as Curry from "bs-platform/lib/es6/curry.js";
import * as React from "react";
import * as Button from "./UI/Button.js";
import * as Js_math from "bs-platform/lib/es6/js_math.js";
import * as Recharts from "recharts";
import * as Belt_Array from "bs-platform/lib/es6/belt_Array.js";
import * as BsRecharts__XAxis from "@ahrefs/bs-recharts/src/BsRecharts__XAxis.js";
import * as BsRecharts__YAxis from "@ahrefs/bs-recharts/src/BsRecharts__YAxis.js";
import * as BsRecharts__Tooltip from "@ahrefs/bs-recharts/src/BsRecharts__Tooltip.js";
import * as BsRecharts__ResponsiveContainer from "@ahrefs/bs-recharts/src/BsRecharts__ResponsiveContainer.js";

function PriceGraph(Props) {
  var marketName = Props.marketName;
  var data = [];
  var dummyData = [
    {
      date: "1 Feb",
      price: Js_math.random_int(100, 200)
    },
    {
      date: "2 Feb",
      price: Js_math.random_int(100, 200)
    },
    {
      date: "3 Feb",
      price: Js_math.random_int(100, 200)
    },
    {
      date: "4 Feb",
      price: Js_math.random_int(100, 200)
    },
    {
      date: "5 Feb",
      price: Js_math.random_int(100, 200)
    },
    {
      date: "6 Feb",
      price: Js_math.random_int(100, 200)
    },
    {
      date: "7 Feb",
      price: Js_math.random_int(100, 200)
    },
    {
      date: "8 Feb",
      price: Js_math.random_int(100, 200)
    },
    {
      date: "9 Feb",
      price: Js_math.random_int(100, 200)
    },
    {
      date: "10 Feb",
      price: Js_math.random_int(100, 200)
    },
    {
      date: "11 Feb",
      price: Js_math.random_int(100, 200)
    },
    {
      date: "12 Feb",
      price: Js_math.random_int(100, 200)
    },
    {
      date: "13 Feb",
      price: Js_math.random_int(100, 200)
    },
    {
      date: "14 Feb",
      price: Js_math.random_int(100, 200)
    }
  ];
  var noDataAvailable = data.length === 0;
  var displayData = noDataAvailable ? dummyData : data;
  var d = Belt_Array.get(displayData, 0);
  var minYRange = displayData.reduce((function (min, dataPoint) {
          if (dataPoint.price < min) {
            return dataPoint.price;
          } else {
            return min;
          }
        }), d !== undefined ? d.price : 0);
  var d$1 = Belt_Array.get(displayData, 0);
  var maxYRange = displayData.reduce((function (max, dataPoint) {
          if (dataPoint.price > max) {
            return dataPoint.price;
          } else {
            return max;
          }
        }), d$1 !== undefined ? d$1.price : 0);
  var yAxisRange = [
    minYRange - minYRange * 0.05 | 0,
    maxYRange + maxYRange * 0.05 | 0
  ];
  var isMobile = View.useIsTailwindMobile(undefined);
  return React.createElement(React.Fragment, undefined, React.createElement("div", {
                  className: "flex-1 p-1 my-4 mr-6 flex flex-col relative"
                }, noDataAvailable ? React.createElement("div", {
                        className: "v-align-in-responsive-height text-center text-gray-500 bg-white bg-opacity-90 p-2 z-10 rounded-lg"
                      }, "No price data available for this market yet") : null, React.createElement(React.Fragment, undefined, React.createElement("h3", {
                          className: "ml-5"
                        }, marketName + " Price"), React.createElement(Recharts.ResponsiveContainer, Curry._3(BsRecharts__ResponsiveContainer.makeProps(isMobile ? ({
                                        TAG: 0,
                                        _0: 200,
                                        [Symbol.for("name")]: "Px"
                                      }) : ({
                                        TAG: 1,
                                        _0: 100,
                                        [Symbol.for("name")]: "Prc"
                                      }), {
                                    TAG: 1,
                                    _0: 100,
                                    [Symbol.for("name")]: "Prc"
                                  })(undefined, "w-full text-xs m-0 p-0", undefined, undefined, undefined), React.createElement(Recharts.LineChart, {
                                  data: displayData,
                                  margin: {
                                    top: 0,
                                    right: 0,
                                    bottom: 0,
                                    left: 0
                                  },
                                  children: null
                                }, React.createElement(Recharts.Line, {
                                      type: "natural",
                                      dataKey: "price",
                                      dot: false,
                                      stroke: "#0d4184",
                                      strokeWidth: 2
                                    }), React.createElement(Recharts.Tooltip, Curry.app(BsRecharts__Tooltip.makeProps(undefined)(undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined), [
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined
                                        ])), React.createElement(Recharts.XAxis, Curry.app(BsRecharts__XAxis.makeProps(undefined)(undefined, undefined, undefined, undefined, undefined, undefined, "date", undefined, undefined, undefined), [
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined
                                        ])), React.createElement(Recharts.YAxis, Curry.app(BsRecharts__YAxis.makeProps(undefined)("number", undefined, undefined, undefined, false, undefined, undefined, yAxisRange, undefined, undefined), [
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined
                                        ]))), undefined, undefined)), React.createElement("div", {
                          className: "flex flex-row justify-between ml-5"
                        }, React.createElement(Button.Tiny.make, {
                              onClick: (function (param) {
                                  console.log("1D");
                                  
                                }),
                              children: "1D"
                            }), React.createElement(Button.Tiny.make, {
                              onClick: (function (param) {
                                  console.log("1W");
                                  
                                }),
                              children: "1W"
                            }), React.createElement(Button.Tiny.make, {
                              onClick: (function (param) {
                                  console.log("1M");
                                  
                                }),
                              children: "1M"
                            }), React.createElement(Button.Tiny.make, {
                              onClick: (function (param) {
                                  console.log("3M");
                                  
                                }),
                              children: "3M",
                              disabled: true
                            }), React.createElement(Button.Tiny.make, {
                              onClick: (function (param) {
                                  console.log("1Y");
                                  
                                }),
                              children: "1Y",
                              disabled: true
                            }), React.createElement(Button.Tiny.make, {
                              onClick: (function (param) {
                                  console.log("MAX");
                                  
                                }),
                              children: "MAX",
                              disabled: true
                            })))));
}

var make = PriceGraph;

export {
  make ,
  
}
/* View Not a pure module */
