// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Modal from "../UI/Modal.js";
import * as React from "react";
import * as Config from "../../Config.js";
import * as Ethers from "../../ethereum/Ethers.js";
import * as Ethereum from "../../ethereum/Ethereum.js";
import * as MiniLoader from "../UI/MiniLoader.js";
import * as AddToMetamask from "../UI/AddToMetamask.js";
import * as MessageUsOnDiscord from "../Ethereum/MessageUsOnDiscord.js";
import * as ViewOnBlockExplorer from "../Ethereum/ViewOnBlockExplorer.js";

function ClaimTxStatusModal(Props) {
  var txState = Props.txState;
  if (typeof txState === "number") {
    if (txState === /* UnInitialised */0) {
      return null;
    } else {
      return React.createElement(Modal.make, {
                  id: 1,
                  children: React.createElement("div", {
                        className: "text-center m-3"
                      }, React.createElement("h1", undefined, "Confirm the transaction to claim Float"))
                });
    }
  }
  switch (txState.TAG | 0) {
    case /* SignedAndSubmitted */0 :
        return React.createElement(Modal.make, {
                    id: 2,
                    children: React.createElement("div", {
                          className: "text-center m-3"
                        }, React.createElement(MiniLoader.make, {}), React.createElement("p", undefined, "Claiming transaction pending... "), React.createElement(ViewOnBlockExplorer.make, {
                              txHash: txState._0
                            }))
                  });
    case /* Declined */1 :
        return React.createElement(Modal.make, {
                    id: 4,
                    children: React.createElement("div", {
                          className: "text-center m-3"
                        }, React.createElement("p", undefined, "The transaction was rejected by your wallet"), React.createElement(MessageUsOnDiscord.make, {}))
                  });
    case /* Complete */2 :
        return React.createElement(Modal.make, {
                    id: 3,
                    children: null
                  }, React.createElement("div", {
                        className: "text-center m-3"
                      }, React.createElement("p", undefined, "Transaction complete ðŸŽ‰")), Ethereum.isMetamask(window.ethereum) ? React.createElement(AddToMetamask.make, {
                          tokenAddress: Ethers.Utils.ethAdrToStr(Config.config.contracts.FloatToken),
                          tokenSymbol: "FLOAT",
                          children: React.createElement("button", {
                                className: "w-36 h-12 text-sm shadow-md rounded-lg border-2 focus:outline-none border-gray-200 hover:bg-gray-200 flex justify-center items-center mx-auto"
                              }, "Add FLOAT to", React.createElement("img", {
                                    className: "h-5 ml-1",
                                    src: "/icons/metamask.svg"
                                  }))
                        }) : null);
    case /* Failed */3 :
        return React.createElement(Modal.make, {
                    id: 5,
                    children: React.createElement("div", {
                          className: "text-center m-3"
                        }, React.createElement("h1", undefined, "The transaction failed."), React.createElement(ViewOnBlockExplorer.make, {
                              txHash: txState._0
                            }), React.createElement(MessageUsOnDiscord.make, {}))
                  });
    
  }
}

var make = ClaimTxStatusModal;

export {
  make ,
  
}
/* Modal Not a pure module */
