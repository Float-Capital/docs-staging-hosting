// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Tick = require("../UI/Base/Tick.js");
var Curry = require("rescript/lib/js/curry.js");
var Modal = require("../UI/Base/Modal.js");
var React = require("react");
var Button = require("../UI/Base/Button.js");
var Config = require("../../config/Config.js");
var Loader = require("../UI/Base/Loader.js");
var MessageUsOnDiscord = require("../Ethereum/MessageUsOnDiscord.js");
var ViewOnBlockExplorer = require("../Ethereum/ViewOnBlockExplorer.js");

function RedeemSubmitButtonAndTxStatusModal(Props) {
  var txStateRedeem = Props.txStateRedeem;
  var resetFormButton = Props.resetFormButton;
  var buttonText = Props.buttonText;
  var buttonDisabled = Props.buttonDisabled;
  if (typeof txStateRedeem === "number") {
    if (txStateRedeem === /* UnInitialised */0) {
      return React.createElement(Button.make, {
                  onClick: (function (param) {
                      
                    }),
                  children: buttonText,
                  disabled: buttonDisabled
                });
    } else {
      return React.createElement(React.Fragment, undefined, React.createElement(Modal.make, {
                      id: 5,
                      children: React.createElement("div", {
                            className: "text-center m-3"
                          }, React.createElement(Loader.Ellipses.make, {}), React.createElement("h1", undefined, "Confirm the transaction to redeem " + Config.paymentTokenName))
                    }), React.createElement(Button.make, {
                      onClick: (function (param) {
                          
                        }),
                      children: buttonText,
                      disabled: true
                    }));
    }
  }
  switch (txStateRedeem.TAG | 0) {
    case /* SignedAndSubmitted */0 :
        return React.createElement(React.Fragment, undefined, React.createElement(Modal.make, {
                        id: 7,
                        children: React.createElement("div", {
                              className: "text-center m-3"
                            }, React.createElement("div", {
                                  className: "m-2"
                                }, React.createElement(Loader.Mini.make, {})), React.createElement("p", undefined, "Redeem transaction pending... "), React.createElement(ViewOnBlockExplorer.make, {
                                  txHash: txStateRedeem._0
                                }))
                      }), React.createElement(Button.make, {
                        onClick: (function (param) {
                            
                          }),
                        children: buttonText,
                        disabled: true
                      }));
    case /* Declined */1 :
        return React.createElement(React.Fragment, undefined, React.createElement(Modal.make, {
                        id: 9,
                        children: React.createElement("div", {
                              className: "text-center m-3"
                            }, React.createElement("p", undefined, "The transaction was rejected by your wallet"), React.createElement(MessageUsOnDiscord.make, {}))
                      }), Curry._1(resetFormButton, undefined));
    case /* Complete */2 :
        return React.createElement(React.Fragment, undefined, React.createElement(Modal.make, {
                        id: 8,
                        children: React.createElement("div", {
                              className: "text-center m-3"
                            }, React.createElement(Tick.make, {}), React.createElement("p", undefined, "Transaction complete ðŸŽ‰"))
                      }), Curry._1(resetFormButton, undefined));
    case /* Failed */3 :
        return React.createElement(React.Fragment, undefined, React.createElement(Modal.make, {
                        id: 10,
                        children: React.createElement("div", {
                              className: "text-center m-3"
                            }, React.createElement("h1", undefined, "The transaction failed."), React.createElement(ViewOnBlockExplorer.make, {
                                  txHash: txStateRedeem._0
                                }), React.createElement(MessageUsOnDiscord.make, {}))
                      }), Curry._1(resetFormButton, undefined));
    
  }
}

var make = RedeemSubmitButtonAndTxStatusModal;

exports.make = make;
/* Tick Not a pure module */
