// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var React = require("react");
var Loader = require("../UI/Base/Loader.js");
var Tooltip = require("../UI/Base/Tooltip.js");
var CONSTANTS = require("../../CONSTANTS.js");

function ifElement(condition, element) {
  if (condition) {
    return element;
  } else {
    return null;
  }
}

function MarketStakeCardSide(Props) {
  var orderPostion = Props.orderPostion;
  var orderPostionMobile = Props.orderPostionMobile;
  var marketName = Props.marketName;
  var isLong = Props.isLong;
  var apy = Props.apy;
  var floatApy = Props.floatApy;
  var beta = Props.beta;
  var stakeApy = Props.stakeApy;
  var tradeType = isLong ? "long" : "short";
  var textPosition = isLong ? "text-left" : "text-right";
  var mapAPY = function (apy) {
    var maybeHotFlame = apy > CONSTANTS.hotAPYThreshold ? "ðŸ”¥" : "";
    var apyDisplay = (apy * 100).toFixed(2);
    if (isLong) {
      return apyDisplay + "%" + maybeHotFlame;
    } else {
      return maybeHotFlame + apyDisplay + "%";
    }
  };
  var apyComponent = function (header, apy, suffix) {
    return React.createElement("div", {
                className: "flex flex-col justify-center pt-0 my-1"
              }, React.createElement("h3", {
                    className: "text-xxs"
                  }, React.createElement("span", {
                        className: "font-bold  text-gray-600"
                      }, header), " APY", suffix), React.createElement("p", {
                    className: "text-sm tracking-widest font-alphbeta"
                  }, (apy * 100).toFixed(2) + "%"));
  };
  var tmp;
  var exit = 0;
  if (typeof apy === "number" || apy.TAG !== /* Loaded */0) {
    exit = 1;
  } else {
    var apyVal = apy._0;
    if (typeof stakeApy === "number" || stakeApy.TAG !== /* Loaded */0) {
      exit = 1;
    } else {
      var stakeApy$1 = stakeApy._0;
      var apyGreaterThanZero = apyVal >= 0.01;
      var stakeApyGreaterThanZero = stakeApy$1 >= 0.01;
      var element = apyComponent("SYNTH", apyVal, null);
      var element$1 = React.createElement("span", {
            className: "mx-1"
          }, "+");
      var element$2 = apyComponent("STAKE", stakeApy$1, React.createElement("span", {
                className: "ml-1"
              }, React.createElement(Tooltip.make, {
                    tip: "Expected yield from FLT token buybacks"
                  })));
      tmp = React.createElement(React.Fragment, undefined, apyGreaterThanZero ? element : null, stakeApyGreaterThanZero && apyGreaterThanZero ? element$1 : null, stakeApyGreaterThanZero ? element$2 : null);
    }
  }
  if (exit === 1) {
    tmp = React.createElement(Loader.Tiny.make, {});
  }
  return React.createElement("div", {
              className: textPosition + " order-" + String(orderPostionMobile) + " md:order-" + String(orderPostion) + " w-1/2 md:w-1/4 flex my-auto grow flex-wrap flex-col"
            }, React.createElement("div", {
                  className: "flex flex-col justify-center pt-0 my-1"
                }, React.createElement("h3", {
                      className: "text-xxs mt-2"
                    }, React.createElement("span", {
                          className: "font-bold  text-gray-600"
                        }, isLong ? "LONG" : "SHORT"), " FLOAT Multiplier"), React.createElement("p", {
                      className: "text-lg md:text-xl tracking-widest font-alphbeta"
                    }, mapAPY(floatApy))), React.createElement("div", {
                  className: "flex " + (
                    isLong ? "justify-start" : "justify-end"
                  ) + " items-center"
                }, tmp), React.createElement("div", {
                  className: "text-sm my-1"
                }, React.createElement("h3", {
                      className: "text-xxs"
                    }, React.createElement("span", {
                          className: "font-bold  text-gray-600"
                        }, "Exposure "), React.createElement(Tooltip.make, {
                          tip: "The impact " + marketName + " price movements have on the " + tradeType + " value"
                        })), React.createElement("p", {
                      className: "text-lg tracking-widest font-alphbeta"
                    }, beta + "%")));
}

var make = MarketStakeCardSide;

exports.ifElement = ifElement;
exports.make = make;
/* react Not a pure module */
