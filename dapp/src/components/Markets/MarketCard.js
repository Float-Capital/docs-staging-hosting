// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Misc = require("../../libraries/Misc.js");
var Next = require("../../bindings/Next.js");
var React = require("react");
var Button = require("../UI/Base/Button.js");
var Globals = require("../../libraries/Globals.js");
var Js_dict = require("rescript/lib/js/js_dict.js");
var Tooltip = require("../UI/Base/Tooltip.js");
var CONSTANTS = require("../../CONSTANTS.js");
var MarketBar = require("../UI/MarketCard/MarketBar.js");
var Link = require("next/link").default;
var Belt_Option = require("rescript/lib/js/belt_Option.js");
var Router = require("next/router");

function calculateBeta(totalValueLocked, totalLockedLong, totalLockedShort, isLong) {
  if (totalValueLocked.eq(CONSTANTS.zeroBN) || totalLockedLong.eq(CONSTANTS.zeroBN) || totalLockedShort.eq(CONSTANTS.zeroBN)) {
    return "0";
  } else if (totalLockedLong.eq(totalLockedShort)) {
    return "100";
  } else if (isLong && totalLockedShort.lt(totalLockedLong)) {
    return Globals.percentStr(totalLockedShort, totalLockedLong);
  } else if (!isLong && totalLockedLong.lt(totalLockedShort)) {
    return Globals.percentStr(totalLockedLong, totalLockedShort);
  } else {
    return "100";
  }
}

function MarketCard(Props) {
  var param = Props.marketData;
  var match = param.latestSystemState;
  var totalValueLocked = match.totalValueLocked;
  var totalLockedShort = match.totalLockedShort;
  var totalLockedLong = match.totalLockedLong;
  var marketIndex = param.marketIndex;
  var marketName = param.name;
  var router = Router.useRouter();
  var marketIndexOption = Js_dict.get(router.query, "marketIndex");
  var longBeta = calculateBeta(totalValueLocked, totalLockedLong, totalLockedShort, true);
  var shortBeta = calculateBeta(totalValueLocked, totalLockedLong, totalLockedShort, false);
  var marketPositionHeadings = function (isLong) {
    return React.createElement("div", {
                className: "flex flex-col items-center justify-center"
              }, React.createElement("h2", {
                    className: "font-bold text-sm"
                  }, marketName, React.createElement("span", {
                        className: "text-xs"
                      }, isLong ? "↗️" : "↘️")), React.createElement("div", {
                    className: "pt-2 mt-auto"
                  }, React.createElement("h3", {
                        className: "text-xs mt-1"
                      }, React.createElement("span", {
                            className: "font-bold"
                          }, isLong ? "LONG" : "SHORT"), " Liquidity")));
  };
  var marketPositionValues = function (isLong) {
    var value = Misc.NumberFormat.formatEther(undefined, isLong ? totalLockedLong : totalLockedShort);
    var beta = isLong ? longBeta : shortBeta;
    return React.createElement("div", {
                className: "text-sm text-center m-auto mb-4"
              }, React.createElement("div", {
                    className: "text-2xl tracking-widest font-alphbeta my-3"
                  }, "$" + value), React.createElement("span", {
                    className: "font-bold"
                  }, "Exposure "), React.createElement(Tooltip.make, {
                    tip: "The impact " + marketName + " price movements have on " + (
                      isLong ? "long" : "short"
                    ) + " value"
                  }), React.createElement("span", {
                    className: "font-bold"
                  }, ": "), beta + "%");
  };
  var liquidityRatio = function (param) {
    return React.createElement("div", {
                className: "w-full"
              }, totalValueLocked.eq(CONSTANTS.zeroBN) ? null : React.createElement(MarketBar.make, {
                      totalLockedLong: totalLockedLong,
                      totalValueLocked: totalValueLocked
                    }));
  };
  var mintButtons = function (param) {
    return React.createElement("div", {
                className: "flex w-full justify-around"
              }, React.createElement(Button.Small.make, {
                    onClick: (function ($$event) {
                        $$event.preventDefault();
                        return Next.Router.pushShallow(router, "/mint?marketIndex=" + marketIndex.toString() + "&actionOption=long");
                      }),
                    children: "Mint Long"
                  }), React.createElement(Button.Small.make, {
                    onClick: (function ($$event) {
                        $$event.preventDefault();
                        return Next.Router.pushShallow(router, "/mint?marketIndex=" + marketIndex.toString() + "&actionOption=short");
                      }),
                    children: "Mint Short"
                  }));
  };
  return React.createElement(Link, {
              href: "/?marketIndex=" + marketIndex.toString(),
              children: React.createElement("div", {
                    className: "p-1 rounded-lg flex flex-col bg-white bg-opacity-75 hover:bg-opacity-60 cursor-pointer shadow-lg hover:shadow-xl h-full justify-center w-full"
                  }, React.createElement("div", {
                        className: "flex justify-center w-full my-1"
                      }, React.createElement("h1", {
                            className: "font-bold text-xl font-alphbeta cursor-pointer hover:underline"
                          }, marketName, React.createElement(Tooltip.make, {
                                tip: "This market tracks " + marketName
                              }))), React.createElement("div", {
                        className: "flex flex-wrap justify-center w-full"
                      }, React.createElement("div", {
                            className: "order-2 md:order-1 w-1/2 md:w-1/4 flex items-center flex grow flex-wrap flex-col"
                          }, marketPositionHeadings(true), React.createElement("div", {
                                className: "md:block hidden"
                              }, marketPositionValues(true))), React.createElement("div", {
                            className: "order-1 md:order-2 w-full md:w-1/2 flex items-center flex-col"
                          }, React.createElement("h2", {
                                className: "text-xs mt-1"
                              }, React.createElement("span", {
                                    className: "font-bold"
                                  }, "TOTAL"), " Liquidity"), React.createElement("div", {
                                className: "text-3xl font-alphbeta tracking-wider py-1"
                              }, "$" + Misc.NumberFormat.formatEther(undefined, totalValueLocked)), React.createElement("div", {
                                className: "md:block hidden w-full"
                              }, liquidityRatio(undefined), Belt_Option.isNone(marketIndexOption) ? mintButtons(undefined) : null)), React.createElement("div", {
                            className: "order-3 w-1/2 md:w-1/4 flex-grow flex-wrap flex-col"
                          }, marketPositionHeadings(false), React.createElement("div", {
                                className: "md:block hidden"
                              }, marketPositionValues(false)))), React.createElement("div", {
                        className: "block md:hidden pt-5"
                      }, React.createElement("div", {
                            className: "px-8"
                          }, liquidityRatio(undefined)), React.createElement("div", {
                            className: "flex md:hidden"
                          }, marketPositionValues(true), marketPositionValues(false)), Belt_Option.isNone(marketIndexOption) ? mintButtons(undefined) : null))
            });
}

var make = MarketCard;

exports.calculateBeta = calculateBeta;
exports.make = make;
/* Misc Not a pure module */
