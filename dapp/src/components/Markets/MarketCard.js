// Generated by ReScript, PLEASE EDIT WITH CARE

import * as React from "react";
import * as Button from "../UI/Button.js";
import * as Ethers from "../../ethereum/Ethers.js";
import * as Ethers$1 from "ethers";
import * as Tooltip from "../UI/Tooltip.js";
import * as MarketBar from "../UI/MarketCard/MarketBar.js";
import * as Belt_Float from "bs-platform/lib/es6/belt_Float.js";
import * as Belt_Option from "bs-platform/lib/es6/belt_Option.js";
import * as FormatMoney from "../UI/FormatMoney.js";
import * as MarketCardSide from "../UI/MarketCard/MarketCardSide.js";

var zero = Ethers$1.BigNumber.from("0");

var oneHundred = Ethers$1.BigNumber.from("100000000000000000000");

function percentStr(n, outOf) {
  if (outOf.eq(zero)) {
    return "0.00";
  } else {
    return Ethers.Utils.formatEtherToPrecision(n.mul(oneHundred).div(outOf), 2);
  }
}

function calculateBeta(totalValueLocked, totalLockedLong, totalLockedShort, isLong) {
  if (totalValueLocked.eq(zero) || totalLockedLong.eq(zero) || totalLockedShort.eq(zero)) {
    return "0";
  } else if (totalLockedLong.eq(totalLockedShort)) {
    return "100";
  } else if (isLong && totalLockedShort.lt(totalLockedLong)) {
    return percentStr(totalLockedShort, totalLockedLong);
  } else if (!isLong && totalLockedLong.lt(totalLockedShort)) {
    return percentStr(totalLockedLong, totalLockedShort);
  } else {
    return "100";
  }
}

function MarketCard(Props) {
  var marketName = Props.marketName;
  var totalLockedLong = Props.totalLockedLong;
  var totalLockedShort = Props.totalLockedShort;
  var totalValueLocked = Props.totalValueLocked;
  var marketIndex = Props.marketIndex;
  var router = Props.router;
  var percentStrLong = percentStr(totalLockedLong, totalValueLocked);
  var percentStrShort = (100.0 - Belt_Option.getExn(Belt_Float.fromString(percentStrLong))).toFixed(2);
  var longBeta = calculateBeta(totalValueLocked, totalLockedLong, totalLockedShort, true);
  var shortBeta = calculateBeta(totalValueLocked, totalLockedLong, totalLockedShort, false);
  return React.createElement("div", {
              className: "p-1 mb-8 rounded-lg flex flex-col bg-white bg-opacity-75 my-5 shadow-lg"
            }, React.createElement("div", {
                  className: "flex justify-center w-full my-1"
                }, React.createElement("h1", {
                      className: "font-bold text-xl font-alphbeta"
                    }, marketName, React.createElement(Tooltip.make, {
                          tip: "This market tracks " + marketName
                        }))), React.createElement("div", {
                  className: "flex justify-center w-full"
                }, React.createElement(MarketCardSide.make, {
                      marketName: marketName,
                      isLong: true,
                      value: totalLockedLong,
                      beta: longBeta
                    }), React.createElement("div", {
                      className: "w-1/2 flex items-center flex-col"
                    }, React.createElement("h2", {
                          className: "text-xs mt-1"
                        }, React.createElement("span", {
                              className: "font-bold"
                            }, "TOTAL"), " Liquidity"), React.createElement("div", {
                          className: "text-3xl font-alphbeta tracking-wider py-1"
                        }, "$" + FormatMoney.formatEther(totalValueLocked)), totalValueLocked.eq(zero) ? null : React.createElement(MarketBar.make, {
                            percentStrLong: percentStrLong,
                            percentStrShort: percentStrShort
                          }), React.createElement("div", {
                          className: "w-full flex justify-around"
                        }, React.createElement(Button.make, {
                              onClick: (function (param) {
                                  router.push("/mint?marketIndex=" + marketIndex.toString() + "&mintOption=long");
                                  
                                }),
                              children: "Mint Long",
                              variant: "small"
                            }), React.createElement(Button.make, {
                              onClick: (function (param) {
                                  router.push("/mint?marketIndex=" + marketIndex.toString() + "&mintOption=short");
                                  
                                }),
                              children: "Mint Short",
                              variant: "small"
                            }))), React.createElement(MarketCardSide.make, {
                      marketName: marketName,
                      isLong: false,
                      value: totalLockedShort,
                      beta: shortBeta
                    })));
}

var make = MarketCard;

export {
  zero ,
  oneHundred ,
  percentStr ,
  calculateBeta ,
  make ,
  
}
/* zero Not a pure module */
