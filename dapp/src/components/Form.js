// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("rescript/lib/js/curry.js");
var React = require("react");
var Ethers = require("../ethereum/Ethers.js");
var Belt_Option = require("rescript/lib/js/belt_Option.js");

function etherNumberInput(numberStr) {
  var numberStrRegex = /^[+]?\d+(\.\d+)?$/;
  if (numberStr === "") {
    return {
            TAG: 1,
            _0: "Amount is required",
            [Symbol.for("name")]: "Error"
          };
  } else if (numberStrRegex.test(numberStr)) {
    return Belt_Option.mapWithDefault(Ethers.Utils.parseEther(numberStr), {
                TAG: 1,
                _0: "Couldn't parse Ether value",
                [Symbol.for("name")]: "Error"
              }, (function (etherValue) {
                  return {
                          TAG: 0,
                          _0: etherValue,
                          [Symbol.for("name")]: "Ok"
                        };
                }));
  } else {
    return {
            TAG: 1,
            _0: "Incorrect number format - please use '.' for floating points.",
            [Symbol.for("name")]: "Error"
          };
  }
}

var Validators = {
  etherNumberInput: etherNumberInput
};

function Form(Props) {
  var className = Props.className;
  var onSubmit = Props.onSubmit;
  var children = Props.children;
  return React.createElement("form", {
              className: className,
              onSubmit: (function ($$event) {
                  if (!$$event.defaultPrevented) {
                    $$event.preventDefault();
                  }
                  return Curry._1(onSubmit, undefined);
                })
            }, children);
}

var make = Form;

exports.Validators = Validators;
exports.make = make;
/* react Not a pure module */
