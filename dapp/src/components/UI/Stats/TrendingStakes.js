// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("rescript/lib/js/curry.js");
var React = require("react");
var Loader = require("../Base/Loader.js");
var Queries = require("../../../data/Queries.js");
var Belt_Array = require("rescript/lib/js/belt_Array.js");
var StatsCalcs = require("../../../libraries/StatsCalcs.js");
var APYProvider = require("../../../libraries/APYProvider.js");
var StatsStakeCard = require("./StatsStakeCard.js");

function TrendingStakes(Props) {
  var $$global = Props.global;
  var marketDetailsQuery = Curry.app(Queries.MarketDetails.use, [
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined
      ]);
  var apy = APYProvider.useAPY(undefined);
  var bnApy = APYProvider.useBnApy(undefined);
  var match = marketDetailsQuery.data;
  if (marketDetailsQuery.loading) {
    return React.createElement("div", {
                className: "m-auto"
              }, React.createElement(Loader.Mini.make, {}));
  }
  if (marketDetailsQuery.error !== undefined) {
    return "Error loading data";
  }
  if (match === undefined) {
    return "You might think this is impossible, but depending on the situation it might not be!";
  }
  if (typeof apy !== "number" && apy.TAG === /* Loaded */0 && typeof bnApy !== "number" && bnApy.TAG === /* Loaded */0) {
    var trendingStakes = StatsCalcs.trendingStakes(match.syntheticMarkets, apy._0, $$global, bnApy._0);
    return Belt_Array.map(trendingStakes, (function (param) {
                  var isLong = param.isLong;
                  var marketName = param.marketName;
                  return React.createElement(StatsStakeCard.make, {
                              marketName: marketName,
                              isLong: isLong,
                              yield: param.apy,
                              rewards: param.floatApy,
                              stakeYield: param.stakeApy,
                              key: marketName + (
                                isLong ? "-long" : "-short"
                              )
                            });
                }));
  }
  return React.createElement(Loader.Mini.make, {});
}

var make = TrendingStakes;

exports.make = make;
/* react Not a pure module */
