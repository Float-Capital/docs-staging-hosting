// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var React = require("react");
var Loader = require("../Base/Loader.js");
var Masonry = require("../Masonry.js");
var Tooltip = require("../Base/Tooltip.js");
var CONSTANTS = require("../../../CONSTANTS.js");

function isHotAPY(apy) {
  return apy > CONSTANTS.hotAPYThreshold;
}

function apyToStr(apy) {
  return (apy * 100).toFixed(2);
}

function mapVal(apy) {
  return apyToStr(apy) + "%" + (
          apy > CONSTANTS.hotAPYThreshold ? "ðŸ”¥" : ""
        );
}

function apyComponent(heading, suffix, apy) {
  return React.createElement("div", {
              className: "flex flex-col items-center"
            }, React.createElement("h3", {
                  className: "text-xs mt-1"
                }, React.createElement("span", {
                      className: "font-bold"
                    }, heading), " APY", suffix), React.createElement("p", {
                  className: "text-xl tracking-widest font-alphbeta"
                }, apyToStr(apy) + "%"));
}

function StakeCardSide(Props) {
  var orderPostion = Props.orderPostion;
  var orderPostionMobile = Props.orderPostionMobile;
  var isLong = Props.isLong;
  var apy = Props.apy;
  var floatApy = Props.floatApy;
  var stakeApy = Props.stakeApy;
  var tmp;
  var exit = 0;
  if (typeof apy === "number" || apy.TAG !== /* Loaded */0) {
    exit = 1;
  } else {
    var apyVal = apy._0;
    if (typeof stakeApy === "number" || stakeApy.TAG !== /* Loaded */0) {
      exit = 1;
    } else {
      var stakeApy$1 = stakeApy._0;
      var apyGreaterThanZero = apyVal >= 0.01;
      var stakeApyGreaterThanZero = stakeApy$1 >= 0.01;
      tmp = React.createElement(React.Fragment, undefined, Masonry.ifElement(apyGreaterThanZero, apyComponent("SYNTH", null, apyVal)), Masonry.ifElement(apyGreaterThanZero && stakeApyGreaterThanZero, React.createElement("span", {
                    className: "mx-2"
                  }, "+")), Masonry.ifElement(stakeApyGreaterThanZero, apyComponent("STAKE", React.createElement("span", {
                        className: "ml-1"
                      }, React.createElement(Tooltip.make, {
                            tip: "Expected yield from FLT token buybacks"
                          })), stakeApy$1)));
    }
  }
  if (exit === 1) {
    tmp = React.createElement(Loader.Mini.make, {});
  }
  return React.createElement("div", {
              className: "order-" + String(orderPostionMobile) + " md:order-" + String(orderPostion) + " w-1/2 md:w-1/4 flex items-center flex grow flex-wrap flex-col"
            }, React.createElement("div", {
                  className: "flex flex-col items-center justify-center pt-0"
                }, React.createElement("h3", {
                      className: "text-xs mt-2"
                    }, React.createElement("span", {
                          className: "font-bold"
                        }, isLong ? "LONG" : "SHORT"), " FLOAT Multiplier"), React.createElement("p", {
                      className: "text-2xl md:text-4xl tracking-widest font-alphbeta"
                    }, mapVal(floatApy))), React.createElement("div", {
                  className: "flex items-center justify-center pt-0 text-gray-600"
                }, tmp));
}

var ifElement = Masonry.ifElement;

var make = StakeCardSide;

exports.ifElement = ifElement;
exports.isHotAPY = isHotAPY;
exports.apyToStr = apyToStr;
exports.mapVal = mapVal;
exports.apyComponent = apyComponent;
exports.make = make;
/* react Not a pure module */
