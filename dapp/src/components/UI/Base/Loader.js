// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Misc = require("../../../libraries/Misc.js");
var Curry = require("rescript/lib/js/curry.js");
var React = require("react");

function Loader$Overlay(Props) {
  return React.createElement("div", {
              className: "absolute top-0 left-0 w-full h-full flex justify-center align-center"
            }, React.createElement("img", {
                  className: "object-contain",
                  src: "/img/loading.gif"
                }));
}

var Overlay = {
  make: Loader$Overlay
};

function Loader$Mini(Props) {
  return React.createElement("img", {
              className: "w-6 mx-auto",
              src: "/img/mini-loading.gif"
            });
}

var Mini = {
  make: Loader$Mini
};

function Loader$Ellipses(Props) {
  return React.createElement("div", {
              className: "relative"
            }, React.createElement("div", {
                  className: "ellipsis"
                }, React.createElement("div", {
                      className: "ellipsis-inner"
                    })));
}

var Ellipses = {
  make: Loader$Ellipses
};

function Loader$Tiny(Props) {
  var match = React.useState(function () {
        return 0;
      });
  var setInlineLoaderState = match[1];
  var inlineLoaderState = match[0];
  Misc.Time.useInterval((function (param) {
          return Curry._1(setInlineLoaderState, (function (current) {
                        return (current + 1 | 0) % 3;
                      }));
        }), 300);
  var elipsisDot = function (display) {
    return React.createElement("span", {
                className: "opacity-" + (
                  display ? "40" : "100"
                )
              }, ".");
  };
  return React.createElement(React.Fragment, undefined, elipsisDot(inlineLoaderState === 0), elipsisDot(inlineLoaderState === 1), elipsisDot(inlineLoaderState === 2));
}

var Tiny = {
  make: Loader$Tiny
};

function Loader(Props) {
  return React.createElement("div", {
              className: "screen-centered-container"
            }, React.createElement("img", {
                  className: "loader",
                  src: "/img/loading.gif"
                }));
}

var make = Loader;

exports.Overlay = Overlay;
exports.Mini = Mini;
exports.Ellipses = Ellipses;
exports.Tiny = Tiny;
exports.make = make;
/* Misc Not a pure module */
