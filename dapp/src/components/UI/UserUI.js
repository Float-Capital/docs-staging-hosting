// Generated by ReScript, PLEASE EDIT WITH CARE

import * as React from "react";
import * as Button from "./Button.js";

function UserUI$UserContainer(Props) {
  var children = Props.children;
  return React.createElement("div", {
              className: "min-w-3/4 flex flex-col items-center"
            }, children);
}

var UserContainer = {
  make: UserUI$UserContainer
};

function UserUI$UserBanner(Props) {
  return React.createElement("div", {
              className: "p-5 mt-7 flex bg-white bg-opacity-75 rounded-lg shadow-lg"
            }, React.createElement("span", {
                  className: "text-sm"
                }, "üí≤ BUSD Balance: $1234.todo"), React.createElement("span", {
                  className: "text-sm ml-20"
                }, "üè¶ Total Value in Float: $1234.todo"));
}

var UserBanner = {
  make: UserUI$UserBanner
};

function UserUI$UserColumnContainer(Props) {
  var children = Props.children;
  return React.createElement("div", {
              className: "w-full flex mt-1"
            }, children);
}

var UserColumnContainer = {
  make: UserUI$UserColumnContainer
};

function UserUI$UserColumn(Props) {
  var children = Props.children;
  return React.createElement("div", {
              className: "m-4 w-1/3"
            }, children);
}

var UserColumn = {
  make: UserUI$UserColumn
};

function UserUI$UserColumnCard(Props) {
  var children = Props.children;
  return React.createElement("div", {
              className: "bg-white w-full bg-opacity-75 rounded-lg shadow-lg p-4"
            }, children);
}

var UserColumnCard = {
  make: UserUI$UserColumnCard
};

function UserUI$UserColumnHeader(Props) {
  var children = Props.children;
  var subheaderOpt = Props.subheader;
  var subheader = subheaderOpt !== undefined ? subheaderOpt : false;
  return React.createElement("h1", {
              className: "text-center " + (
                subheader ? "text-base" : "text-lg"
              ) + " font-alphbeta mb-4 mt-2"
            }, children);
}

var UserColumnHeader = {
  make: UserUI$UserColumnHeader
};

function UserUI$UserProfileHeader(Props) {
  var name = Props.name;
  var level = Props.level;
  return React.createElement("div", {
              className: "w-full flex flex-row justify-around"
            }, React.createElement("div", {
                  className: "w-24 h-24 rounded-full border-2 border-light-purple flex items-center justify-center"
                }, React.createElement("img", {
                      className: "inline h-10",
                      src: "/img/mario.png"
                    })), React.createElement("div", {
                  className: "flex flex-col text-center justify-center"
                }, React.createElement("div", undefined, name), React.createElement("div", undefined, "Lvl. " + level)));
}

var UserProfileHeader = {
  make: UserUI$UserProfileHeader
};

function UserUI$UserColumnTextList(Props) {
  var children = Props.children;
  return React.createElement("div", {
              className: "flex flex-col mt-3"
            }, children);
}

var UserColumnTextList = {
  make: UserUI$UserColumnTextList
};

function UserUI$UserColumnTextCenter(Props) {
  var children = Props.children;
  return React.createElement("div", {
              className: "flex flex-col items-center"
            }, children);
}

var UserColumnTextCenter = {
  make: UserUI$UserColumnTextCenter
};

function UserUI$UserColumnText(Props) {
  var icon = Props.icon;
  var head = Props.head;
  var bodyOpt = Props.body;
  var body = bodyOpt !== undefined ? bodyOpt : "";
  return React.createElement("div", {
              className: "ml-4 mb-1"
            }, icon !== undefined ? React.createElement("img", {
                    className: "inline mr-1 h-5",
                    src: icon
                  }) : "", React.createElement("span", {
                  className: "text-sm"
                }, head + ": "), body);
}

var UserColumnText = {
  make: UserUI$UserColumnText
};

function UserUI$UserMarketBox(Props) {
  var name = Props.name;
  var isLong = Props.isLong;
  var tokens = Props.tokens;
  var value = Props.value;
  var children = Props.children;
  return React.createElement("div", {
              className: "flex w-11/12 mx-auto p-2 mb-2 border-2 border-light-purple rounded-lg z-10 shadow"
            }, React.createElement("div", {
                  className: "w-1/3 text-sm self-center"
                }, name, React.createElement("br", {
                      className: "mt-1"
                    }), isLong ? "Long ‚ÜóÔ∏è" : "Short ‚ÜòÔ∏è"), React.createElement("div", {
                  className: "w-1/3 text-sm mx-2 text-center self-center"
                }, React.createElement("span", {
                      className: "text-sm"
                    }, tokens), React.createElement("span", {
                      className: "text-xs"
                    }, "tkns"), React.createElement("br", {
                      className: "mt-1"
                    }), React.createElement("span", {
                      className: "text-xs"
                    }, "~$".concat(value))), React.createElement("div", {
                  className: "w-1/3 self-center"
                }, children));
}

var UserMarketBox = {
  make: UserUI$UserMarketBox
};

function UserUI$UserMarketStakeOrRedeem(Props) {
  return React.createElement("div", {
              className: "flex flex-col"
            }, React.createElement(Button.make, {
                  onClick: (function (param) {
                      
                    }),
                  children: "stake",
                  variant: "tiny"
                }), React.createElement(Button.make, {
                  onClick: (function (param) {
                      
                    }),
                  children: "redeem",
                  variant: "tiny"
                }));
}

var UserMarketStakeOrRedeem = {
  make: UserUI$UserMarketStakeOrRedeem
};

function UserUI$UserMarketUnstake(Props) {
  return React.createElement("div", {
              className: "flex flex-col"
            }, React.createElement("span", {
                  className: "text-xxs self-center"
                }, React.createElement("i", undefined, "4 days ago")), React.createElement(Button.make, {
                  onClick: (function (param) {
                      
                    }),
                  children: "redeem",
                  variant: "tiny"
                }));
}

var UserMarketUnstake = {
  make: UserUI$UserMarketUnstake
};

function UserUI$UserFloatBox(Props) {
  var accruing = Props.accruing;
  var balance = Props.balance;
  var minted = Props.minted;
  return React.createElement("div", {
              className: "w-11/12 mx-auto mb-2 border-2 border-light-purple rounded-lg z-10 shadow"
            }, React.createElement(UserUI$UserColumnTextList, {
                  children: null
                }, React.createElement(UserUI$UserColumnText, {
                      head: "float accruing",
                      body: accruing
                    }), React.createElement(UserUI$UserColumnText, {
                      head: "float balance",
                      body: balance
                    }), React.createElement(UserUI$UserColumnText, {
                      head: "float minted",
                      body: minted
                    })), React.createElement("div", {
                  className: "flex justify-around flex-row my-1"
                }, "üåä", React.createElement(Button.make, {
                      onClick: (function (param) {
                          
                        }),
                      children: "claim float",
                      variant: "tiny"
                    }), "üåä"));
}

var UserFloatBox = {
  make: UserUI$UserFloatBox
};

export {
  UserContainer ,
  UserBanner ,
  UserColumnContainer ,
  UserColumn ,
  UserColumnCard ,
  UserColumnHeader ,
  UserProfileHeader ,
  UserColumnTextList ,
  UserColumnTextCenter ,
  UserColumnText ,
  UserMarketBox ,
  UserMarketStakeOrRedeem ,
  UserMarketUnstake ,
  UserFloatBox ,
  
}
/* react Not a pure module */
