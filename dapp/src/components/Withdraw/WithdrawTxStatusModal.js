// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Tick = require("../UI/Base/Tick.js");
var Curry = require("rescript/lib/js/curry.js");
var React = require("react");
var Loader = require("../UI/Base/Loader.js");
var ModalProvider = require("../../libraries/ModalProvider.js");
var MessageUsOnDiscord = require("../Ethereum/MessageUsOnDiscord.js");
var ViewOnBlockExplorer = require("../Ethereum/ViewOnBlockExplorer.js");

function useWithdrawTxModal(txState) {
  var match = ModalProvider.useModalDisplayChain(undefined);
  var startModalChain = match.startModalChain;
  var hideModalChain = match.hideModalChain;
  var showNextModalInChain = match.showNextModalInChain;
  React.useEffect((function () {
          if (typeof txState === "number") {
            if (txState === /* UnInitialised */0) {
              Curry._1(hideModalChain, undefined);
            } else {
              Curry._1(startModalChain, React.createElement("div", {
                        className: "text-center m-3"
                      }, React.createElement(Loader.Ellipses.make, {}), React.createElement("h1", undefined, "Confirm the transaction to withdraw your DAI")));
            }
          } else {
            switch (txState.TAG | 0) {
              case /* SignedAndSubmitted */0 :
                  Curry._1(showNextModalInChain, React.createElement("div", {
                            className: "text-center m-3"
                          }, React.createElement("div", {
                                className: "m-2"
                              }, React.createElement(Loader.Mini.make, {})), React.createElement("p", undefined, "Withdraw transaction pending... "), React.createElement(ViewOnBlockExplorer.make, {
                                txHash: txState._0
                              })));
                  break;
              case /* Declined */1 :
                  Curry._1(showNextModalInChain, React.createElement("div", {
                            className: "text-center m-3"
                          }, React.createElement("p", undefined, "The transaction was rejected by your wallet"), React.createElement(MessageUsOnDiscord.make, {})));
                  break;
              case /* Complete */2 :
                  Curry._1(showNextModalInChain, React.createElement("div", {
                            className: "text-center m-3"
                          }, React.createElement(Tick.make, {}), React.createElement("p", undefined, "Transaction complete ðŸŽ‰"), React.createElement(ViewOnBlockExplorer.make, {
                                txHash: txState._0.transactionHash
                              })));
                  break;
              case /* Failed */3 :
                  Curry._1(showNextModalInChain, React.createElement("div", {
                            className: "text-center m-3"
                          }, React.createElement("h1", undefined, "The transaction failed."), React.createElement(ViewOnBlockExplorer.make, {
                                txHash: txState._0
                              }), React.createElement(MessageUsOnDiscord.make, {})));
                  break;
              
            }
          }
          
        }), [txState]);
  
}

exports.useWithdrawTxModal = useWithdrawTxModal;
/* Tick Not a pure module */
