// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("rescript/lib/js/curry.js");
var React = require("react");
var Loader = require("../components/UI/Base/Loader.js");
var Queries = require("../data/Queries.js");
var StatsCalcs = require("../libraries/StatsCalcs.js");
var TotalValueCard = require("../components/UI/Stats/TotalValueCard.js");
var StakeHighlightsCard = require("../components/UI/Stats/StakeHighlightsCard.js");
var FloatTokenHighlightCard = require("../components/UI/Stats/FloatTokenHighlightCard.js");
var FloatProtocolHighlightsCard = require("../components/UI/Stats/FloatProtocolHighlightsCard.js");
var SyntheticAssetsHighlightCard = require("../components/UI/Stats/SyntheticAssetsHighlightCard.js");

function Stats(Props) {
  var globalStateQuery = Curry.app(Queries.GlobalState.use, [
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined
      ]);
  var marketDetailsQuery = Curry.app(Queries.MarketDetails.use, [
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined
      ]);
  var match = globalStateQuery.data;
  var tmp;
  if (globalStateQuery.loading) {
    tmp = React.createElement(Loader.Mini.make, {});
  } else if (marketDetailsQuery.loading) {
    tmp = React.createElement(Loader.Mini.make, {});
  } else if (marketDetailsQuery.error !== undefined || globalStateQuery.error !== undefined) {
    tmp = "Error loading data";
  } else if (match !== undefined) {
    var match$1 = match.globalStates;
    if (match$1.length !== 1) {
      tmp = "Query returned wrong number of results";
    } else {
      var $$global = match$1[0];
      var match$2 = marketDetailsQuery.data;
      if (match$2 !== undefined) {
        var syntheticMarkets = match$2.syntheticMarkets;
        var match$3 = StatsCalcs.getTotalValueLockedAndTotalStaked(syntheticMarkets);
        var totalValueStaked = match$3.totalValueStaked;
        var totalValueLocked = match$3.totalValueLocked;
        var totalSynthValue = StatsCalcs.getTotalSynthValue(totalValueLocked, totalValueStaked);
        var numberOfSynths = String((syntheticMarkets.length << 1));
        tmp = React.createElement("div", {
              className: "w-full max-w-7xl flex flex-col self-center items-center justify-start"
            }, React.createElement(TotalValueCard.make, {
                  totalValueLocked: totalValueLocked
                }), React.createElement("div", {
                  className: "w-full flex flex-col md:flex-row justify-between"
                }, React.createElement("div", {
                      className: "w-full md:w-1/3 px-3 md:px-0 m-0 md:m-4"
                    }, React.createElement(FloatProtocolHighlightsCard.make, {
                          liveSince: $$global.timestampLaunched,
                          totalUsers: $$global.totalUsers,
                          txHash: $$global.txHash,
                          numberOfSynths: numberOfSynths
                        })), React.createElement("div", {
                      className: "w-full md:w-1/3 px-3 md:px-0 m-0 md:m-4"
                    }, React.createElement(SyntheticAssetsHighlightCard.make, {
                          totalSynthValue: totalSynthValue
                        }), React.createElement(FloatTokenHighlightCard.make, {
                          totalFloatMinted: $$global.totalFloatMinted
                        })), React.createElement("div", {
                      className: "w-full md:w-1/3 px-3 md:px-0 m-0 md:m-4"
                    }, React.createElement(StakeHighlightsCard.make, {
                          totalValueStaked: totalValueStaked,
                          global: $$global
                        }))));
      } else {
        tmp = "Query returned wrong number of results";
      }
    }
  } else {
    tmp = marketDetailsQuery.data !== undefined ? "Query returned wrong number of results" : "Error getting data";
  }
  return React.createElement("div", {
              className: "flex flex-col overflow-x-hidden"
            }, tmp);
}

var make = Stats;

var $$default = Stats;

exports.make = make;
exports.$$default = $$default;
exports.default = $$default;
exports.__esModule = true;
/* react Not a pure module */
