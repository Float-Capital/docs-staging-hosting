// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Next = require("../bindings/Next.js");
var Curry = require("rescript/lib/js/curry.js");
var React = require("react");
var Button = require("../components/UI/Base/Button.js");
var Loader = require("../components/UI/Base/Loader.js");
var Ethers = require("ethers");
var Js_dict = require("rescript/lib/js/js_dict.js");
var Queries = require("../data/Queries.js");
var Belt_Int = require("rescript/lib/js/belt_Int.js");
var Caml_obj = require("rescript/lib/js/caml_obj.js");
var CONSTANTS = require("../CONSTANTS.js");
var StakeForm = require("../components/Stake/StakeForm.js");
var Link = require("next/link").default;
var Belt_Array = require("rescript/lib/js/belt_Array.js");
var Belt_Option = require("rescript/lib/js/belt_Option.js");
var Caml_option = require("rescript/lib/js/caml_option.js");
var Router = require("next/router");
var ContractHooks = require("../components/Testing/Admin/ContractHooks.js");

function Stake$StakeDetailsWrapper(Props) {
  var market = Props.market;
  var marketIndex = Props.marketIndex;
  var actionOption = Props.actionOption;
  var children = Props.children;
  return React.createElement("div", {
              className: "max-w-lg mx-auto"
            }, React.createElement(Link, {
                  href: "/app/stake-markets",
                  children: React.createElement("div", {
                        className: "uppercase text-sm text-gray-600 hover:text-gray-500 cursor-pointer mb-2"
                      }, "â—€", React.createElement("span", {
                            className: "text-xxs"
                          }, " Back to stake markets"))
                }), React.createElement("div", {
                  className: "p-5 rounded-lg flex flex-col bg-white bg-opacity-70 shadow-lg"
                }, React.createElement("div", {
                      className: "flex justify-between items-center mb-2"
                    }, React.createElement("div", {
                          className: "text-xl"
                        }, market.name + " (" + market.symbol + ")"), React.createElement(Link, {
                          href: "/app/?marketIndex=" + marketIndex + "&actionOption=" + actionOption + "&tab=stake",
                          children: React.createElement("div", {
                                className: "text-xxs hover:underline cursor-pointer"
                              }, "view details")
                        })), children));
}

var StakeDetailsWrapper = {
  make: Stake$StakeDetailsWrapper
};

function Stake(Props) {
  var router = Router.useRouter();
  var markets = Curry.app(Queries.MarketDetails.use, [
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined
      ]);
  var marketIndex = Belt_Option.getWithDefault(Js_dict.get(router.query, "marketIndex"), "1");
  var actionOption = Belt_Option.getWithDefault(Js_dict.get(router.query, "actionOption"), "short");
  var tokenId = Belt_Option.getWithDefault(Js_dict.get(router.query, "tokenId"), CONSTANTS.zeroAddressStr);
  var match = ContractHooks.useErc20Balance(Ethers.utils.getAddress(tokenId));
  var optBalance = match.data;
  var match$1 = markets.data;
  var tmp;
  if (markets.loading) {
    tmp = React.createElement(Loader.make, {});
  } else if (markets.error !== undefined) {
    tmp = "Error loading data";
  } else if (match$1 !== undefined) {
    var optFirstMarket = Belt_Array.get(match$1.syntheticMarkets, Belt_Option.getWithDefault(Belt_Int.fromString(marketIndex), 1) - 1 | 0);
    tmp = optFirstMarket !== undefined ? (
        optBalance !== undefined ? React.createElement(Stake$StakeDetailsWrapper, {
                market: optFirstMarket,
                marketIndex: marketIndex,
                actionOption: actionOption,
                children: Caml_obj.caml_equal(Caml_option.valFromOption(optBalance), CONSTANTS.zeroBN) ? React.createElement("div", undefined, React.createElement("p", {
                            className: "m-4 mx-auto text-center"
                          }, "Mint market tokens in order to stake"), React.createElement("div", {
                            className: "max-w-xs mx-auto"
                          }, React.createElement(Button.make, {
                                onClick: (function (param) {
                                    return Next.Router.pushShallow(router, "/app/mint?marketIndex=" + marketIndex + "&actionOption=" + actionOption);
                                  }),
                                children: "Mint"
                              }))) : React.createElement(StakeForm.make, {
                        tokenId: tokenId
                      })
              }) : React.createElement(Loader.Mini.make, {})
      ) : React.createElement("p", undefined, "No markets exist");
  } else {
    tmp = "You might think this is impossible, but depending on the situation it might not be!";
  }
  return React.createElement("section", {
              className: "h-full px-6"
            }, tmp);
}

var make = Stake;

var $$default = Stake;

exports.StakeDetailsWrapper = StakeDetailsWrapper;
exports.make = make;
exports.$$default = $$default;
exports.default = $$default;
exports.__esModule = true;
/* react Not a pure module */
