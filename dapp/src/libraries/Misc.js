// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Curry from "bs-platform/lib/es6/curry.js";
import * as React from "react";
import * as Ethers from "ethers";
import * as Js_math from "bs-platform/lib/es6/js_math.js";
import * as Caml_option from "bs-platform/lib/es6/caml_option.js";

var optLocalstorage = typeof localStorage === "undefined" ? undefined : Caml_option.some(localStorage);

function onlyExecuteClientSide(functionForClientsideExecution) {
  if (typeof window !== "undefined") {
    return Curry._1(functionForClientsideExecution, undefined);
  }
  
}

function getCurrentTimestamp(param) {
  return Js_math.floor(Date.now() / 1000);
}

function useCurrentTime(updateInterval) {
  var match = React.useState(function () {
        return getCurrentTimestamp(undefined);
      });
  var setTimeLeft = match[1];
  React.useEffect((function () {
          var interval = setInterval((function (param) {
                  return Curry._1(setTimeLeft, (function (param) {
                                return getCurrentTimestamp(undefined);
                              }));
                }), updateInterval);
          return (function (param) {
                    clearInterval(interval);
                    
                  });
        }), [
        setTimeLeft,
        updateInterval
      ]);
  return match[0];
}

function useCurrentTimeBN(updateInterval) {
  return Ethers.BigNumber.from(useCurrentTime(updateInterval));
}

var Time = {
  getCurrentTimestamp: getCurrentTimestamp,
  useCurrentTime: useCurrentTime,
  useCurrentTimeBN: useCurrentTimeBN
};

export {
  optLocalstorage ,
  onlyExecuteClientSide ,
  Time ,
  
}
/* optLocalstorage Not a pure module */
