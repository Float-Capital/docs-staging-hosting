// Generated by ReScript, PLEASE EDIT WITH CARE

import * as GqlConverters from "./GqlConverters.js";
import * as ApolloClient__React_Hooks_UseQuery from "rescript-apollo-client/src/@apollo/client/react/hooks/ApolloClient__React_Hooks_UseQuery.js";

var Raw = {};

var query = (require("@apollo/client").gql`
  query   {
    systemStates(first: 1, orderBy: timestamp, orderDirection: desc)  {
      __typename
      timestamp
      txHash
      blockNumber
      syntheticPrice
      longTokenPrice
      shortTokenPrice
      totalLockedLong
      totalLockedShort
      totalValueLocked
      setBy
    }
  }
`);

function parse(value) {
  var value$1 = value.systemStates;
  return {
          systemStates: value$1.map(function (value) {
                return {
                        __typename: value.__typename,
                        timestamp: GqlConverters.$$BigInt.parse(value.timestamp),
                        txHash: GqlConverters.Bytes.parse(value.txHash),
                        blockNumber: GqlConverters.$$BigInt.parse(value.blockNumber),
                        syntheticPrice: GqlConverters.$$BigInt.parse(value.syntheticPrice),
                        longTokenPrice: GqlConverters.$$BigInt.parse(value.longTokenPrice),
                        shortTokenPrice: GqlConverters.$$BigInt.parse(value.shortTokenPrice),
                        totalLockedLong: GqlConverters.$$BigInt.parse(value.totalLockedLong),
                        totalLockedShort: GqlConverters.$$BigInt.parse(value.totalLockedShort),
                        totalValueLocked: GqlConverters.$$BigInt.parse(value.totalValueLocked),
                        setBy: GqlConverters.Bytes.parse(value.setBy)
                      };
              })
        };
}

function serialize(value) {
  var value$1 = value.systemStates;
  var systemStates = value$1.map(function (value) {
        var value$1 = value.setBy;
        var value$2 = GqlConverters.Bytes.serialize(value$1);
        var value$3 = value.totalValueLocked;
        var value$4 = GqlConverters.$$BigInt.serialize(value$3);
        var value$5 = value.totalLockedShort;
        var value$6 = GqlConverters.$$BigInt.serialize(value$5);
        var value$7 = value.totalLockedLong;
        var value$8 = GqlConverters.$$BigInt.serialize(value$7);
        var value$9 = value.shortTokenPrice;
        var value$10 = GqlConverters.$$BigInt.serialize(value$9);
        var value$11 = value.longTokenPrice;
        var value$12 = GqlConverters.$$BigInt.serialize(value$11);
        var value$13 = value.syntheticPrice;
        var value$14 = GqlConverters.$$BigInt.serialize(value$13);
        var value$15 = value.blockNumber;
        var value$16 = GqlConverters.$$BigInt.serialize(value$15);
        var value$17 = value.txHash;
        var value$18 = GqlConverters.Bytes.serialize(value$17);
        var value$19 = value.timestamp;
        var value$20 = GqlConverters.$$BigInt.serialize(value$19);
        var value$21 = value.__typename;
        return {
                __typename: value$21,
                timestamp: value$20,
                txHash: value$18,
                blockNumber: value$16,
                syntheticPrice: value$14,
                longTokenPrice: value$12,
                shortTokenPrice: value$10,
                totalLockedLong: value$8,
                totalLockedShort: value$6,
                totalValueLocked: value$4,
                setBy: value$2
              };
      });
  return {
          systemStates: systemStates
        };
}

function serializeVariables(param) {
  
}

function makeVariables(param) {
  
}

function makeDefaultVariables(param) {
  
}

var LatestSystemState_inner = {
  Raw: Raw,
  query: query,
  parse: parse,
  serialize: serialize,
  serializeVariables: serializeVariables,
  makeVariables: makeVariables,
  makeDefaultVariables: makeDefaultVariables
};

var include = ApolloClient__React_Hooks_UseQuery.Extend({
      query: query,
      Raw: Raw,
      parse: parse,
      serialize: serialize,
      serializeVariables: serializeVariables
    });

var LatestSystemState_refetchQueryDescription = include.refetchQueryDescription;

var LatestSystemState_use = include.use;

var LatestSystemState_useLazy = include.useLazy;

var LatestSystemState_useLazyWithVariables = include.useLazyWithVariables;

var LatestSystemState = {
  LatestSystemState_inner: LatestSystemState_inner,
  Raw: Raw,
  query: query,
  parse: parse,
  serialize: serialize,
  serializeVariables: serializeVariables,
  makeVariables: makeVariables,
  makeDefaultVariables: makeDefaultVariables,
  refetchQueryDescription: LatestSystemState_refetchQueryDescription,
  use: LatestSystemState_use,
  useLazy: LatestSystemState_useLazy,
  useLazyWithVariables: LatestSystemState_useLazyWithVariables
};

var Raw$1 = {};

var query$1 = (require("@apollo/client").gql`
  query   {
    syntheticMarkets  {
      __typename
      name
      symbol
      marketIndex
      totalValueLockedInMarket
      oracleAddress
      syntheticLong  {
        __typename
        id
        tokenAddress
        totalValueLocked
        tokenSupply
        tokenPrice
      }
      syntheticShort  {
        __typename
        id
        tokenAddress
        totalValueLocked
        tokenSupply
        tokenPrice
      }
    }
  }
`);

function parse$1(value) {
  var value$1 = value.syntheticMarkets;
  return {
          syntheticMarkets: value$1.map(function (value) {
                var value$1 = value.syntheticLong;
                var value$2 = value.syntheticShort;
                return {
                        __typename: value.__typename,
                        name: value.name,
                        symbol: value.symbol,
                        marketIndex: GqlConverters.$$BigInt.parse(value.marketIndex),
                        totalValueLockedInMarket: GqlConverters.$$BigInt.parse(value.totalValueLockedInMarket),
                        oracleAddress: GqlConverters.Bytes.parse(value.oracleAddress),
                        syntheticLong: {
                          __typename: value$1.__typename,
                          id: value$1.id,
                          tokenAddress: GqlConverters.Address.parse(value$1.tokenAddress),
                          totalValueLocked: GqlConverters.$$BigInt.parse(value$1.totalValueLocked),
                          tokenSupply: GqlConverters.$$BigInt.parse(value$1.tokenSupply),
                          tokenPrice: GqlConverters.$$BigInt.parse(value$1.tokenPrice)
                        },
                        syntheticShort: {
                          __typename: value$2.__typename,
                          id: value$2.id,
                          tokenAddress: GqlConverters.Address.parse(value$2.tokenAddress),
                          totalValueLocked: GqlConverters.$$BigInt.parse(value$2.totalValueLocked),
                          tokenSupply: GqlConverters.$$BigInt.parse(value$2.tokenSupply),
                          tokenPrice: GqlConverters.$$BigInt.parse(value$2.tokenPrice)
                        }
                      };
              })
        };
}

function serialize$1(value) {
  var value$1 = value.syntheticMarkets;
  var syntheticMarkets = value$1.map(function (value) {
        var value$1 = value.syntheticShort;
        var value$2 = value$1.tokenPrice;
        var value$3 = GqlConverters.$$BigInt.serialize(value$2);
        var value$4 = value$1.tokenSupply;
        var value$5 = GqlConverters.$$BigInt.serialize(value$4);
        var value$6 = value$1.totalValueLocked;
        var value$7 = GqlConverters.$$BigInt.serialize(value$6);
        var value$8 = value$1.tokenAddress;
        var value$9 = GqlConverters.Address.serialize(value$8);
        var value$10 = value$1.id;
        var value$11 = value$1.__typename;
        var syntheticShort = {
          __typename: value$11,
          id: value$10,
          tokenAddress: value$9,
          totalValueLocked: value$7,
          tokenSupply: value$5,
          tokenPrice: value$3
        };
        var value$12 = value.syntheticLong;
        var value$13 = value$12.tokenPrice;
        var value$14 = GqlConverters.$$BigInt.serialize(value$13);
        var value$15 = value$12.tokenSupply;
        var value$16 = GqlConverters.$$BigInt.serialize(value$15);
        var value$17 = value$12.totalValueLocked;
        var value$18 = GqlConverters.$$BigInt.serialize(value$17);
        var value$19 = value$12.tokenAddress;
        var value$20 = GqlConverters.Address.serialize(value$19);
        var value$21 = value$12.id;
        var value$22 = value$12.__typename;
        var syntheticLong = {
          __typename: value$22,
          id: value$21,
          tokenAddress: value$20,
          totalValueLocked: value$18,
          tokenSupply: value$16,
          tokenPrice: value$14
        };
        var value$23 = value.oracleAddress;
        var value$24 = GqlConverters.Bytes.serialize(value$23);
        var value$25 = value.totalValueLockedInMarket;
        var value$26 = GqlConverters.$$BigInt.serialize(value$25);
        var value$27 = value.marketIndex;
        var value$28 = GqlConverters.$$BigInt.serialize(value$27);
        var value$29 = value.symbol;
        var value$30 = value.name;
        var value$31 = value.__typename;
        return {
                __typename: value$31,
                name: value$30,
                symbol: value$29,
                marketIndex: value$28,
                totalValueLockedInMarket: value$26,
                oracleAddress: value$24,
                syntheticLong: syntheticLong,
                syntheticShort: syntheticShort
              };
      });
  return {
          syntheticMarkets: syntheticMarkets
        };
}

function serializeVariables$1(param) {
  
}

function makeVariables$1(param) {
  
}

function makeDefaultVariables$1(param) {
  
}

var MarketDetails_inner = {
  Raw: Raw$1,
  query: query$1,
  parse: parse$1,
  serialize: serialize$1,
  serializeVariables: serializeVariables$1,
  makeVariables: makeVariables$1,
  makeDefaultVariables: makeDefaultVariables$1
};

var include$1 = ApolloClient__React_Hooks_UseQuery.Extend({
      query: query$1,
      Raw: Raw$1,
      parse: parse$1,
      serialize: serialize$1,
      serializeVariables: serializeVariables$1
    });

var MarketDetails_refetchQueryDescription = include$1.refetchQueryDescription;

var MarketDetails_use = include$1.use;

var MarketDetails_useLazy = include$1.useLazy;

var MarketDetails_useLazyWithVariables = include$1.useLazyWithVariables;

var MarketDetails = {
  MarketDetails_inner: MarketDetails_inner,
  Raw: Raw$1,
  query: query$1,
  parse: parse$1,
  serialize: serialize$1,
  serializeVariables: serializeVariables$1,
  makeVariables: makeVariables$1,
  makeDefaultVariables: makeDefaultVariables$1,
  refetchQueryDescription: MarketDetails_refetchQueryDescription,
  use: MarketDetails_use,
  useLazy: MarketDetails_useLazy,
  useLazyWithVariables: MarketDetails_useLazyWithVariables
};

export {
  LatestSystemState ,
  MarketDetails ,
  
}
/* query Not a pure module */
