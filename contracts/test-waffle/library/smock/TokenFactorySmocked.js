// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Chai = require("chai");
var Belt_Array = require("rescript/lib/js/belt_Array.js");
var Smock = require("@defi-wonderland/smock");

const { expect, use } = require("chai");
use(require('@defi-wonderland/smock').smock.matchers);
;

function make(param) {
  return Smock.smock.fake("TokenFactory");
}

function createSyntheticTokenOld(_r) {
  var array = _r.createSyntheticToken.calls;
  return Belt_Array.map(array, (function (param) {
                return {
                        syntheticName: param[0],
                        syntheticSymbol: param[1],
                        staker: param[2],
                        marketIndex: param[3],
                        isLong: param[4]
                      };
              }));
}

function createSyntheticTokenCallCheck(contract, param) {
  Chai.expect(contract.createSyntheticToken).to.have.been.calledWith(param.syntheticName, param.syntheticSymbol, param.staker, param.marketIndex, param.isLong);
  
}

function longShortOld(_r) {
  var array = _r.longShort.calls;
  return Belt_Array.map(array, (function (param) {
                
              }));
}

function longShortCallCheck(contract) {
  Chai.expect(contract.longShort).to.have.been.calledWith();
  
}

var uninitializedValue;

exports.make = make;
exports.uninitializedValue = uninitializedValue;
exports.createSyntheticTokenOld = createSyntheticTokenOld;
exports.createSyntheticTokenCallCheck = createSyntheticTokenCallCheck;
exports.longShortOld = longShortOld;
exports.longShortCallCheck = longShortCallCheck;
/*  Not a pure module */
