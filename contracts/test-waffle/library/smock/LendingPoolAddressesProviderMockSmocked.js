// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Chai = require("chai");
var Belt_Array = require("rescript/lib/js/belt_Array.js");
var Smock = require("@defi-wonderland/smock");

const { expect, use } = require("chai");
use(require('@defi-wonderland/smock').smock.matchers);
;

function make(param) {
  return Smock.smock.fake("LendingPoolAddressesProviderMock");
}

function getLendingPoolOld(_r) {
  var array = _r.getLendingPool.calls;
  return Belt_Array.map(array, (function (param) {
                
              }));
}

function getLendingPoolCallCheck(contract) {
  Chai.expect(contract.getLendingPool).to.have.been.calledWith();
  
}

function lendingPoolOld(_r) {
  var array = _r.lendingPool.calls;
  return Belt_Array.map(array, (function (param) {
                
              }));
}

function lendingPoolCallCheck(contract) {
  Chai.expect(contract.lendingPool).to.have.been.calledWith();
  
}

function setLendingPoolOld(_r) {
  var array = _r.setLendingPool.calls;
  return Belt_Array.map(array, (function (_m) {
                var lendingPool = _m[0];
                return {
                        lendingPool: lendingPool
                      };
              }));
}

function setLendingPoolCallCheck(contract, param) {
  Chai.expect(contract.setLendingPool).to.have.been.calledWith(param.lendingPool);
  
}

var uninitializedValue;

exports.make = make;
exports.uninitializedValue = uninitializedValue;
exports.getLendingPoolOld = getLendingPoolOld;
exports.getLendingPoolCallCheck = getLendingPoolCallCheck;
exports.lendingPoolOld = lendingPoolOld;
exports.lendingPoolCallCheck = lendingPoolCallCheck;
exports.setLendingPoolOld = setLendingPoolOld;
exports.setLendingPoolCallCheck = setLendingPoolCallCheck;
/*  Not a pure module */
