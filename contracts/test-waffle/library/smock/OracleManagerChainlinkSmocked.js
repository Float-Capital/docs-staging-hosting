// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Chai = require("chai");
var Belt_Array = require("rescript/lib/js/belt_Array.js");
var Smock = require("@defi-wonderland/smock");

const { expect, use } = require("chai");
use(require('@defi-wonderland/smock').smock.matchers);
;

function make(param) {
  return Smock.smock.fake("OracleManagerChainlink");
}

function adminOld(_r) {
  var array = _r.admin.calls;
  return Belt_Array.map(array, (function (param) {
                
              }));
}

function adminCallCheck(contract) {
  Chai.expect(contract.admin).to.have.been.calledWith();
  
}

function chainlinkOracleOld(_r) {
  var array = _r.chainlinkOracle.calls;
  return Belt_Array.map(array, (function (param) {
                
              }));
}

function chainlinkOracleCallCheck(contract) {
  Chai.expect(contract.chainlinkOracle).to.have.been.calledWith();
  
}

function changeAdminOld(_r) {
  var array = _r.changeAdmin.calls;
  return Belt_Array.map(array, (function (_m) {
                var admin = _m[0];
                return {
                        admin: admin
                      };
              }));
}

function changeAdminCallCheck(contract, param) {
  Chai.expect(contract.changeAdmin).to.have.been.calledWith(param.admin);
  
}

function getLatestPriceOld(_r) {
  var array = _r.getLatestPrice.calls;
  return Belt_Array.map(array, (function (param) {
                
              }));
}

function getLatestPriceCallCheck(contract) {
  Chai.expect(contract.getLatestPrice).to.have.been.calledWith();
  
}

function oracleDecimalsOld(_r) {
  var array = _r.oracleDecimals.calls;
  return Belt_Array.map(array, (function (param) {
                
              }));
}

function oracleDecimalsCallCheck(contract) {
  Chai.expect(contract.oracleDecimals).to.have.been.calledWith();
  
}

function updatePriceOld(_r) {
  var array = _r.updatePrice.calls;
  return Belt_Array.map(array, (function (param) {
                
              }));
}

function updatePriceCallCheck(contract) {
  Chai.expect(contract.updatePrice).to.have.been.calledWith();
  
}

var uninitializedValue;

exports.make = make;
exports.uninitializedValue = uninitializedValue;
exports.adminOld = adminOld;
exports.adminCallCheck = adminCallCheck;
exports.chainlinkOracleOld = chainlinkOracleOld;
exports.chainlinkOracleCallCheck = chainlinkOracleCallCheck;
exports.changeAdminOld = changeAdminOld;
exports.changeAdminCallCheck = changeAdminCallCheck;
exports.getLatestPriceOld = getLatestPriceOld;
exports.getLatestPriceCallCheck = getLatestPriceCallCheck;
exports.oracleDecimalsOld = oracleDecimalsOld;
exports.oracleDecimalsCallCheck = oracleDecimalsCallCheck;
exports.updatePriceOld = updatePriceOld;
exports.updatePriceCallCheck = updatePriceCallCheck;
/*  Not a pure module */
