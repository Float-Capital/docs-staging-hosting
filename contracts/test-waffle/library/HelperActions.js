// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Helpers = require("./Helpers.js");
var Belt_Array = require("bs-platform/lib/js/belt_Array.js");

function stakeRandomlyInMarkets(marketsToStakeIn, userToStakeWith, longShort) {
  return Belt_Array.reduce(marketsToStakeIn, [
              [],
              []
            ], (function (param, param$1) {
                var marketIndex = param$1.marketIndex;
                var shortSynth = param$1.shortSynth;
                var paymentToken = param$1.paymentToken;
                var synthsUserHasStakedIn = param[0];
                var mintStake = function (param) {
                  return function (param$1) {
                    return Helpers.mintAndStake(marketIndex, param, paymentToken, userToStakeWith, longShort, param$1);
                  };
                };
                var amount = Helpers.randomMintLongShort(undefined);
                var newSynthsUserHasStakedIn;
                switch (amount.TAG | 0) {
                  case /* Long */0 :
                      mintStake(amount._0)(true);
                      newSynthsUserHasStakedIn = Belt_Array.concat(synthsUserHasStakedIn, [param$1.longSynth]);
                      break;
                  case /* Short */1 :
                      mintStake(amount._0)(false);
                      newSynthsUserHasStakedIn = Belt_Array.concat(synthsUserHasStakedIn, [shortSynth]);
                      break;
                  case /* Both */2 :
                      var shortAmount = amount._1;
                      mintStake(amount._0)(true).then(function (param) {
                            return mintStake(shortAmount)(false);
                          });
                      newSynthsUserHasStakedIn = Belt_Array.concat(synthsUserHasStakedIn, [
                            shortSynth,
                            shortSynth
                          ]);
                      break;
                  
                }
                return [
                        newSynthsUserHasStakedIn,
                        Belt_Array.concat(param[1], [marketIndex])
                      ];
              }));
}

exports.stakeRandomlyInMarkets = stakeRandomlyInMarkets;
/* No side effect */
