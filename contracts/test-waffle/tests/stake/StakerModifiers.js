// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Chai = require("../../bindings/chai/Chai.js");
var Helpers = require("../../library/Helpers.js");

function testUnit(contracts, accounts) {
  describe("Staker Modifiers", (function () {
          describe("onlyAdminModifierLogic", (function () {
                  it("reverts if caller is non-admin", (function () {
                          var nonAdminWallet = accounts.contents[1];
                          return Chai.expectRevert(contracts.contents.staker.connect(nonAdminWallet).onlyAdminModifierLogicExposed(), Helpers.adminErrorMessage(nonAdminWallet.address));
                        }));
                  
                }));
          describe("onlyValidSyntheticModifierLogic", (function () {
                  it("reverts if synth invalid (i.e. has yet to be assigned an index)", (function () {
                          var randomWallet = accounts.contents[2];
                          var synthAddress = Helpers.randomAddress(undefined);
                          return Chai.expectRevert(contracts.contents.staker.connect(randomWallet).onlyValidSyntheticModifierLogicExposed(synthAddress), "not valid synth");
                        }));
                  
                }));
          describe("onlyLongShortModifierLogic", (function () {
                  it("reverts if caller is not LongShort", (function () {
                          var randomWallet = accounts.contents[3];
                          return Chai.expectRevert(contracts.contents.staker.connect(randomWallet).onlyLongShortModifierLogicExposed(), "not LongShort");
                        }));
                  
                }));
          
        }));
  
}

exports.testUnit = testUnit;
/* Chai Not a pure module */
