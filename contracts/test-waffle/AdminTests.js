// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Chai = require("./bindings/chai/Chai.js");
var LetOps = require("./library/LetOps.js");
var Globals = require("./library/Globals.js");
var Helpers = require("./library/Helpers.js");

Globals.describeUnit("Float System", (function (param) {
        describe("Admin", (function () {
                var contracts = {
                  contents: undefined
                };
                var accounts = {
                  contents: undefined
                };
                before(function () {
                      return LetOps.Await.let_(ethers.getSigners(), (function (loadedAccounts) {
                                    accounts.contents = loadedAccounts;
                                    
                                  }));
                    });
                beforeEach(function () {
                      return LetOps.Await.let_(Helpers.inititialize(accounts.contents[0], false), (function (deployedContracts) {
                                    contracts.contents = deployedContracts;
                                    
                                  }));
                    });
                it("shouldn't allow non admin to update the oracle", (function () {
                        var newOracleAddress = ethers.Wallet.createRandom().address;
                        var attackerAddress = accounts.contents[5];
                        return Chai.expectRevert(contracts.contents.longShort.connect(attackerAddress).updateMarketOracle(1, newOracleAddress), "only admin");
                      }));
                
              }));
        
      }));

/*  Not a pure module */
