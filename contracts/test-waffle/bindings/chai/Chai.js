// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';


const { expect } = require("chai");
;

var bnEqual = ((message, number1, number2) => expect(number1, message).to.equal(number2));

var bnWithin = ((number1, min, max) => expect(number1).to.be.within(min, max));

var bnCloseTo = ((number1, number2, distance) => expect(number1).to.be.closeTo(number2, distance));

var callEmitEvents = ((call, contract, eventName) => expect(call).to.emit(contract, eventName));

var expectRevertNoReason = ((transaction) => expect(transaction).to.be.reverted);

var expectRevert = ((transaction, reason) => expect(transaction).to.be.revertedWith(reason));

var changeBallance = ((transaction, token, to, amount) => expect(transaction).to.changeTokenBalance(token, to, amount));

var expectToBeAddress = ((address) => expect(address).to.be.properAddress);

var expectToBePrivateKey = ((privateKey) => expect(privateKey).to.be.properAddress);

var expectToBeHex = ((hexStr, hexLength) => expect(hexStr).to.be.properHex(hexLength));

var expectHexEqual = ((hex1, hex2) => expect(hex1).to.be.hexEqual(hex2));

exports.bnEqual = bnEqual;
exports.bnWithin = bnWithin;
exports.bnCloseTo = bnCloseTo;
exports.callEmitEvents = callEmitEvents;
exports.expectRevertNoReason = expectRevertNoReason;
exports.expectRevert = expectRevert;
exports.changeBallance = changeBallance;
exports.expectToBeAddress = expectToBeAddress;
exports.expectToBePrivateKey = expectToBePrivateKey;
exports.expectToBeHex = expectToBeHex;
exports.expectHexEqual = expectHexEqual;
/*  Not a pure module */
