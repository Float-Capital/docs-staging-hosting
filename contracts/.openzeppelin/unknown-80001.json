{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0xa5c8f4e4Dc90e6baD04eD3b5248f7Ed79331E50A",
    "txHash": "0xc6866ad822956c6f4d86ae35832bebb0351f6d61be8eb665fe454ecc50ebf5c4"
  },
  "proxies": [
    {
      "address": "0xeC7FdC3eea4d02E318330300F24469d1d08d16EB",
      "txHash": "0x4aeca5dbb3e9008dccfb98e08ef1c57bc902408dfaa00a060b1ca4f513e768ee",
      "kind": "transparent"
    },
    {
      "address": "0x263Fd5519885E4bf1c2c444d20F42b8DeF535F15",
      "txHash": "0xe005a29209f2414a581231b0e2242fefb60f8e23e6709131ea744e035edbc264",
      "kind": "transparent"
    },
    {
      "address": "0x553Eeb0A95b052Ead0fC5E4363729709E6A18F7A",
      "txHash": "0xda4cc5319bfbd03f2d36a9c3a9449cf70dd9165c22488e11edd88bfa7a370bd1",
      "kind": "transparent"
    },
    {
      "address": "0xa9d25B772f5AA249DA6bAee7Ea1F05524b0f0973",
      "txHash": "0xd68864d12feed189a6dccc2f5c3735755a73122d093e1d480cb9b48784cff68e",
      "kind": "transparent"
    }
  ],
  "impls": {
    "bceeed5d9f703bac0383cf9afcd57f0891b5bb1359e392c65b5a2dbb5194574f": {
      "address": "0x0a1F138223F29fe7605Cb78e9F961DfafA975155",
      "txHash": "0xa824413163bc79121339b49cc826670129b1123b1f7001defe4bf5f15743dbeb",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "contract": "Treasury_v0",
            "label": "admin",
            "type": "t_address",
            "src": "Treasury_v0.sol:9"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "da04e3f4fc6575894194adcbe716718b852055fb8351d559c0fbc1b9d7646fb2": {
      "address": "0x1D097f23661F2Ee5214f664F44ED39F96CfD70b8",
      "txHash": "0x2a30fd20fbcd5121d426da7866278dd6a574f3486328eb32831ef907b960175e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "contract": "Staker",
            "label": "admin",
            "type": "t_address",
            "src": "Staker.sol:25"
          },
          {
            "contract": "Staker",
            "label": "floatCapital",
            "type": "t_address",
            "src": "Staker.sol:26"
          },
          {
            "contract": "Staker",
            "label": "floatPercentage",
            "type": "t_uint256",
            "src": "Staker.sol:28"
          },
          {
            "contract": "Staker",
            "label": "longShortCoreContract",
            "type": "t_contract(ILongShort)5108",
            "src": "Staker.sol:29"
          },
          {
            "contract": "Staker",
            "label": "floatToken",
            "type": "t_contract(IFloatToken)5076",
            "src": "Staker.sol:29"
          },
          {
            "contract": "Staker",
            "label": "marketLaunchIncentivePeriod",
            "type": "t_mapping(t_uint32,t_uint256)",
            "src": "Staker.sol:30"
          },
          {
            "contract": "Staker",
            "label": "marketLaunchIncentiveMultipliers",
            "type": "t_mapping(t_uint32,t_uint256)",
            "src": "Staker.sol:31"
          },
          {
            "contract": "Staker",
            "label": "marketUnstakeFeeBasisPoints",
            "type": "t_mapping(t_uint32,t_uint256)",
            "src": "Staker.sol:32"
          },
          {
            "contract": "Staker",
            "label": "balanceIncentiveCurveExponent",
            "type": "t_mapping(t_uint32,t_uint256)",
            "src": "Staker.sol:33"
          },
          {
            "contract": "Staker",
            "label": "balanceIncentiveCurveEquilibriumOffset",
            "type": "t_mapping(t_uint32,t_int256)",
            "src": "Staker.sol:35"
          },
          {
            "contract": "Staker",
            "label": "syntheticTokens",
            "type": "t_mapping(t_uint32,t_mapping(t_bool,t_contract(ISyntheticToken)5192))",
            "src": "Staker.sol:37"
          },
          {
            "contract": "Staker",
            "label": "marketIndexOfToken",
            "type": "t_mapping(t_contract(ISyntheticToken)5192,t_uint32)",
            "src": "Staker.sol:40"
          },
          {
            "contract": "Staker",
            "label": "latestRewardIndex",
            "type": "t_mapping(t_uint32,t_uint256)",
            "src": "Staker.sol:41"
          },
          {
            "contract": "Staker",
            "label": "syntheticRewardParams",
            "type": "t_mapping(t_uint32,t_mapping(t_uint256,t_struct(RewardState)2340_storage))",
            "src": "Staker.sol:44"
          },
          {
            "contract": "Staker",
            "label": "userIndexOfLastClaimedReward",
            "type": "t_mapping(t_uint32,t_mapping(t_address,t_uint256))",
            "src": "Staker.sol:50"
          },
          {
            "contract": "Staker",
            "label": "userAmountStaked",
            "type": "t_mapping(t_contract(ISyntheticToken)5192,t_mapping(t_address,t_uint256))",
            "src": "Staker.sol:53"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(ILongShort)5108": {
            "label": "contract ILongShort"
          },
          "t_contract(IFloatToken)5076": {
            "label": "contract IFloatToken"
          },
          "t_mapping(t_uint32,t_uint256)": {
            "label": "mapping(uint32 => uint256)"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_mapping(t_uint32,t_int256)": {
            "label": "mapping(uint32 => int256)"
          },
          "t_int256": {
            "label": "int256"
          },
          "t_mapping(t_uint32,t_mapping(t_bool,t_contract(ISyntheticToken)5192))": {
            "label": "mapping(uint32 => mapping(bool => contract ISyntheticToken))"
          },
          "t_mapping(t_bool,t_contract(ISyntheticToken)5192)": {
            "label": "mapping(bool => contract ISyntheticToken)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_contract(ISyntheticToken)5192": {
            "label": "contract ISyntheticToken"
          },
          "t_mapping(t_contract(ISyntheticToken)5192,t_uint32)": {
            "label": "mapping(contract ISyntheticToken => uint32)"
          },
          "t_mapping(t_uint32,t_mapping(t_uint256,t_struct(RewardState)2340_storage))": {
            "label": "mapping(uint32 => mapping(uint256 => struct Staker.RewardState))"
          },
          "t_mapping(t_uint256,t_struct(RewardState)2340_storage)": {
            "label": "mapping(uint256 => struct Staker.RewardState)"
          },
          "t_struct(RewardState)2340_storage": {
            "label": "struct Staker.RewardState",
            "members": [
              {
                "label": "timestamp",
                "type": "t_uint256"
              },
              {
                "label": "accumulativeFloatPerLongToken",
                "type": "t_uint256"
              },
              {
                "label": "accumulativeFloatPerShortToken",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint32,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint32 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_contract(ISyntheticToken)5192,t_mapping(t_address,t_uint256))": {
            "label": "mapping(contract ISyntheticToken => mapping(address => uint256))"
          }
        }
      }
    },
    "df2d607a2c91cfa7875ce9eff31113f55d2fe5372ab750b2091e9e9e0fbfc3ce": {
      "address": "0x6ab60bFD86e32E22aDf6E257c19386C4E4949eE8",
      "txHash": "0x484a640538fbeb54c391b77cb97ae290cf76af19626676706936858914280fa5",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "contract": "LongShort",
            "label": "__constantsGap",
            "type": "t_array(t_uint256)45_storage",
            "src": "LongShort.sol:32"
          },
          {
            "contract": "LongShort",
            "label": "admin",
            "type": "t_address",
            "src": "LongShort.sol:35"
          },
          {
            "contract": "LongShort",
            "label": "treasury",
            "type": "t_address",
            "src": "LongShort.sol:36"
          },
          {
            "contract": "LongShort",
            "label": "latestMarket",
            "type": "t_uint32",
            "src": "LongShort.sol:36"
          },
          {
            "contract": "LongShort",
            "label": "staker",
            "type": "t_contract(IStaker)5167",
            "src": "LongShort.sol:39"
          },
          {
            "contract": "LongShort",
            "label": "tokenFactory",
            "type": "t_contract(ITokenFactory)5227",
            "src": "LongShort.sol:39"
          },
          {
            "contract": "LongShort",
            "label": "__globalStateGap",
            "type": "t_array(t_uint256)45_storage",
            "src": "LongShort.sol:40"
          },
          {
            "contract": "LongShort",
            "label": "marketExists",
            "type": "t_mapping(t_uint32,t_bool)",
            "src": "LongShort.sol:41"
          },
          {
            "contract": "LongShort",
            "label": "assetPrice",
            "type": "t_mapping(t_uint32,t_uint256)",
            "src": "LongShort.sol:42"
          },
          {
            "contract": "LongShort",
            "label": "marketUpdateIndex",
            "type": "t_mapping(t_uint32,t_uint256)",
            "src": "LongShort.sol:43"
          },
          {
            "contract": "LongShort",
            "label": "paymentTokens",
            "type": "t_mapping(t_uint32,t_contract(IERC20)21519)",
            "src": "LongShort.sol:44"
          },
          {
            "contract": "LongShort",
            "label": "yieldManagers",
            "type": "t_mapping(t_uint32,t_contract(IYieldManager)5276)",
            "src": "LongShort.sol:46"
          },
          {
            "contract": "LongShort",
            "label": "oracleManagers",
            "type": "t_mapping(t_uint32,t_contract(IOracleManager)5121)",
            "src": "LongShort.sol:47"
          },
          {
            "contract": "LongShort",
            "label": "syntheticTokens",
            "type": "t_mapping(t_uint32,t_mapping(t_bool,t_contract(ISyntheticToken)5192))",
            "src": "LongShort.sol:48"
          },
          {
            "contract": "LongShort",
            "label": "syntheticTokenPoolValue",
            "type": "t_mapping(t_uint32,t_mapping(t_bool,t_uint256))",
            "src": "LongShort.sol:50"
          },
          {
            "contract": "LongShort",
            "label": "syntheticTokenPriceSnapshot",
            "type": "t_mapping(t_uint32,t_mapping(t_bool,t_mapping(t_uint256,t_uint256)))",
            "src": "LongShort.sol:53"
          },
          {
            "contract": "LongShort",
            "label": "batchedAmountOfTokensToDeposit",
            "type": "t_mapping(t_uint32,t_mapping(t_bool,t_uint256))",
            "src": "LongShort.sol:54"
          },
          {
            "contract": "LongShort",
            "label": "batchedAmountOfSynthTokensToRedeem",
            "type": "t_mapping(t_uint32,t_mapping(t_bool,t_uint256))",
            "src": "LongShort.sol:57"
          },
          {
            "contract": "LongShort",
            "label": "userCurrentNextPriceUpdateIndex",
            "type": "t_mapping(t_uint32,t_mapping(t_address,t_uint256))",
            "src": "LongShort.sol:59"
          },
          {
            "contract": "LongShort",
            "label": "userNextPriceDepositAmount",
            "type": "t_mapping(t_uint32,t_mapping(t_bool,t_mapping(t_address,t_uint256)))",
            "src": "LongShort.sol:60"
          },
          {
            "contract": "LongShort",
            "label": "userNextPriceRedemptionAmount",
            "type": "t_mapping(t_uint32,t_mapping(t_bool,t_mapping(t_address,t_uint256)))",
            "src": "LongShort.sol:63"
          }
        ],
        "types": {
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_contract(IStaker)5167": {
            "label": "contract IStaker"
          },
          "t_contract(ITokenFactory)5227": {
            "label": "contract ITokenFactory"
          },
          "t_mapping(t_uint32,t_bool)": {
            "label": "mapping(uint32 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint32,t_uint256)": {
            "label": "mapping(uint32 => uint256)"
          },
          "t_mapping(t_uint32,t_contract(IERC20)21519)": {
            "label": "mapping(uint32 => contract IERC20)"
          },
          "t_contract(IERC20)21519": {
            "label": "contract IERC20"
          },
          "t_mapping(t_uint32,t_contract(IYieldManager)5276)": {
            "label": "mapping(uint32 => contract IYieldManager)"
          },
          "t_contract(IYieldManager)5276": {
            "label": "contract IYieldManager"
          },
          "t_mapping(t_uint32,t_contract(IOracleManager)5121)": {
            "label": "mapping(uint32 => contract IOracleManager)"
          },
          "t_contract(IOracleManager)5121": {
            "label": "contract IOracleManager"
          },
          "t_mapping(t_uint32,t_mapping(t_bool,t_contract(ISyntheticToken)5192))": {
            "label": "mapping(uint32 => mapping(bool => contract ISyntheticToken))"
          },
          "t_mapping(t_bool,t_contract(ISyntheticToken)5192)": {
            "label": "mapping(bool => contract ISyntheticToken)"
          },
          "t_contract(ISyntheticToken)5192": {
            "label": "contract ISyntheticToken"
          },
          "t_mapping(t_uint32,t_mapping(t_bool,t_uint256))": {
            "label": "mapping(uint32 => mapping(bool => uint256))"
          },
          "t_mapping(t_bool,t_uint256)": {
            "label": "mapping(bool => uint256)"
          },
          "t_mapping(t_uint32,t_mapping(t_bool,t_mapping(t_uint256,t_uint256)))": {
            "label": "mapping(uint32 => mapping(bool => mapping(uint256 => uint256)))"
          },
          "t_mapping(t_bool,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(bool => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint32,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint32 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint32,t_mapping(t_bool,t_mapping(t_address,t_uint256)))": {
            "label": "mapping(uint32 => mapping(bool => mapping(address => uint256)))"
          },
          "t_mapping(t_bool,t_mapping(t_address,t_uint256))": {
            "label": "mapping(bool => mapping(address => uint256))"
          }
        }
      }
    }
  }
}
