{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x8ca3215e53dfa690B837cd1ed846e322993D5c64",
    "txHash": "0x4ac07c85905c14f1416d2795ae624868796d8fb6068b807cf6a49436bff4b031"
  },
  "proxies": [
    {
      "address": "0x9999D1a082d136d9Ad8B545cC98977950F79f269",
      "txHash": "0x56eea73703473273ab60e00214a394ba47447e8b271c8b489c88118f95646ff2",
      "kind": "transparent"
    },
    {
      "address": "0xA9247A12840529cCC14bcEf313070d063Af1c3B6",
      "txHash": "0x94af159f57d060e470569bc1ade502b1747d2bd5c7ab20a4e8b86e5298a6667a",
      "kind": "transparent"
    },
    {
      "address": "0x8046bD40C9925F78a2b2Ea8D6422EF6049035382",
      "txHash": "0x9bd21fff1611b93cade4a04c916ccdb53662d077df773e0eed204a2bbb7a99ec",
      "kind": "transparent"
    },
    {
      "address": "0xBa2d98e8161519bd374473c7F3375AEEEc35D360",
      "txHash": "0xa8b9eeca831cea43eb9cd3a930792a4768dbd03d4d4432b79c265ec4350dc7dd",
      "kind": "transparent"
    }
  ],
  "impls": {
    "bceeed5d9f703bac0383cf9afcd57f0891b5bb1359e392c65b5a2dbb5194574f": {
      "address": "0x9356BB5ab14475823345ABB3A3c10854f89141b1",
      "txHash": "0x0c13c5d707d501792d97104616ab65b3904e7ddbd96dcd490bd8fb46fb66a74e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "contract": "Treasury_v0",
            "label": "admin",
            "type": "t_address",
            "src": "Treasury_v0.sol:9"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "05d31d9a3c9da821e39f556e45f9257f5974400d2ba723911baa217e7655b1f7": {
      "address": "0xf8D658951222AAAcB234b5C8492BDcaCC95AF780",
      "txHash": "0xe76cb3e5d5b2558a05f47bb8a67e80ffbbc2d495d33e11b0d56670577003fe08",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "contract": "Staker",
            "label": "marketLaunchIncentivePeriod",
            "type": "t_mapping(t_uint32,t_uint256)",
            "src": "Staker.sol:45"
          },
          {
            "contract": "Staker",
            "label": "marketLaunchIncentiveMultipliers",
            "type": "t_mapping(t_uint32,t_uint256)",
            "src": "Staker.sol:46"
          },
          {
            "contract": "Staker",
            "label": "__stakeParametersGap",
            "type": "t_array(t_uint256)45_storage",
            "src": "Staker.sol:47"
          },
          {
            "contract": "Staker",
            "label": "admin",
            "type": "t_address",
            "src": "Staker.sol:54"
          },
          {
            "contract": "Staker",
            "label": "floatCapital",
            "type": "t_address",
            "src": "Staker.sol:55"
          },
          {
            "contract": "Staker",
            "label": "floatPercentage",
            "type": "t_uint16",
            "src": "Staker.sol:56"
          },
          {
            "contract": "Staker",
            "label": "longShortCoreContract",
            "type": "t_contract(ILongShort)5030",
            "src": "Staker.sol:57"
          },
          {
            "contract": "Staker",
            "label": "floatToken",
            "type": "t_contract(IFloatToken)4998",
            "src": "Staker.sol:58"
          },
          {
            "contract": "Staker",
            "label": "__globalParamsGap",
            "type": "t_array(t_uint256)45_storage",
            "src": "Staker.sol:59"
          },
          {
            "contract": "Staker",
            "label": "userAmountStaked",
            "type": "t_mapping(t_contract(ISyntheticToken)5108,t_mapping(t_address,t_uint256))",
            "src": "Staker.sol:63"
          },
          {
            "contract": "Staker",
            "label": "__userInfoGap",
            "type": "t_array(t_uint256)45_storage",
            "src": "Staker.sol:65"
          },
          {
            "contract": "Staker",
            "label": "marketIndexOfToken",
            "type": "t_mapping(t_contract(ISyntheticToken)5108,t_uint32)",
            "src": "Staker.sol:68"
          },
          {
            "contract": "Staker",
            "label": "__tokenInfoGap",
            "type": "t_array(t_uint256)45_storage",
            "src": "Staker.sol:69"
          },
          {
            "contract": "Staker",
            "label": "userIndexOfLastClaimedReward",
            "type": "t_mapping(t_uint32,t_mapping(t_address,t_uint256))",
            "src": "Staker.sol:72"
          },
          {
            "contract": "Staker",
            "label": "batchedStake",
            "type": "t_mapping(t_uint32,t_mapping(t_uint256,t_struct(BatchedStake)2550_storage))",
            "src": "Staker.sol:74"
          },
          {
            "contract": "Staker",
            "label": "syntheticTokens",
            "type": "t_mapping(t_uint32,t_struct(SyntheticTokens)2543_storage)",
            "src": "Staker.sol:75"
          },
          {
            "contract": "Staker",
            "label": "syntheticRewardParams",
            "type": "t_mapping(t_uint32,t_mapping(t_uint256,t_struct(RewardState)2536_storage))",
            "src": "Staker.sol:76"
          },
          {
            "contract": "Staker",
            "label": "latestRewardIndex",
            "type": "t_mapping(t_uint32,t_uint256)",
            "src": "Staker.sol:78"
          }
        ],
        "types": {
          "t_mapping(t_uint32,t_uint256)": {
            "label": "mapping(uint32 => uint256)"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_contract(ILongShort)5030": {
            "label": "contract ILongShort"
          },
          "t_contract(IFloatToken)4998": {
            "label": "contract IFloatToken"
          },
          "t_mapping(t_contract(ISyntheticToken)5108,t_mapping(t_address,t_uint256))": {
            "label": "mapping(contract ISyntheticToken => mapping(address => uint256))"
          },
          "t_contract(ISyntheticToken)5108": {
            "label": "contract ISyntheticToken"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_contract(ISyntheticToken)5108,t_uint32)": {
            "label": "mapping(contract ISyntheticToken => uint32)"
          },
          "t_mapping(t_uint32,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint32 => mapping(address => uint256))"
          },
          "t_mapping(t_uint32,t_mapping(t_uint256,t_struct(BatchedStake)2550_storage))": {
            "label": "mapping(uint32 => mapping(uint256 => struct Staker.BatchedStake))"
          },
          "t_mapping(t_uint256,t_struct(BatchedStake)2550_storage)": {
            "label": "mapping(uint256 => struct Staker.BatchedStake)"
          },
          "t_struct(BatchedStake)2550_storage": {
            "label": "struct Staker.BatchedStake",
            "members": [
              {
                "label": "amountLong",
                "type": "t_uint256"
              },
              {
                "label": "amountShort",
                "type": "t_uint256"
              },
              {
                "label": "creationRewardIndex",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint32,t_struct(SyntheticTokens)2543_storage)": {
            "label": "mapping(uint32 => struct Staker.SyntheticTokens)"
          },
          "t_struct(SyntheticTokens)2543_storage": {
            "label": "struct Staker.SyntheticTokens",
            "members": [
              {
                "label": "shortToken",
                "type": "t_contract(ISyntheticToken)5108"
              },
              {
                "label": "longToken",
                "type": "t_contract(ISyntheticToken)5108"
              }
            ]
          },
          "t_mapping(t_uint32,t_mapping(t_uint256,t_struct(RewardState)2536_storage))": {
            "label": "mapping(uint32 => mapping(uint256 => struct Staker.RewardState))"
          },
          "t_mapping(t_uint256,t_struct(RewardState)2536_storage)": {
            "label": "mapping(uint256 => struct Staker.RewardState)"
          },
          "t_struct(RewardState)2536_storage": {
            "label": "struct Staker.RewardState",
            "members": [
              {
                "label": "timestamp",
                "type": "t_uint256"
              },
              {
                "label": "accumulativeFloatPerLongToken",
                "type": "t_uint256"
              },
              {
                "label": "accumulativeFloatPerShortToken",
                "type": "t_uint256"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "f7dc2ccb47951c59313cd22f35f81b9b9fce4b2e34d29b75bad8f70a88de3302": {
      "address": "0x62840191789c193f6db1e948DA00CDbFe615c329",
      "txHash": "0xf0baef0538ba924f36a75047e95299f16e4fc144f2d8bc4172a7b704b4b0bd39",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "contract": "LongShort",
            "label": "__constantsGap",
            "type": "t_array(t_uint256)45_storage",
            "src": "LongShort.sol:39"
          },
          {
            "contract": "LongShort",
            "label": "admin",
            "type": "t_address",
            "src": "LongShort.sol:43"
          },
          {
            "contract": "LongShort",
            "label": "treasury",
            "type": "t_address",
            "src": "LongShort.sol:44"
          },
          {
            "contract": "LongShort",
            "label": "latestMarket",
            "type": "t_uint32",
            "src": "LongShort.sol:44"
          },
          {
            "contract": "LongShort",
            "label": "staker",
            "type": "t_contract(IStaker)5083",
            "src": "LongShort.sol:46"
          },
          {
            "contract": "LongShort",
            "label": "tokenFactory",
            "type": "t_contract(ITokenFactory)5143",
            "src": "LongShort.sol:46"
          },
          {
            "contract": "LongShort",
            "label": "__globalStateGap",
            "type": "t_array(t_uint256)45_storage",
            "src": "LongShort.sol:47"
          },
          {
            "contract": "LongShort",
            "label": "marketExists",
            "type": "t_mapping(t_uint32,t_bool)",
            "src": "LongShort.sol:49"
          },
          {
            "contract": "LongShort",
            "label": "assetPrice",
            "type": "t_mapping(t_uint32,t_uint256)",
            "src": "LongShort.sol:50"
          },
          {
            "contract": "LongShort",
            "label": "marketUpdateIndex",
            "type": "t_mapping(t_uint32,t_uint256)",
            "src": "LongShort.sol:51"
          },
          {
            "contract": "LongShort",
            "label": "totalFeesReservedForTreasury",
            "type": "t_mapping(t_uint32,t_uint256)",
            "src": "LongShort.sol:52"
          },
          {
            "contract": "LongShort",
            "label": "fundTokens",
            "type": "t_mapping(t_uint32,t_contract(IERC20)19576)",
            "src": "LongShort.sol:53"
          },
          {
            "contract": "LongShort",
            "label": "yieldManagers",
            "type": "t_mapping(t_uint32,t_contract(IYieldManager)5191)",
            "src": "LongShort.sol:55"
          },
          {
            "contract": "LongShort",
            "label": "oracleManagers",
            "type": "t_mapping(t_uint32,t_contract(IOracleManager)5043)",
            "src": "LongShort.sol:56"
          },
          {
            "contract": "LongShort",
            "label": "baseEntryFee",
            "type": "t_mapping(t_uint32,t_uint256)",
            "src": "LongShort.sol:57"
          },
          {
            "contract": "LongShort",
            "label": "badLiquidityEntryFee",
            "type": "t_mapping(t_uint32,t_uint256)",
            "src": "LongShort.sol:58"
          },
          {
            "contract": "LongShort",
            "label": "baseExitFee",
            "type": "t_mapping(t_uint32,t_uint256)",
            "src": "LongShort.sol:60"
          },
          {
            "contract": "LongShort",
            "label": "badLiquidityExitFee",
            "type": "t_mapping(t_uint32,t_uint256)",
            "src": "LongShort.sol:61"
          },
          {
            "contract": "LongShort",
            "label": "syntheticTokens",
            "type": "t_mapping(t_uint32,t_mapping(t_bool,t_contract(ISyntheticToken)5108))",
            "src": "LongShort.sol:62"
          },
          {
            "contract": "LongShort",
            "label": "syntheticTokenPoolValue",
            "type": "t_mapping(t_uint32,t_mapping(t_bool,t_uint256))",
            "src": "LongShort.sol:64"
          },
          {
            "contract": "LongShort",
            "label": "syntheticTokenPriceSnapshot",
            "type": "t_mapping(t_uint32,t_mapping(t_bool,t_mapping(t_uint256,t_uint256)))",
            "src": "LongShort.sol:67"
          },
          {
            "contract": "LongShort",
            "label": "batchedAmountOfTokensToDeposit",
            "type": "t_mapping(t_uint32,t_mapping(t_bool,t_uint256))",
            "src": "LongShort.sol:69"
          },
          {
            "contract": "LongShort",
            "label": "batchedAmountOfSynthTokensToRedeem",
            "type": "t_mapping(t_uint32,t_mapping(t_bool,t_uint256))",
            "src": "LongShort.sol:72"
          },
          {
            "contract": "LongShort",
            "label": "userCurrentNextPriceUpdateIndex",
            "type": "t_mapping(t_uint32,t_mapping(t_address,t_uint256))",
            "src": "LongShort.sol:76"
          },
          {
            "contract": "LongShort",
            "label": "userNextPriceDepositAmount",
            "type": "t_mapping(t_uint32,t_mapping(t_bool,t_mapping(t_address,t_uint256)))",
            "src": "LongShort.sol:78"
          },
          {
            "contract": "LongShort",
            "label": "userNextPriceRedemptionAmount",
            "type": "t_mapping(t_uint32,t_mapping(t_bool,t_mapping(t_address,t_uint256)))",
            "src": "LongShort.sol:81"
          }
        ],
        "types": {
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_contract(IStaker)5083": {
            "label": "contract IStaker"
          },
          "t_contract(ITokenFactory)5143": {
            "label": "contract ITokenFactory"
          },
          "t_mapping(t_uint32,t_bool)": {
            "label": "mapping(uint32 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint32,t_uint256)": {
            "label": "mapping(uint32 => uint256)"
          },
          "t_mapping(t_uint32,t_contract(IERC20)19576)": {
            "label": "mapping(uint32 => contract IERC20)"
          },
          "t_contract(IERC20)19576": {
            "label": "contract IERC20"
          },
          "t_mapping(t_uint32,t_contract(IYieldManager)5191)": {
            "label": "mapping(uint32 => contract IYieldManager)"
          },
          "t_contract(IYieldManager)5191": {
            "label": "contract IYieldManager"
          },
          "t_mapping(t_uint32,t_contract(IOracleManager)5043)": {
            "label": "mapping(uint32 => contract IOracleManager)"
          },
          "t_contract(IOracleManager)5043": {
            "label": "contract IOracleManager"
          },
          "t_mapping(t_uint32,t_mapping(t_bool,t_contract(ISyntheticToken)5108))": {
            "label": "mapping(uint32 => mapping(bool => contract ISyntheticToken))"
          },
          "t_mapping(t_bool,t_contract(ISyntheticToken)5108)": {
            "label": "mapping(bool => contract ISyntheticToken)"
          },
          "t_contract(ISyntheticToken)5108": {
            "label": "contract ISyntheticToken"
          },
          "t_mapping(t_uint32,t_mapping(t_bool,t_uint256))": {
            "label": "mapping(uint32 => mapping(bool => uint256))"
          },
          "t_mapping(t_bool,t_uint256)": {
            "label": "mapping(bool => uint256)"
          },
          "t_mapping(t_uint32,t_mapping(t_bool,t_mapping(t_uint256,t_uint256)))": {
            "label": "mapping(uint32 => mapping(bool => mapping(uint256 => uint256)))"
          },
          "t_mapping(t_bool,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(bool => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint32,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint32 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint32,t_mapping(t_bool,t_mapping(t_address,t_uint256)))": {
            "label": "mapping(uint32 => mapping(bool => mapping(address => uint256)))"
          },
          "t_mapping(t_bool,t_mapping(t_address,t_uint256))": {
            "label": "mapping(bool => mapping(address => uint256))"
          }
        }
      }
    }
  }
}
